{"ast":null,"code":"import TokenId from \"./TokenId.js\";\nimport AccountId from \"../account/AccountId.js\";\nimport Transaction, { TRANSACTION_REGISTRY } from \"../transaction/Transaction.js\";\nimport Long from \"long\";\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").ITransaction} proto.ITransaction\n * @typedef {import(\"@hashgraph/proto\").ISignedTransaction} proto.ISignedTransaction\n * @typedef {import(\"@hashgraph/proto\").TransactionBody} proto.TransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionBody} proto.ITransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionResponse} proto.ITransactionResponse\n * @typedef {import(\"@hashgraph/proto\").ITokenWipeAccountTransactionBody} proto.ITokenWipeAccountTransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITokenID} proto.ITokenID\n */\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n * @typedef {import(\"../transaction/TransactionId.js\").default} TransactionId\n */\n\n/**\n * Wipe a new Hederaâ„¢ crypto-currency token.\n */\n\nexport default class TokenWipeTransaction extends Transaction {\n  /**\n   * @param {object} [props]\n   * @param {TokenId | string} [props.tokenId]\n   * @param {AccountId | string} [props.accountId]\n   * @param {Long | number} [props.amount]\n   * @param {(Long | number)[]} [props.serials]\n   */\n  constructor() {\n    let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super();\n    /**\n     * @private\n     * @type {?TokenId}\n     */\n\n    this._tokenId = null;\n    /**\n     * @private\n     * @type {?AccountId}\n     */\n\n    this._accountId = null;\n    /**\n     * @private\n     * @type {Long[]}\n     */\n\n    this._serials = [];\n    /**\n     * @private\n     * @type {?Long}\n     */\n\n    this._amount = null;\n\n    if (props.tokenId != null) {\n      this.setTokenId(props.tokenId);\n    }\n\n    if (props.accountId != null) {\n      this.setAccountId(props.accountId);\n    }\n\n    if (props.amount != null) {\n      this.setAmount(props.amount);\n    }\n\n    if (props.serials != null) {\n      this.setSerials(props.serials);\n    }\n  }\n  /**\n   * @internal\n   * @param {proto.ITransaction[]} transactions\n   * @param {proto.ISignedTransaction[]} signedTransactions\n   * @param {TransactionId[]} transactionIds\n   * @param {AccountId[]} nodeIds\n   * @param {proto.ITransactionBody[]} bodies\n   * @returns {TokenWipeTransaction}\n   */\n\n\n  static _fromProtobuf(transactions, signedTransactions, transactionIds, nodeIds, bodies) {\n    const body = bodies[0];\n    const wipeToken =\n    /** @type {proto.ITokenWipeAccountTransactionBody} */\n    body.tokenWipe;\n    return Transaction._fromProtobufTransactions(new TokenWipeTransaction({\n      tokenId: wipeToken.token != null ? TokenId._fromProtobuf(wipeToken.token) : undefined,\n      accountId: wipeToken.account != null ? AccountId._fromProtobuf(wipeToken.account) : undefined,\n      amount: wipeToken.amount != null ? wipeToken.amount : undefined\n    }), transactions, signedTransactions, transactionIds, nodeIds, bodies);\n  }\n  /**\n   * @returns {?TokenId}\n   */\n\n\n  get tokenId() {\n    return this._tokenId;\n  }\n  /**\n   * @param {TokenId | string} tokenId\n   * @returns {this}\n   */\n\n\n  setTokenId(tokenId) {\n    this._requireNotFrozen();\n\n    this._tokenId = typeof tokenId === \"string\" ? TokenId.fromString(tokenId) : tokenId.clone();\n    return this;\n  }\n  /**\n   * @returns {?AccountId}\n   */\n\n\n  get accountId() {\n    return this._accountId;\n  }\n  /**\n   * @param {AccountId | string} accountId\n   * @returns {this}\n   */\n\n\n  setAccountId(accountId) {\n    this._requireNotFrozen();\n\n    this._accountId = typeof accountId === \"string\" ? AccountId.fromString(accountId) : accountId.clone();\n    return this;\n  }\n  /**\n   * @returns {?Long}\n   */\n\n\n  get amount() {\n    return this._amount;\n  }\n  /**\n   * @param {Long | number} amount\n   * @returns {this}\n   */\n\n\n  setAmount(amount) {\n    this._requireNotFrozen();\n\n    this._amount = amount instanceof Long ? amount : Long.fromValue(amount);\n    return this;\n  }\n  /**\n   * @param {Client} client\n   */\n\n\n  _validateChecksums(client) {\n    if (this._tokenId != null) {\n      this._tokenId.validateChecksum(client);\n    }\n\n    if (this._accountId != null) {\n      this._accountId.validateChecksum(client);\n    }\n  }\n  /**\n   * @returns {Long[]}\n   */\n\n\n  get serials() {\n    return this._serials;\n  }\n  /**\n   * @param {(Long | number)[]} serials\n   * @returns {this}\n   */\n\n\n  setSerials(serials) {\n    this._requireNotFrozen();\n\n    this._serials = serials.map(serial => typeof serial === \"number\" ? Long.fromNumber(serial) : serial);\n    return this;\n  }\n  /**\n   * @override\n   * @internal\n   * @param {Channel} channel\n   * @param {proto.ITransaction} request\n   * @returns {Promise<proto.ITransactionResponse>}\n   */\n\n\n  _execute(channel, request) {\n    return channel.token.wipeTokenAccount(request);\n  }\n  /**\n   * @override\n   * @protected\n   * @returns {NonNullable<proto.TransactionBody[\"data\"]>}\n   */\n\n\n  _getTransactionDataCase() {\n    return \"tokenWipe\";\n  }\n  /**\n   * @override\n   * @protected\n   * @returns {proto.ITokenWipeAccountTransactionBody}\n   */\n\n\n  _makeTransactionData() {\n    return {\n      amount: this._amount,\n      token: this._tokenId != null ? this._tokenId._toProtobuf() : null,\n      account: this._accountId != null ? this._accountId._toProtobuf() : null,\n      serialNumbers: this.serials\n    };\n  }\n\n}\nTRANSACTION_REGISTRY.set(\"tokenWipe\", // eslint-disable-next-line @typescript-eslint/unbound-method\nTokenWipeTransaction._fromProtobuf);","map":{"version":3,"sources":["C:/Work/coding-sandbox/react-again/dapp-days/node_modules/@hashgraph/sdk/src/token/TokenWipeTransaction.js"],"names":["TokenId","AccountId","Transaction","TRANSACTION_REGISTRY","Long","TokenWipeTransaction","constructor","props","_tokenId","_accountId","_serials","_amount","tokenId","setTokenId","accountId","setAccountId","amount","setAmount","serials","setSerials","_fromProtobuf","transactions","signedTransactions","transactionIds","nodeIds","bodies","body","wipeToken","tokenWipe","_fromProtobufTransactions","token","undefined","account","_requireNotFrozen","fromString","clone","fromValue","_validateChecksums","client","validateChecksum","map","serial","fromNumber","_execute","channel","request","wipeTokenAccount","_getTransactionDataCase","_makeTransactionData","_toProtobuf","serialNumbers","set"],"mappings":"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","sourcesContent":["import TokenId from \"./TokenId.js\";\nimport AccountId from \"../account/AccountId.js\";\nimport Transaction, {\n    TRANSACTION_REGISTRY,\n} from \"../transaction/Transaction.js\";\nimport Long from \"long\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").ITransaction} proto.ITransaction\n * @typedef {import(\"@hashgraph/proto\").ISignedTransaction} proto.ISignedTransaction\n * @typedef {import(\"@hashgraph/proto\").TransactionBody} proto.TransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionBody} proto.ITransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionResponse} proto.ITransactionResponse\n * @typedef {import(\"@hashgraph/proto\").ITokenWipeAccountTransactionBody} proto.ITokenWipeAccountTransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITokenID} proto.ITokenID\n */\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n * @typedef {import(\"../transaction/TransactionId.js\").default} TransactionId\n */\n\n/**\n * Wipe a new Hederaâ„¢ crypto-currency token.\n */\nexport default class TokenWipeTransaction extends Transaction {\n    /**\n     * @param {object} [props]\n     * @param {TokenId | string} [props.tokenId]\n     * @param {AccountId | string} [props.accountId]\n     * @param {Long | number} [props.amount]\n     * @param {(Long | number)[]} [props.serials]\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @private\n         * @type {?TokenId}\n         */\n        this._tokenId = null;\n\n        /**\n         * @private\n         * @type {?AccountId}\n         */\n        this._accountId = null;\n\n        /**\n         * @private\n         * @type {Long[]}\n         */\n        this._serials = [];\n\n        /**\n         * @private\n         * @type {?Long}\n         */\n        this._amount = null;\n\n        if (props.tokenId != null) {\n            this.setTokenId(props.tokenId);\n        }\n\n        if (props.accountId != null) {\n            this.setAccountId(props.accountId);\n        }\n\n        if (props.amount != null) {\n            this.setAmount(props.amount);\n        }\n\n        if (props.serials != null) {\n            this.setSerials(props.serials);\n        }\n    }\n\n    /**\n     * @internal\n     * @param {proto.ITransaction[]} transactions\n     * @param {proto.ISignedTransaction[]} signedTransactions\n     * @param {TransactionId[]} transactionIds\n     * @param {AccountId[]} nodeIds\n     * @param {proto.ITransactionBody[]} bodies\n     * @returns {TokenWipeTransaction}\n     */\n    static _fromProtobuf(\n        transactions,\n        signedTransactions,\n        transactionIds,\n        nodeIds,\n        bodies\n    ) {\n        const body = bodies[0];\n        const wipeToken =\n            /** @type {proto.ITokenWipeAccountTransactionBody} */ (\n                body.tokenWipe\n            );\n\n        return Transaction._fromProtobufTransactions(\n            new TokenWipeTransaction({\n                tokenId:\n                    wipeToken.token != null\n                        ? TokenId._fromProtobuf(wipeToken.token)\n                        : undefined,\n                accountId:\n                    wipeToken.account != null\n                        ? AccountId._fromProtobuf(wipeToken.account)\n                        : undefined,\n                amount: wipeToken.amount != null ? wipeToken.amount : undefined,\n            }),\n            transactions,\n            signedTransactions,\n            transactionIds,\n            nodeIds,\n            bodies\n        );\n    }\n\n    /**\n     * @returns {?TokenId}\n     */\n    get tokenId() {\n        return this._tokenId;\n    }\n\n    /**\n     * @param {TokenId | string} tokenId\n     * @returns {this}\n     */\n    setTokenId(tokenId) {\n        this._requireNotFrozen();\n        this._tokenId =\n            typeof tokenId === \"string\"\n                ? TokenId.fromString(tokenId)\n                : tokenId.clone();\n\n        return this;\n    }\n\n    /**\n     * @returns {?AccountId}\n     */\n    get accountId() {\n        return this._accountId;\n    }\n\n    /**\n     * @param {AccountId | string} accountId\n     * @returns {this}\n     */\n    setAccountId(accountId) {\n        this._requireNotFrozen();\n        this._accountId =\n            typeof accountId === \"string\"\n                ? AccountId.fromString(accountId)\n                : accountId.clone();\n\n        return this;\n    }\n\n    /**\n     * @returns {?Long}\n     */\n    get amount() {\n        return this._amount;\n    }\n\n    /**\n     * @param {Long | number} amount\n     * @returns {this}\n     */\n    setAmount(amount) {\n        this._requireNotFrozen();\n        this._amount = amount instanceof Long ? amount : Long.fromValue(amount);\n\n        return this;\n    }\n\n    /**\n     * @param {Client} client\n     */\n    _validateChecksums(client) {\n        if (this._tokenId != null) {\n            this._tokenId.validateChecksum(client);\n        }\n\n        if (this._accountId != null) {\n            this._accountId.validateChecksum(client);\n        }\n    }\n\n    /**\n     * @returns {Long[]}\n     */\n    get serials() {\n        return this._serials;\n    }\n\n    /**\n     * @param {(Long | number)[]} serials\n     * @returns {this}\n     */\n    setSerials(serials) {\n        this._requireNotFrozen();\n        this._serials = serials.map((serial) =>\n            typeof serial === \"number\" ? Long.fromNumber(serial) : serial\n        );\n\n        return this;\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {proto.ITransaction} request\n     * @returns {Promise<proto.ITransactionResponse>}\n     */\n    _execute(channel, request) {\n        return channel.token.wipeTokenAccount(request);\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {NonNullable<proto.TransactionBody[\"data\"]>}\n     */\n    _getTransactionDataCase() {\n        return \"tokenWipe\";\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {proto.ITokenWipeAccountTransactionBody}\n     */\n    _makeTransactionData() {\n        return {\n            amount: this._amount,\n            token: this._tokenId != null ? this._tokenId._toProtobuf() : null,\n            account:\n                this._accountId != null ? this._accountId._toProtobuf() : null,\n            serialNumbers: this.serials,\n        };\n    }\n}\n\nTRANSACTION_REGISTRY.set(\n    \"tokenWipe\",\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    TokenWipeTransaction._fromProtobuf\n);\n"]},"metadata":{},"sourceType":"module"}