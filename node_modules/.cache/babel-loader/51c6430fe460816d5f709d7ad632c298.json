{"ast":null,"code":"\"use strict\";\n\nmodule.exports = EventEmitter;\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\n\nfunction EventEmitter() {\n  /**\r\n   * Registered listeners.\r\n   * @type {Object.<string,*>}\r\n   * @private\r\n   */\n  this._listeners = {};\n}\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\n\n\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\n  (this._listeners[evt] || (this._listeners[evt] = [])).push({\n    fn: fn,\n    ctx: ctx || this\n  });\n  return this;\n};\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\n\n\nEventEmitter.prototype.off = function off(evt, fn) {\n  if (evt === undefined) this._listeners = {};else {\n    if (fn === undefined) this._listeners[evt] = [];else {\n      var listeners = this._listeners[evt];\n\n      for (var i = 0; i < listeners.length;) if (listeners[i].fn === fn) listeners.splice(i, 1);else ++i;\n    }\n  }\n  return this;\n};\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\n\n\nEventEmitter.prototype.emit = function emit(evt) {\n  var listeners = this._listeners[evt];\n\n  if (listeners) {\n    var args = [],\n        i = 1;\n\n    for (; i < arguments.length;) args.push(arguments[i++]);\n\n    for (i = 0; i < listeners.length;) listeners[i].fn.apply(listeners[i++].ctx, args);\n  }\n\n  return this;\n};","map":{"version":3,"sources":["C:/Work/coding-sandbox/react-again/dapp-days/node_modules/@protobufjs/eventemitter/index.js"],"names":["module","exports","EventEmitter","_listeners","prototype","on","evt","fn","ctx","push","off","undefined","listeners","i","length","splice","emit","args","arguments","apply"],"mappings":"AAAA;;AACAA,MAAM,CAACC,OAAP,GAAiBC,YAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASA,YAAT,GAAwB;AAEpB;AACJ;AACA;AACA;AACA;AACI,OAAKC,UAAL,GAAkB,EAAlB;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAD,YAAY,CAACE,SAAb,CAAuBC,EAAvB,GAA4B,SAASA,EAAT,CAAYC,GAAZ,EAAiBC,EAAjB,EAAqBC,GAArB,EAA0B;AAClD,GAAC,KAAKL,UAAL,CAAgBG,GAAhB,MAAyB,KAAKH,UAAL,CAAgBG,GAAhB,IAAuB,EAAhD,CAAD,EAAsDG,IAAtD,CAA2D;AACvDF,IAAAA,EAAE,EAAIA,EADiD;AAEvDC,IAAAA,GAAG,EAAGA,GAAG,IAAI;AAF0C,GAA3D;AAIA,SAAO,IAAP;AACH,CAND;AAQA;AACA;AACA;AACA;AACA;AACA;;;AACAN,YAAY,CAACE,SAAb,CAAuBM,GAAvB,GAA6B,SAASA,GAAT,CAAaJ,GAAb,EAAkBC,EAAlB,EAAsB;AAC/C,MAAID,GAAG,KAAKK,SAAZ,EACI,KAAKR,UAAL,GAAkB,EAAlB,CADJ,KAEK;AACD,QAAII,EAAE,KAAKI,SAAX,EACI,KAAKR,UAAL,CAAgBG,GAAhB,IAAuB,EAAvB,CADJ,KAEK;AACD,UAAIM,SAAS,GAAG,KAAKT,UAAL,CAAgBG,GAAhB,CAAhB;;AACA,WAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,SAAS,CAACE,MAA9B,GACI,IAAIF,SAAS,CAACC,CAAD,CAAT,CAAaN,EAAb,KAAoBA,EAAxB,EACIK,SAAS,CAACG,MAAV,CAAiBF,CAAjB,EAAoB,CAApB,EADJ,KAGI,EAAEA,CAAF;AACX;AACJ;AACD,SAAO,IAAP;AACH,CAhBD;AAkBA;AACA;AACA;AACA;AACA;AACA;;;AACAX,YAAY,CAACE,SAAb,CAAuBY,IAAvB,GAA8B,SAASA,IAAT,CAAcV,GAAd,EAAmB;AAC7C,MAAIM,SAAS,GAAG,KAAKT,UAAL,CAAgBG,GAAhB,CAAhB;;AACA,MAAIM,SAAJ,EAAe;AACX,QAAIK,IAAI,GAAG,EAAX;AAAA,QACIJ,CAAC,GAAG,CADR;;AAEA,WAAOA,CAAC,GAAGK,SAAS,CAACJ,MAArB,GACIG,IAAI,CAACR,IAAL,CAAUS,SAAS,CAACL,CAAC,EAAF,CAAnB;;AACJ,SAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGD,SAAS,CAACE,MAA1B,GACIF,SAAS,CAACC,CAAD,CAAT,CAAaN,EAAb,CAAgBY,KAAhB,CAAsBP,SAAS,CAACC,CAAC,EAAF,CAAT,CAAeL,GAArC,EAA0CS,IAA1C;AACP;;AACD,SAAO,IAAP;AACH,CAXD","sourcesContent":["\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n"]},"metadata":{},"sourceType":"script"}