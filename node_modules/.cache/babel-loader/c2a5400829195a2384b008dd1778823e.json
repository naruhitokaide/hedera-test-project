{"ast":null,"code":"/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").TokenSupplyType} proto.TokenSupplyType\n */\nexport default class TokenSupplyType {\n  /**\n   * @hideconstructor\n   * @internal\n   * @param {number} code\n   */\n  constructor(code) {\n    /** @readonly */\n    this._code = code;\n    Object.freeze(this);\n  }\n  /**\n   * @returns {string}\n   */\n\n\n  toString() {\n    switch (this) {\n      case TokenSupplyType.Infinite:\n        return \"INFINITE\";\n\n      case TokenSupplyType.Finite:\n        return \"FINITE\";\n\n      default:\n        return `UNKNOWN (${this._code})`;\n    }\n  }\n  /**\n   * @internal\n   * @param {number} code\n   * @returns {TokenSupplyType}\n   */\n\n\n  static _fromCode(code) {\n    switch (code) {\n      case 0:\n        return TokenSupplyType.Infinite;\n\n      case 1:\n        return TokenSupplyType.Finite;\n    }\n\n    throw new Error(`(BUG) TokenSupplyType.fromCode() does not handle code: ${code}`);\n  }\n  /**\n   * @returns {proto.TokenSupplyType}\n   */\n\n\n  valueOf() {\n    return this._code;\n  }\n\n}\n/**\n * Interchangeable value with one another, where any quantity of them has the\n * same value as another equal quantity if they are in the same class. Share\n * a single set of properties, not distinct from one another. Simply represented\n * as a balance or quantity to a given Hedera account.\n */\n\nTokenSupplyType.Infinite = new TokenSupplyType(0);\n/**\n * Unique, not interchangeable with other tokens of the same type as they\n * typically have different values. Individually traced and can carry unique\n * properties (e.g. serial number).\n */\n\nTokenSupplyType.Finite = new TokenSupplyType(1);","map":{"version":3,"sources":["C:/Work/coding-sandbox/react-again/dapp-days/node_modules/@hashgraph/sdk/src/token/TokenSupplyType.js"],"names":["TokenSupplyType","constructor","code","_code","Object","freeze","toString","Infinite","Finite","_fromCode","Error","valueOf"],"mappings":"AAAA;AACA;AACA;AACA;AAEA,eAAe,MAAMA,eAAN,CAAsB;AACjC;AACJ;AACA;AACA;AACA;AACIC,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd;AACA,SAAKC,KAAL,GAAaD,IAAb;AAEAE,IAAAA,MAAM,CAACC,MAAP,CAAc,IAAd;AACH;AAED;AACJ;AACA;;;AACIC,EAAAA,QAAQ,GAAG;AACP,YAAQ,IAAR;AACI,WAAKN,eAAe,CAACO,QAArB;AACI,eAAO,UAAP;;AACJ,WAAKP,eAAe,CAACQ,MAArB;AACI,eAAO,QAAP;;AACJ;AACI,eAAQ,YAAW,KAAKL,KAAM,GAA9B;AANR;AAQH;AAED;AACJ;AACA;AACA;AACA;;;AACoB,SAATM,SAAS,CAACP,IAAD,EAAO;AACnB,YAAQA,IAAR;AACI,WAAK,CAAL;AACI,eAAOF,eAAe,CAACO,QAAvB;;AACJ,WAAK,CAAL;AACI,eAAOP,eAAe,CAACQ,MAAvB;AAJR;;AAOA,UAAM,IAAIE,KAAJ,CACD,0DAAyDR,IAAK,EAD7D,CAAN;AAGH;AAED;AACJ;AACA;;;AACIS,EAAAA,OAAO,GAAG;AACN,WAAO,KAAKR,KAAZ;AACH;;AAlDgC;AAqDrC;AACA;AACA;AACA;AACA;AACA;;AACAH,eAAe,CAACO,QAAhB,GAA2B,IAAIP,eAAJ,CAAoB,CAApB,CAA3B;AAEA;AACA;AACA;AACA;AACA;;AACAA,eAAe,CAACQ,MAAhB,GAAyB,IAAIR,eAAJ,CAAoB,CAApB,CAAzB","sourcesContent":["/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").TokenSupplyType} proto.TokenSupplyType\n */\n\nexport default class TokenSupplyType {\n    /**\n     * @hideconstructor\n     * @internal\n     * @param {number} code\n     */\n    constructor(code) {\n        /** @readonly */\n        this._code = code;\n\n        Object.freeze(this);\n    }\n\n    /**\n     * @returns {string}\n     */\n    toString() {\n        switch (this) {\n            case TokenSupplyType.Infinite:\n                return \"INFINITE\";\n            case TokenSupplyType.Finite:\n                return \"FINITE\";\n            default:\n                return `UNKNOWN (${this._code})`;\n        }\n    }\n\n    /**\n     * @internal\n     * @param {number} code\n     * @returns {TokenSupplyType}\n     */\n    static _fromCode(code) {\n        switch (code) {\n            case 0:\n                return TokenSupplyType.Infinite;\n            case 1:\n                return TokenSupplyType.Finite;\n        }\n\n        throw new Error(\n            `(BUG) TokenSupplyType.fromCode() does not handle code: ${code}`\n        );\n    }\n\n    /**\n     * @returns {proto.TokenSupplyType}\n     */\n    valueOf() {\n        return this._code;\n    }\n}\n\n/**\n * Interchangeable value with one another, where any quantity of them has the\n * same value as another equal quantity if they are in the same class. Share\n * a single set of properties, not distinct from one another. Simply represented\n * as a balance or quantity to a given Hedera account.\n */\nTokenSupplyType.Infinite = new TokenSupplyType(0);\n\n/**\n * Unique, not interchangeable with other tokens of the same type as they\n * typically have different values. Individually traced and can carry unique\n * properties (e.g. serial number).\n */\nTokenSupplyType.Finite = new TokenSupplyType(1);\n"]},"metadata":{},"sourceType":"module"}