{"ast":null,"code":"import Query, { QUERY_REGISTRY } from \"../query/Query.js\";\nimport ContractId from \"./ContractId.js\";\nimport ContractFunctionParameters from \"./ContractFunctionParameters.js\";\nimport ContractFunctionResult from \"./ContractFunctionResult.js\";\nimport Long from \"long\";\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").IQuery} proto.IQuery\n * @typedef {import(\"@hashgraph/proto\").IQueryHeader} proto.IQueryHeader\n * @typedef {import(\"@hashgraph/proto\").IResponse} proto.IResponse\n * @typedef {import(\"@hashgraph/proto\").IResponseHeader} proto.IResponseHeader\n * @typedef {import(\"@hashgraph/proto\").IContractCallLocalQuery} proto.IContractCallLocalQuery\n * @typedef {import(\"@hashgraph/proto\").IContractCallLocalResponse} proto.IContractCallLocalResponse\n * @typedef {import(\"@hashgraph/proto\").IContractFunctionResult} proto.IContractFunctionResult\n */\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n * @typedef {import(\"../account/AccountId.js\").default} AccountId\n */\n\n/**\n * @typedef {object} FunctionParameters\n * @property {ContractFunctionParameters} parameters\n * @property {string} name\n */\n\n/**\n * @augments {Query<ContractFunctionResult>}\n */\n\nexport default class ContractCallQuery extends Query {\n  /**\n   * @param {object} [props]\n   * @param {ContractId | string} [props.contractId]\n   * @param {number | Long} [props.gas]\n   * @param {FunctionParameters | Uint8Array} [props.functionParameters]\n   * @param {number | Long} [props.maxResultSize]\n   */\n  constructor() {\n    let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super();\n    /**\n     * @private\n     * @type {?ContractId}\n     */\n\n    this._contractId = null;\n\n    if (props.contractId != null) {\n      this.setContractId(props.contractId);\n    }\n    /**\n     * @private\n     * @type {?Long}\n     */\n\n\n    this._gas = null;\n\n    if (props.gas != null) {\n      this.setGas(props.gas);\n    }\n    /**\n     * @private\n     * @type {?Uint8Array}\n     */\n\n\n    this._functionParameters = null;\n\n    if (props.functionParameters != null) {\n      if (props.functionParameters instanceof Uint8Array) {\n        this.setFunctionParameters(props.functionParameters);\n      } else {\n        this.setFunction(props.functionParameters.name, props.functionParameters.parameters);\n      }\n    }\n    /**\n     * @private\n     * @type {?Long}\n     */\n\n\n    this._maxResultSize = null;\n\n    if (props.maxResultSize != null) {\n      this.setMaxResultSize(props.maxResultSize);\n    }\n  }\n  /**\n   * @internal\n   * @param {proto.IQuery} query\n   * @returns {ContractCallQuery}\n   */\n\n\n  static _fromProtobuf(query) {\n    const call =\n    /** @type {proto.IContractCallLocalQuery} */\n    query.contractCallLocal;\n    return new ContractCallQuery({\n      contractId: call.contractID != null ? ContractId._fromProtobuf(call.contractID) : undefined,\n      gas: call.gas != null ? call.gas : undefined,\n      functionParameters: call.functionParameters != null ? call.functionParameters : undefined,\n      maxResultSize: call.maxResultSize != null ? call.maxResultSize : undefined\n    });\n  }\n  /**\n   * @returns {?ContractId}\n   */\n\n\n  get contractId() {\n    return this._contractId;\n  }\n  /**\n   * Set the contract ID for which the call is being requested.\n   *\n   * @param {ContractId | string} contractId\n   * @returns {ContractCallQuery}\n   */\n\n\n  setContractId(contractId) {\n    this._contractId = typeof contractId === \"string\" ? ContractId.fromString(contractId) : contractId.clone();\n    return this;\n  }\n  /**\n   * @returns {?Long}\n   */\n\n\n  get gas() {\n    return this._gas;\n  }\n  /**\n   * @param {number | Long} gas\n   * @returns {ContractCallQuery}\n   */\n\n\n  setGas(gas) {\n    this._gas = gas instanceof Long ? gas : Long.fromValue(gas);\n    return this;\n  }\n  /**\n   * @returns {?Uint8Array}\n   */\n\n\n  get functionParameters() {\n    return this._functionParameters;\n  }\n  /**\n   * @param {Uint8Array} params\n   * @returns {ContractCallQuery}\n   */\n\n\n  setFunctionParameters(params) {\n    this._functionParameters = params;\n    return this;\n  }\n  /**\n   * @param {string} name\n   * @param {?ContractFunctionParameters} [params]\n   * @returns {ContractCallQuery}\n   */\n\n\n  setFunction(name, params) {\n    this._functionParameters = (params != null ? params : new ContractFunctionParameters())._build(name);\n    return this;\n  }\n  /**\n   * @param {number | Long} size\n   * @returns {ContractCallQuery}\n   */\n\n\n  setMaxResultSize(size) {\n    this._maxResultSize = size instanceof Long ? size : Long.fromValue(size);\n    return this;\n  }\n  /**\n   * @param {Client} client\n   */\n\n\n  _validateChecksums(client) {\n    if (this._contractId != null) {\n      this._contractId.validateChecksum(client);\n    }\n  }\n  /**\n   * @override\n   * @internal\n   * @param {Channel} channel\n   * @param {proto.IQuery} request\n   * @returns {Promise<proto.IResponse>}\n   */\n\n\n  _execute(channel, request) {\n    return channel.smartContract.contractCallLocalMethod(request);\n  }\n  /**\n   * @override\n   * @internal\n   * @param {proto.IResponse} response\n   * @returns {proto.IResponseHeader}\n   */\n\n\n  _mapResponseHeader(response) {\n    const contractCallLocal =\n    /** @type {proto.IContractCallLocalResponse} */\n    response.contractCallLocal;\n    return (\n      /** @type {proto.IResponseHeader} */\n      contractCallLocal.header\n    );\n  }\n  /**\n   * @protected\n   * @override\n   * @param {proto.IResponse} response\n   * @returns {Promise<ContractFunctionResult>}\n   */\n\n\n  _mapResponse(response) {\n    const call =\n    /**\n     *@type {proto.IContractCallLocalResponse}\n     */\n    response.contractCallLocal;\n    return Promise.resolve(ContractFunctionResult._fromProtobuf(\n    /**\n     * @type {proto.IContractFunctionResult}\n     */\n    call.functionResult));\n  }\n  /**\n   * @override\n   * @internal\n   * @param {proto.IQueryHeader} header\n   * @returns {proto.IQuery}\n   */\n\n\n  _onMakeRequest(header) {\n    return {\n      contractCallLocal: {\n        header,\n        contractID: this._contractId != null ? this._contractId._toProtobuf() : null,\n        gas: this._gas,\n        maxResultSize: this._maxResultSize,\n        functionParameters: this._functionParameters\n      }\n    };\n  }\n\n} // eslint-disable-next-line @typescript-eslint/unbound-method\n\nQUERY_REGISTRY.set(\"contractCallLocal\", ContractCallQuery._fromProtobuf);","map":{"version":3,"sources":["C:/Work/coding-sandbox/react-again/dapp-days/node_modules/@hashgraph/sdk/src/contract/ContractCallQuery.js"],"names":["Query","QUERY_REGISTRY","ContractId","ContractFunctionParameters","ContractFunctionResult","Long","ContractCallQuery","constructor","props","_contractId","contractId","setContractId","_gas","gas","setGas","_functionParameters","functionParameters","Uint8Array","setFunctionParameters","setFunction","name","parameters","_maxResultSize","maxResultSize","setMaxResultSize","_fromProtobuf","query","call","contractCallLocal","contractID","undefined","fromString","clone","fromValue","params","_build","size","_validateChecksums","client","validateChecksum","_execute","channel","request","smartContract","contractCallLocalMethod","_mapResponseHeader","response","header","_mapResponse","Promise","resolve","functionResult","_onMakeRequest","_toProtobuf","set"],"mappings":"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","sourcesContent":["import Query, { QUERY_REGISTRY } from \"../query/Query.js\";\nimport ContractId from \"./ContractId.js\";\nimport ContractFunctionParameters from \"./ContractFunctionParameters.js\";\nimport ContractFunctionResult from \"./ContractFunctionResult.js\";\nimport Long from \"long\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").IQuery} proto.IQuery\n * @typedef {import(\"@hashgraph/proto\").IQueryHeader} proto.IQueryHeader\n * @typedef {import(\"@hashgraph/proto\").IResponse} proto.IResponse\n * @typedef {import(\"@hashgraph/proto\").IResponseHeader} proto.IResponseHeader\n * @typedef {import(\"@hashgraph/proto\").IContractCallLocalQuery} proto.IContractCallLocalQuery\n * @typedef {import(\"@hashgraph/proto\").IContractCallLocalResponse} proto.IContractCallLocalResponse\n * @typedef {import(\"@hashgraph/proto\").IContractFunctionResult} proto.IContractFunctionResult\n */\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n * @typedef {import(\"../account/AccountId.js\").default} AccountId\n */\n\n/**\n * @typedef {object} FunctionParameters\n * @property {ContractFunctionParameters} parameters\n * @property {string} name\n */\n\n/**\n * @augments {Query<ContractFunctionResult>}\n */\nexport default class ContractCallQuery extends Query {\n    /**\n     * @param {object} [props]\n     * @param {ContractId | string} [props.contractId]\n     * @param {number | Long} [props.gas]\n     * @param {FunctionParameters | Uint8Array} [props.functionParameters]\n     * @param {number | Long} [props.maxResultSize]\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @private\n         * @type {?ContractId}\n         */\n        this._contractId = null;\n        if (props.contractId != null) {\n            this.setContractId(props.contractId);\n        }\n\n        /**\n         * @private\n         * @type {?Long}\n         */\n        this._gas = null;\n        if (props.gas != null) {\n            this.setGas(props.gas);\n        }\n\n        /**\n         * @private\n         * @type {?Uint8Array}\n         */\n        this._functionParameters = null;\n        if (props.functionParameters != null) {\n            if (props.functionParameters instanceof Uint8Array) {\n                this.setFunctionParameters(props.functionParameters);\n            } else {\n                this.setFunction(\n                    props.functionParameters.name,\n                    props.functionParameters.parameters\n                );\n            }\n        }\n\n        /**\n         * @private\n         * @type {?Long}\n         */\n        this._maxResultSize = null;\n        if (props.maxResultSize != null) {\n            this.setMaxResultSize(props.maxResultSize);\n        }\n    }\n\n    /**\n     * @internal\n     * @param {proto.IQuery} query\n     * @returns {ContractCallQuery}\n     */\n    static _fromProtobuf(query) {\n        const call = /** @type {proto.IContractCallLocalQuery} */ (\n            query.contractCallLocal\n        );\n\n        return new ContractCallQuery({\n            contractId:\n                call.contractID != null\n                    ? ContractId._fromProtobuf(call.contractID)\n                    : undefined,\n            gas: call.gas != null ? call.gas : undefined,\n            functionParameters:\n                call.functionParameters != null\n                    ? call.functionParameters\n                    : undefined,\n            maxResultSize:\n                call.maxResultSize != null ? call.maxResultSize : undefined,\n        });\n    }\n\n    /**\n     * @returns {?ContractId}\n     */\n    get contractId() {\n        return this._contractId;\n    }\n\n    /**\n     * Set the contract ID for which the call is being requested.\n     *\n     * @param {ContractId | string} contractId\n     * @returns {ContractCallQuery}\n     */\n    setContractId(contractId) {\n        this._contractId =\n            typeof contractId === \"string\"\n                ? ContractId.fromString(contractId)\n                : contractId.clone();\n\n        return this;\n    }\n\n    /**\n     * @returns {?Long}\n     */\n    get gas() {\n        return this._gas;\n    }\n\n    /**\n     * @param {number | Long} gas\n     * @returns {ContractCallQuery}\n     */\n    setGas(gas) {\n        this._gas = gas instanceof Long ? gas : Long.fromValue(gas);\n        return this;\n    }\n\n    /**\n     * @returns {?Uint8Array}\n     */\n    get functionParameters() {\n        return this._functionParameters;\n    }\n\n    /**\n     * @param {Uint8Array} params\n     * @returns {ContractCallQuery}\n     */\n    setFunctionParameters(params) {\n        this._functionParameters = params;\n        return this;\n    }\n\n    /**\n     * @param {string} name\n     * @param {?ContractFunctionParameters} [params]\n     * @returns {ContractCallQuery}\n     */\n    setFunction(name, params) {\n        this._functionParameters = (\n            params != null ? params : new ContractFunctionParameters()\n        )._build(name);\n\n        return this;\n    }\n\n    /**\n     * @param {number | Long} size\n     * @returns {ContractCallQuery}\n     */\n    setMaxResultSize(size) {\n        this._maxResultSize =\n            size instanceof Long ? size : Long.fromValue(size);\n        return this;\n    }\n\n    /**\n     * @param {Client} client\n     */\n    _validateChecksums(client) {\n        if (this._contractId != null) {\n            this._contractId.validateChecksum(client);\n        }\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {proto.IQuery} request\n     * @returns {Promise<proto.IResponse>}\n     */\n    _execute(channel, request) {\n        return channel.smartContract.contractCallLocalMethod(request);\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {proto.IResponse} response\n     * @returns {proto.IResponseHeader}\n     */\n    _mapResponseHeader(response) {\n        const contractCallLocal =\n            /** @type {proto.IContractCallLocalResponse} */ (\n                response.contractCallLocal\n            );\n        return /** @type {proto.IResponseHeader} */ (contractCallLocal.header);\n    }\n\n    /**\n     * @protected\n     * @override\n     * @param {proto.IResponse} response\n     * @returns {Promise<ContractFunctionResult>}\n     */\n    _mapResponse(response) {\n        const call =\n            /**\n             *@type {proto.IContractCallLocalResponse}\n             */\n            (response.contractCallLocal);\n\n        return Promise.resolve(\n            ContractFunctionResult._fromProtobuf(\n                /**\n                 * @type {proto.IContractFunctionResult}\n                 */\n                (call.functionResult)\n            )\n        );\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {proto.IQueryHeader} header\n     * @returns {proto.IQuery}\n     */\n    _onMakeRequest(header) {\n        return {\n            contractCallLocal: {\n                header,\n                contractID:\n                    this._contractId != null\n                        ? this._contractId._toProtobuf()\n                        : null,\n                gas: this._gas,\n                maxResultSize: this._maxResultSize,\n                functionParameters: this._functionParameters,\n            },\n        };\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nQUERY_REGISTRY.set(\"contractCallLocal\", ContractCallQuery._fromProtobuf);\n"]},"metadata":{},"sourceType":"module"}