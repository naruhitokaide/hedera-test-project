{"ast":null,"code":"import Transaction, { TRANSACTION_REGISTRY } from \"../transaction/Transaction.js\";\nimport ContractId from \"./ContractId.js\";\nimport AccountId from \"../account/AccountId.js\";\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").ITransaction} proto.ITransaction\n * @typedef {import(\"@hashgraph/proto\").ISignedTransaction} proto.ISignedTransaction\n * @typedef {import(\"@hashgraph/proto\").TransactionBody} proto.TransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionBody} proto.ITransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionResponse} proto.ITransactionResponse\n * @typedef {import(\"@hashgraph/proto\").IContractDeleteTransactionBody} proto.IContractDeleteTransactionBody\n * @typedef {import(\"@hashgraph/proto\").IContractID} proto.IContractID\n * @typedef {import(\"@hashgraph/proto\").IAccountID} proto.IAccountID\n */\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n * @typedef {import(\"../transaction/TransactionId.js\").default} TransactionId\n */\n\nexport default class ContractDeleteTransaction extends Transaction {\n  /**\n   * @param {object} [props]\n   * @param {ContractId | string} [props.contractId]\n   * @param {ContractId | string} [props.transferContractId]\n   * @param {AccountId | string} [props.transferAccountId]\n   */\n  constructor() {\n    let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super();\n    /**\n     * @private\n     * @type {?ContractId}\n     */\n\n    this._contractId = null;\n    /**\n     * @private\n     * @type {?AccountId}\n     */\n\n    this._transferAccountId = null;\n    /**\n     * @private\n     * @type {?ContractId}\n     */\n\n    this._transferContractId = null;\n\n    if (props.contractId != null) {\n      this.setContractId(props.contractId);\n    }\n\n    if (props.transferAccountId != null) {\n      this.setTransferAccountId(props.transferAccountId);\n    }\n\n    if (props.transferContractId != null) {\n      this.setTransferContractId(props.transferContractId);\n    }\n  }\n  /**\n   * @internal\n   * @param {proto.ITransaction[]} transactions\n   * @param {proto.ISignedTransaction[]} signedTransactions\n   * @param {TransactionId[]} transactionIds\n   * @param {AccountId[]} nodeIds\n   * @param {proto.ITransactionBody[]} bodies\n   * @returns {ContractDeleteTransaction}\n   */\n\n\n  static _fromProtobuf(transactions, signedTransactions, transactionIds, nodeIds, bodies) {\n    const body = bodies[0];\n    const contractDelete =\n    /** @type {proto.IContractDeleteTransactionBody} */\n    body.contractDeleteInstance;\n    return Transaction._fromProtobufTransactions(new ContractDeleteTransaction({\n      contractId: contractDelete.contractID != null ? ContractId._fromProtobuf(\n      /** @type {proto.IContractID} */\n      contractDelete.contractID) : undefined,\n      transferAccountId: contractDelete.transferAccountID != null ? AccountId._fromProtobuf(\n      /** @type {proto.IAccountID} */\n      contractDelete.transferAccountID) : undefined,\n      transferContractId: contractDelete.transferContractID != null ? ContractId._fromProtobuf(\n      /** @type {proto.IContractID} */\n      contractDelete.transferContractID) : undefined\n    }), transactions, signedTransactions, transactionIds, nodeIds, bodies);\n  }\n  /**\n   * @returns {?ContractId}\n   */\n\n\n  get contractId() {\n    return this._contractId;\n  }\n  /**\n   * Sets the contract ID which is being deleted in this transaction.\n   *\n   * @param {ContractId | string} contractId\n   * @returns {ContractDeleteTransaction}\n   */\n\n\n  setContractId(contractId) {\n    this._requireNotFrozen();\n\n    this._contractId = typeof contractId === \"string\" ? ContractId.fromString(contractId) : contractId.clone();\n    return this;\n  }\n  /**\n   * @returns {?ContractId}\n   */\n\n\n  get transferContractId() {\n    return this._transferContractId;\n  }\n  /**\n   * Sets the contract ID which will receive all remaining hbars.\n   *\n   * @param {ContractId | string} transferContractId\n   * @returns {ContractDeleteTransaction}\n   */\n\n\n  setTransferContractId(transferContractId) {\n    this._requireNotFrozen();\n\n    this._transferContractId = transferContractId instanceof ContractId ? transferContractId : ContractId.fromString(transferContractId);\n    return this;\n  }\n  /**\n   * @returns {?AccountId}\n   */\n\n\n  get transferAccountId() {\n    return this._transferAccountId;\n  }\n  /**\n   * Sets the account ID which will receive all remaining hbars.\n   *\n   * @param {AccountId | string} transferAccountId\n   * @returns {ContractDeleteTransaction}\n   */\n\n\n  setTransferAccountId(transferAccountId) {\n    this._requireNotFrozen();\n\n    this._transferAccountId = transferAccountId instanceof AccountId ? transferAccountId : AccountId.fromString(transferAccountId);\n    return this;\n  }\n  /**\n   * @param {Client} client\n   */\n\n\n  _validateChecksums(client) {\n    if (this._contractId != null) {\n      this._contractId.validateChecksum(client);\n    }\n\n    if (this._transferAccountId != null) {\n      this._transferAccountId.validateChecksum(client);\n    }\n\n    if (this._transferContractId != null) {\n      this._transferContractId.validateChecksum(client);\n    }\n  }\n  /**\n   * @override\n   * @internal\n   * @param {Channel} channel\n   * @param {proto.ITransaction} request\n   * @returns {Promise<proto.ITransactionResponse>}\n   */\n\n\n  _execute(channel, request) {\n    return channel.smartContract.deleteContract(request);\n  }\n  /**\n   * @override\n   * @protected\n   * @returns {NonNullable<proto.TransactionBody[\"data\"]>}\n   */\n\n\n  _getTransactionDataCase() {\n    return \"contractDeleteInstance\";\n  }\n  /**\n   * @override\n   * @protected\n   * @returns {proto.IContractDeleteTransactionBody}\n   */\n\n\n  _makeTransactionData() {\n    return {\n      contractID: this._contractId != null ? this._contractId._toProtobuf() : null,\n      transferAccountID: this._transferAccountId ? this._transferAccountId._toProtobuf() : null,\n      transferContractID: this._transferContractId != null ? this._transferContractId._toProtobuf() : null\n    };\n  }\n\n}\nTRANSACTION_REGISTRY.set(\"contractDeleteInstance\", // eslint-disable-next-line @typescript-eslint/unbound-method\nContractDeleteTransaction._fromProtobuf);","map":{"version":3,"sources":["C:/Work/coding-sandbox/react-again/dapp-days/node_modules/@hashgraph/sdk/src/contract/ContractDeleteTransaction.js"],"names":["Transaction","TRANSACTION_REGISTRY","ContractId","AccountId","ContractDeleteTransaction","constructor","props","_contractId","_transferAccountId","_transferContractId","contractId","setContractId","transferAccountId","setTransferAccountId","transferContractId","setTransferContractId","_fromProtobuf","transactions","signedTransactions","transactionIds","nodeIds","bodies","body","contractDelete","contractDeleteInstance","_fromProtobufTransactions","contractID","undefined","transferAccountID","transferContractID","_requireNotFrozen","fromString","clone","_validateChecksums","client","validateChecksum","_execute","channel","request","smartContract","deleteContract","_getTransactionDataCase","_makeTransactionData","_toProtobuf","set"],"mappings":"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","sourcesContent":["import Transaction, {\n    TRANSACTION_REGISTRY,\n} from \"../transaction/Transaction.js\";\nimport ContractId from \"./ContractId.js\";\nimport AccountId from \"../account/AccountId.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").ITransaction} proto.ITransaction\n * @typedef {import(\"@hashgraph/proto\").ISignedTransaction} proto.ISignedTransaction\n * @typedef {import(\"@hashgraph/proto\").TransactionBody} proto.TransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionBody} proto.ITransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionResponse} proto.ITransactionResponse\n * @typedef {import(\"@hashgraph/proto\").IContractDeleteTransactionBody} proto.IContractDeleteTransactionBody\n * @typedef {import(\"@hashgraph/proto\").IContractID} proto.IContractID\n * @typedef {import(\"@hashgraph/proto\").IAccountID} proto.IAccountID\n */\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n * @typedef {import(\"../transaction/TransactionId.js\").default} TransactionId\n */\n\nexport default class ContractDeleteTransaction extends Transaction {\n    /**\n     * @param {object} [props]\n     * @param {ContractId | string} [props.contractId]\n     * @param {ContractId | string} [props.transferContractId]\n     * @param {AccountId | string} [props.transferAccountId]\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @private\n         * @type {?ContractId}\n         */\n        this._contractId = null;\n\n        /**\n         * @private\n         * @type {?AccountId}\n         */\n        this._transferAccountId = null;\n\n        /**\n         * @private\n         * @type {?ContractId}\n         */\n        this._transferContractId = null;\n\n        if (props.contractId != null) {\n            this.setContractId(props.contractId);\n        }\n\n        if (props.transferAccountId != null) {\n            this.setTransferAccountId(props.transferAccountId);\n        }\n\n        if (props.transferContractId != null) {\n            this.setTransferContractId(props.transferContractId);\n        }\n    }\n\n    /**\n     * @internal\n     * @param {proto.ITransaction[]} transactions\n     * @param {proto.ISignedTransaction[]} signedTransactions\n     * @param {TransactionId[]} transactionIds\n     * @param {AccountId[]} nodeIds\n     * @param {proto.ITransactionBody[]} bodies\n     * @returns {ContractDeleteTransaction}\n     */\n    static _fromProtobuf(\n        transactions,\n        signedTransactions,\n        transactionIds,\n        nodeIds,\n        bodies\n    ) {\n        const body = bodies[0];\n        const contractDelete =\n            /** @type {proto.IContractDeleteTransactionBody} */ (\n                body.contractDeleteInstance\n            );\n\n        return Transaction._fromProtobufTransactions(\n            new ContractDeleteTransaction({\n                contractId:\n                    contractDelete.contractID != null\n                        ? ContractId._fromProtobuf(\n                              /** @type {proto.IContractID} */ (\n                                  contractDelete.contractID\n                              )\n                          )\n                        : undefined,\n                transferAccountId:\n                    contractDelete.transferAccountID != null\n                        ? AccountId._fromProtobuf(\n                              /** @type {proto.IAccountID} */ (\n                                  contractDelete.transferAccountID\n                              )\n                          )\n                        : undefined,\n                transferContractId:\n                    contractDelete.transferContractID != null\n                        ? ContractId._fromProtobuf(\n                              /** @type {proto.IContractID} */ (\n                                  contractDelete.transferContractID\n                              )\n                          )\n                        : undefined,\n            }),\n            transactions,\n            signedTransactions,\n            transactionIds,\n            nodeIds,\n            bodies\n        );\n    }\n\n    /**\n     * @returns {?ContractId}\n     */\n    get contractId() {\n        return this._contractId;\n    }\n\n    /**\n     * Sets the contract ID which is being deleted in this transaction.\n     *\n     * @param {ContractId | string} contractId\n     * @returns {ContractDeleteTransaction}\n     */\n    setContractId(contractId) {\n        this._requireNotFrozen();\n        this._contractId =\n            typeof contractId === \"string\"\n                ? ContractId.fromString(contractId)\n                : contractId.clone();\n\n        return this;\n    }\n\n    /**\n     * @returns {?ContractId}\n     */\n    get transferContractId() {\n        return this._transferContractId;\n    }\n\n    /**\n     * Sets the contract ID which will receive all remaining hbars.\n     *\n     * @param {ContractId | string} transferContractId\n     * @returns {ContractDeleteTransaction}\n     */\n    setTransferContractId(transferContractId) {\n        this._requireNotFrozen();\n        this._transferContractId =\n            transferContractId instanceof ContractId\n                ? transferContractId\n                : ContractId.fromString(transferContractId);\n\n        return this;\n    }\n\n    /**\n     * @returns {?AccountId}\n     */\n    get transferAccountId() {\n        return this._transferAccountId;\n    }\n\n    /**\n     * Sets the account ID which will receive all remaining hbars.\n     *\n     * @param {AccountId | string} transferAccountId\n     * @returns {ContractDeleteTransaction}\n     */\n    setTransferAccountId(transferAccountId) {\n        this._requireNotFrozen();\n        this._transferAccountId =\n            transferAccountId instanceof AccountId\n                ? transferAccountId\n                : AccountId.fromString(transferAccountId);\n\n        return this;\n    }\n\n    /**\n     * @param {Client} client\n     */\n    _validateChecksums(client) {\n        if (this._contractId != null) {\n            this._contractId.validateChecksum(client);\n        }\n\n        if (this._transferAccountId != null) {\n            this._transferAccountId.validateChecksum(client);\n        }\n\n        if (this._transferContractId != null) {\n            this._transferContractId.validateChecksum(client);\n        }\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {proto.ITransaction} request\n     * @returns {Promise<proto.ITransactionResponse>}\n     */\n    _execute(channel, request) {\n        return channel.smartContract.deleteContract(request);\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {NonNullable<proto.TransactionBody[\"data\"]>}\n     */\n    _getTransactionDataCase() {\n        return \"contractDeleteInstance\";\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {proto.IContractDeleteTransactionBody}\n     */\n    _makeTransactionData() {\n        return {\n            contractID:\n                this._contractId != null\n                    ? this._contractId._toProtobuf()\n                    : null,\n            transferAccountID: this._transferAccountId\n                ? this._transferAccountId._toProtobuf()\n                : null,\n            transferContractID:\n                this._transferContractId != null\n                    ? this._transferContractId._toProtobuf()\n                    : null,\n        };\n    }\n}\n\nTRANSACTION_REGISTRY.set(\n    \"contractDeleteInstance\",\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    ContractDeleteTransaction._fromProtobuf\n);\n"]},"metadata":{},"sourceType":"module"}