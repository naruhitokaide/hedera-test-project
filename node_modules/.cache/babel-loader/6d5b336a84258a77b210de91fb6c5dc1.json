{"ast":null,"code":"/**\n * @abstract\n * @template {{ toString(): string }} KeyT\n * @template {any} ValueT\n */\nexport default class ObjectMap {\n  /**\n   * @param {(s: string) => KeyT} fromString\n   */\n  constructor(fromString) {\n    /** @type {Map<string, ValueT>} */\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    this._map = new Map();\n    /** @type {Map<KeyT, ValueT>} */\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n\n    this.__map = new Map();\n    this._fromString = fromString;\n  }\n  /**\n   * @param {KeyT | string} key\n   * @returns {?ValueT}\n   */\n\n\n  get(key) {\n    const k = typeof key === \"string\" ? key : key.toString();\n\n    const value = this._map.get(k);\n\n    return value != null ? value : null;\n  }\n  /**\n   * @internal\n   * @param {KeyT} key\n   * @param {ValueT} value\n   */\n\n\n  _set(key, value) {\n    const k = typeof key === \"string\" ? key : key.toString();\n\n    this._map.set(k, value);\n\n    this.__map.set(key, value);\n  }\n  /**\n   * @returns {IterableIterator<ValueT>}\n   */\n\n\n  values() {\n    return this._map.values();\n  }\n  /**\n   * @returns {number}\n   */\n\n\n  get size() {\n    return this._map.size;\n  }\n  /**\n   * @returns {IterableIterator<KeyT>}\n   */\n\n\n  keys() {\n    return this.__map.keys();\n  }\n  /**\n   * @returns {IterableIterator<[KeyT, ValueT]>}\n   */\n\n\n  [Symbol.iterator]() {\n    return this.__map[Symbol.iterator]();\n  }\n  /**\n   * @returns {string}\n   */\n\n\n  toString() {\n    /** @type {Object.<string, any>} */\n    const map = {};\n\n    for (const [key, value] of this._map) {\n      map[key] = value;\n    }\n\n    return JSON.stringify(map);\n  }\n\n}","map":{"version":3,"sources":["C:/Work/coding-sandbox/react-again/dapp-days/node_modules/@hashgraph/sdk/src/ObjectMap.js"],"names":["ObjectMap","constructor","fromString","_map","Map","__map","_fromString","get","key","k","toString","value","_set","set","values","size","keys","Symbol","iterator","map","JSON","stringify"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAMA,SAAN,CAAgB;AAC3B;AACJ;AACA;AACIC,EAAAA,WAAW,CAACC,UAAD,EAAa;AACpB;AACA;AACA,SAAKC,IAAL,GAAY,IAAIC,GAAJ,EAAZ;AAEA;AACA;;AACA,SAAKC,KAAL,GAAa,IAAID,GAAJ,EAAb;AAEA,SAAKE,WAAL,GAAmBJ,UAAnB;AACH;AAED;AACJ;AACA;AACA;;;AACIK,EAAAA,GAAG,CAACC,GAAD,EAAM;AACL,UAAMC,CAAC,GAAG,OAAOD,GAAP,KAAe,QAAf,GAA0BA,GAA1B,GAAgCA,GAAG,CAACE,QAAJ,EAA1C;;AAEA,UAAMC,KAAK,GAAG,KAAKR,IAAL,CAAUI,GAAV,CAAcE,CAAd,CAAd;;AACA,WAAOE,KAAK,IAAI,IAAT,GAAgBA,KAAhB,GAAwB,IAA/B;AACH;AAED;AACJ;AACA;AACA;AACA;;;AACIC,EAAAA,IAAI,CAACJ,GAAD,EAAMG,KAAN,EAAa;AACb,UAAMF,CAAC,GAAG,OAAOD,GAAP,KAAe,QAAf,GAA0BA,GAA1B,GAAgCA,GAAG,CAACE,QAAJ,EAA1C;;AAEA,SAAKP,IAAL,CAAUU,GAAV,CAAcJ,CAAd,EAAiBE,KAAjB;;AACA,SAAKN,KAAL,CAAWQ,GAAX,CAAeL,GAAf,EAAoBG,KAApB;AACH;AAED;AACJ;AACA;;;AACIG,EAAAA,MAAM,GAAG;AACL,WAAO,KAAKX,IAAL,CAAUW,MAAV,EAAP;AACH;AAED;AACJ;AACA;;;AACY,MAAJC,IAAI,GAAG;AACP,WAAO,KAAKZ,IAAL,CAAUY,IAAjB;AACH;AAED;AACJ;AACA;;;AACIC,EAAAA,IAAI,GAAG;AACH,WAAO,KAAKX,KAAL,CAAWW,IAAX,EAAP;AACH;AAED;AACJ;AACA;;;AACoB,GAAfC,MAAM,CAACC,QAAQ,IAAI;AAChB,WAAO,KAAKb,KAAL,CAAWY,MAAM,CAACC,QAAlB,GAAP;AACH;AAED;AACJ;AACA;;;AACIR,EAAAA,QAAQ,GAAG;AACP;AACA,UAAMS,GAAG,GAAG,EAAZ;;AAEA,SAAK,MAAM,CAACX,GAAD,EAAMG,KAAN,CAAX,IAA2B,KAAKR,IAAhC,EAAsC;AAClCgB,MAAAA,GAAG,CAACX,GAAD,CAAH,GAAWG,KAAX;AACH;;AAED,WAAOS,IAAI,CAACC,SAAL,CAAeF,GAAf,CAAP;AACH;;AA/E0B","sourcesContent":["/**\n * @abstract\n * @template {{ toString(): string }} KeyT\n * @template {any} ValueT\n */\nexport default class ObjectMap {\n    /**\n     * @param {(s: string) => KeyT} fromString\n     */\n    constructor(fromString) {\n        /** @type {Map<string, ValueT>} */\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        this._map = new Map();\n\n        /** @type {Map<KeyT, ValueT>} */\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        this.__map = new Map();\n\n        this._fromString = fromString;\n    }\n\n    /**\n     * @param {KeyT | string} key\n     * @returns {?ValueT}\n     */\n    get(key) {\n        const k = typeof key === \"string\" ? key : key.toString();\n\n        const value = this._map.get(k);\n        return value != null ? value : null;\n    }\n\n    /**\n     * @internal\n     * @param {KeyT} key\n     * @param {ValueT} value\n     */\n    _set(key, value) {\n        const k = typeof key === \"string\" ? key : key.toString();\n\n        this._map.set(k, value);\n        this.__map.set(key, value);\n    }\n\n    /**\n     * @returns {IterableIterator<ValueT>}\n     */\n    values() {\n        return this._map.values();\n    }\n\n    /**\n     * @returns {number}\n     */\n    get size() {\n        return this._map.size;\n    }\n\n    /**\n     * @returns {IterableIterator<KeyT>}\n     */\n    keys() {\n        return this.__map.keys();\n    }\n\n    /**\n     * @returns {IterableIterator<[KeyT, ValueT]>}\n     */\n    [Symbol.iterator]() {\n        return this.__map[Symbol.iterator]();\n    }\n\n    /**\n     * @returns {string}\n     */\n    toString() {\n        /** @type {Object.<string, any>} */\n        const map = {};\n\n        for (const [key, value] of this._map) {\n            map[key] = value;\n        }\n\n        return JSON.stringify(map);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}