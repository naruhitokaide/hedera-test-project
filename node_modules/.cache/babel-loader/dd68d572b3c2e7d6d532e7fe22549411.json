{"ast":null,"code":"import Hbar from \"../Hbar.js\";\nimport AccountId from \"./AccountId.js\";\nimport Transaction, { DEFAULT_AUTO_RENEW_PERIOD, DEFAULT_RECORD_THRESHOLD, TRANSACTION_REGISTRY } from \"../transaction/Transaction.js\";\nimport Duration from \"../Duration.js\";\nimport Long from \"long\";\nimport Key from \"../Key.js\";\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").ITransaction} proto.ITransaction\n * @typedef {import(\"@hashgraph/proto\").ISignedTransaction} proto.ISignedTransaction\n * @typedef {import(\"@hashgraph/proto\").TransactionBody} proto.TransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionBody} proto.ITransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionResponse} proto.ITransactionResponse\n * @typedef {import(\"@hashgraph/proto\").ICryptoCreateTransactionBody} proto.ICryptoCreateTransactionBody\n * @typedef {import(\"@hashgraph/proto\").IAccountID} proto.IAccountID\n */\n\n/**\n * @typedef {import(\"bignumber.js\").default} BigNumber\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n * @typedef {import(\"../Timestamp.js\").default} Timestamp\n * @typedef {import(\"../transaction/TransactionId.js\").default} TransactionId\n */\n\n/**\n * Create a new Hederaâ„¢ crypto-currency account.\n */\n\nexport default class AccountCreateTransaction extends Transaction {\n  /**\n   * @param {object} [props]\n   * @param {Key} [props.key]\n   * @param {number | string | Long | BigNumber | Hbar} [props.initialBalance]\n   * @param {boolean} [props.receiverSignatureRequired]\n   * @param {AccountId} [props.proxyAccountId]\n   * @param {Duration | Long | number} [props.autoRenewPeriod]\n   * @param {string} [props.accountMemo]\n   * @param {Long | number} [props.maxAutomaticTokenAssociations]\n   */\n  constructor() {\n    let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super();\n    /**\n     * @private\n     * @type {?Key}\n     */\n\n    this._key = null;\n    /**\n     * @private\n     * @type {?Hbar}\n     */\n\n    this._initialBalance = null;\n    /**\n     * @private\n     * @type {Hbar}\n     */\n\n    this._sendRecordThreshold = DEFAULT_RECORD_THRESHOLD;\n    /**\n     * @private\n     * @type {Hbar}\n     */\n\n    this._receiveRecordThreshold = DEFAULT_RECORD_THRESHOLD;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._receiverSignatureRequired = false;\n    /**\n     * @private\n     * @type {?AccountId}\n     */\n\n    this._proxyAccountId = null;\n    /**\n     * @private\n     * @type {Duration}\n     */\n\n    this._autoRenewPeriod = new Duration(DEFAULT_AUTO_RENEW_PERIOD);\n    /**\n     * @private\n     * @type {?string}\n     */\n\n    this._accountMemo = null;\n    /**\n     * @private\n     * @type {?Long}\n     */\n\n    this._maxAutomaticTokenAssociations = null;\n\n    if (props.key != null) {\n      this.setKey(props.key);\n    }\n\n    if (props.receiverSignatureRequired != null) {\n      this.setReceiverSignatureRequired(props.receiverSignatureRequired);\n    }\n\n    if (props.initialBalance != null) {\n      this.setInitialBalance(props.initialBalance);\n    }\n\n    if (props.proxyAccountId != null) {\n      this.setProxyAccountId(props.proxyAccountId);\n    }\n\n    if (props.autoRenewPeriod != null) {\n      this.setAutoRenewPeriod(props.autoRenewPeriod);\n    }\n\n    if (props.accountMemo != null) {\n      this.setAccountMemo(props.accountMemo);\n    }\n\n    if (props.maxAutomaticTokenAssociations != null) {\n      this.setMaxAutomaticTokenAssociations(props.maxAutomaticTokenAssociations);\n    }\n  }\n  /**\n   * @internal\n   * @param {proto.ITransaction[]} transactions\n   * @param {proto.ISignedTransaction[]} signedTransactions\n   * @param {TransactionId[]} transactionIds\n   * @param {AccountId[]} nodeIds\n   * @param {proto.ITransactionBody[]} bodies\n   * @returns {AccountCreateTransaction}\n   */\n\n\n  static _fromProtobuf(transactions, signedTransactions, transactionIds, nodeIds, bodies) {\n    const body = bodies[0];\n    const create =\n    /** @type {proto.ICryptoCreateTransactionBody} */\n    body.cryptoCreateAccount;\n    return Transaction._fromProtobufTransactions(new AccountCreateTransaction({\n      key: create.key != null ? Key._fromProtobufKey(create.key) : undefined,\n      initialBalance: create.initialBalance != null ? create.initialBalance : undefined,\n      receiverSignatureRequired: create.receiverSigRequired != null ? create.receiverSigRequired : undefined,\n      proxyAccountId: create.proxyAccountID != null ? AccountId._fromProtobuf(\n      /** @type {proto.IAccountID} */\n      create.proxyAccountID) : undefined,\n      autoRenewPeriod: create.autoRenewPeriod != null ? create.autoRenewPeriod.seconds != null ? create.autoRenewPeriod.seconds : undefined : undefined,\n      accountMemo: create.memo != null ? create.memo : undefined,\n      maxAutomaticTokenAssociations: create.maxAutomaticTokenAssociations != null ? create.maxAutomaticTokenAssociations : undefined\n    }), transactions, signedTransactions, transactionIds, nodeIds, bodies);\n  }\n  /**\n   * @returns {?Key}\n   */\n\n\n  get key() {\n    return this._key;\n  }\n  /**\n   * Set the key for this account.\n   *\n   * This is the key that must sign each transfer out of the account.\n   *\n   * If `receiverSignatureRequired` is true, then the key must also sign\n   * any transfer into the account.\n   *\n   * @param {Key} key\n   * @returns {this}\n   */\n\n\n  setKey(key) {\n    this._requireNotFrozen();\n\n    this._key = key;\n    return this;\n  }\n  /**\n   * @returns {?Hbar}\n   */\n\n\n  get initialBalance() {\n    return this._initialBalance;\n  }\n  /**\n   * Set the initial amount to transfer into this account.\n   *\n   * @param {number | string | Long | BigNumber | Hbar} initialBalance\n   * @returns {this}\n   */\n\n\n  setInitialBalance(initialBalance) {\n    this._requireNotFrozen();\n\n    this._initialBalance = initialBalance instanceof Hbar ? initialBalance : new Hbar(initialBalance);\n    return this;\n  }\n  /**\n   * @returns {boolean}\n   */\n\n\n  get receiverSignatureRequired() {\n    return this._receiverSignatureRequired;\n  }\n  /**\n   * Set to true to require the key for this account to sign any transfer of\n   * hbars to this account.\n   *\n   * @param {boolean} receiverSignatureRequired\n   * @returns {this}\n   */\n\n\n  setReceiverSignatureRequired(receiverSignatureRequired) {\n    this._requireNotFrozen();\n\n    this._receiverSignatureRequired = receiverSignatureRequired;\n    return this;\n  }\n  /**\n   * @returns {?AccountId}\n   */\n\n\n  get proxyAccountId() {\n    return this._proxyAccountId;\n  }\n  /**\n   * Set the ID of the account to which this account is proxy staked.\n   *\n   * @param {AccountId} proxyAccountId\n   * @returns {this}\n   */\n\n\n  setProxyAccountId(proxyAccountId) {\n    this._requireNotFrozen();\n\n    this._proxyAccountId = proxyAccountId;\n    return this;\n  }\n  /**\n   * @returns {Duration}\n   */\n\n\n  get autoRenewPeriod() {\n    return this._autoRenewPeriod;\n  }\n  /**\n   * Set the auto renew period for this account.\n   *\n   * @param {Duration | Long | number} autoRenewPeriod\n   * @returns {this}\n   */\n\n\n  setAutoRenewPeriod(autoRenewPeriod) {\n    this._requireNotFrozen();\n\n    this._autoRenewPeriod = autoRenewPeriod instanceof Duration ? autoRenewPeriod : new Duration(autoRenewPeriod);\n    return this;\n  }\n  /**\n   * @returns {?string}\n   */\n\n\n  get accountMemo() {\n    return this._accountMemo;\n  }\n  /**\n   * @param {string} memo\n   * @returns {this}\n   */\n\n\n  setAccountMemo(memo) {\n    this._requireNotFrozen();\n\n    this._accountMemo = memo;\n    return this;\n  }\n  /**\n   * @returns {?Long}\n   */\n\n\n  get maxAutomaticTokenAssociations() {\n    return this._maxAutomaticTokenAssociations;\n  }\n  /**\n   * @param {Long | number} maxAutomaticTokenAssociations\n   * @returns {this}\n   */\n\n\n  setMaxAutomaticTokenAssociations(maxAutomaticTokenAssociations) {\n    this._requireNotFrozen();\n\n    this._maxAutomaticTokenAssociations = typeof maxAutomaticTokenAssociations === \"number\" ? Long.fromNumber(maxAutomaticTokenAssociations) : maxAutomaticTokenAssociations;\n    return this;\n  }\n  /**\n   * @param {Client} client\n   */\n\n\n  _validateChecksums(client) {\n    if (this._proxyAccountId != null) {\n      this._proxyAccountId.validateChecksum(client);\n    }\n  }\n  /**\n   * @override\n   * @internal\n   * @param {Channel} channel\n   * @param {proto.ITransaction} request\n   * @returns {Promise<proto.ITransactionResponse>}\n   */\n\n\n  _execute(channel, request) {\n    return channel.crypto.createAccount(request);\n  }\n  /**\n   * @override\n   * @protected\n   * @returns {NonNullable<proto.TransactionBody[\"data\"]>}\n   */\n\n\n  _getTransactionDataCase() {\n    return \"cryptoCreateAccount\";\n  }\n  /**\n   * @override\n   * @protected\n   * @returns {proto.ICryptoCreateTransactionBody}\n   */\n\n\n  _makeTransactionData() {\n    return {\n      key: this._key != null ? this._key._toProtobufKey() : null,\n      initialBalance: this._initialBalance != null ? this._initialBalance.toTinybars() : null,\n      autoRenewPeriod: this._autoRenewPeriod._toProtobuf(),\n      proxyAccountID: this._proxyAccountId != null ? this._proxyAccountId._toProtobuf() : null,\n      receiveRecordThreshold: this._receiveRecordThreshold.toTinybars(),\n      sendRecordThreshold: this._sendRecordThreshold.toTinybars(),\n      receiverSigRequired: this._receiverSignatureRequired,\n      memo: this._accountMemo,\n      maxAutomaticTokenAssociations: this._maxAutomaticTokenAssociations != null ? this._maxAutomaticTokenAssociations.toInt() : null\n    };\n  }\n\n}\nTRANSACTION_REGISTRY.set(\"cryptoCreateAccount\", // eslint-disable-next-line @typescript-eslint/unbound-method\nAccountCreateTransaction._fromProtobuf);","map":{"version":3,"sources":["C:/Work/coding-sandbox/react-again/dapp-days/node_modules/@hashgraph/sdk/src/account/AccountCreateTransaction.js"],"names":["Hbar","AccountId","Transaction","DEFAULT_AUTO_RENEW_PERIOD","DEFAULT_RECORD_THRESHOLD","TRANSACTION_REGISTRY","Duration","Long","Key","AccountCreateTransaction","constructor","props","_key","_initialBalance","_sendRecordThreshold","_receiveRecordThreshold","_receiverSignatureRequired","_proxyAccountId","_autoRenewPeriod","_accountMemo","_maxAutomaticTokenAssociations","key","setKey","receiverSignatureRequired","setReceiverSignatureRequired","initialBalance","setInitialBalance","proxyAccountId","setProxyAccountId","autoRenewPeriod","setAutoRenewPeriod","accountMemo","setAccountMemo","maxAutomaticTokenAssociations","setMaxAutomaticTokenAssociations","_fromProtobuf","transactions","signedTransactions","transactionIds","nodeIds","bodies","body","create","cryptoCreateAccount","_fromProtobufTransactions","_fromProtobufKey","undefined","receiverSigRequired","proxyAccountID","seconds","memo","_requireNotFrozen","fromNumber","_validateChecksums","client","validateChecksum","_execute","channel","request","crypto","createAccount","_getTransactionDataCase","_makeTransactionData","_toProtobufKey","toTinybars","_toProtobuf","receiveRecordThreshold","sendRecordThreshold","toInt","set"],"mappings":"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","sourcesContent":["import Hbar from \"../Hbar.js\";\nimport AccountId from \"./AccountId.js\";\nimport Transaction, {\n    DEFAULT_AUTO_RENEW_PERIOD,\n    DEFAULT_RECORD_THRESHOLD,\n    TRANSACTION_REGISTRY,\n} from \"../transaction/Transaction.js\";\nimport Duration from \"../Duration.js\";\nimport Long from \"long\";\nimport Key from \"../Key.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").ITransaction} proto.ITransaction\n * @typedef {import(\"@hashgraph/proto\").ISignedTransaction} proto.ISignedTransaction\n * @typedef {import(\"@hashgraph/proto\").TransactionBody} proto.TransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionBody} proto.ITransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionResponse} proto.ITransactionResponse\n * @typedef {import(\"@hashgraph/proto\").ICryptoCreateTransactionBody} proto.ICryptoCreateTransactionBody\n * @typedef {import(\"@hashgraph/proto\").IAccountID} proto.IAccountID\n */\n\n/**\n * @typedef {import(\"bignumber.js\").default} BigNumber\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n * @typedef {import(\"../Timestamp.js\").default} Timestamp\n * @typedef {import(\"../transaction/TransactionId.js\").default} TransactionId\n */\n\n/**\n * Create a new Hederaâ„¢ crypto-currency account.\n */\nexport default class AccountCreateTransaction extends Transaction {\n    /**\n     * @param {object} [props]\n     * @param {Key} [props.key]\n     * @param {number | string | Long | BigNumber | Hbar} [props.initialBalance]\n     * @param {boolean} [props.receiverSignatureRequired]\n     * @param {AccountId} [props.proxyAccountId]\n     * @param {Duration | Long | number} [props.autoRenewPeriod]\n     * @param {string} [props.accountMemo]\n     * @param {Long | number} [props.maxAutomaticTokenAssociations]\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @private\n         * @type {?Key}\n         */\n        this._key = null;\n\n        /**\n         * @private\n         * @type {?Hbar}\n         */\n        this._initialBalance = null;\n\n        /**\n         * @private\n         * @type {Hbar}\n         */\n        this._sendRecordThreshold = DEFAULT_RECORD_THRESHOLD;\n\n        /**\n         * @private\n         * @type {Hbar}\n         */\n        this._receiveRecordThreshold = DEFAULT_RECORD_THRESHOLD;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._receiverSignatureRequired = false;\n\n        /**\n         * @private\n         * @type {?AccountId}\n         */\n        this._proxyAccountId = null;\n\n        /**\n         * @private\n         * @type {Duration}\n         */\n        this._autoRenewPeriod = new Duration(DEFAULT_AUTO_RENEW_PERIOD);\n\n        /**\n         * @private\n         * @type {?string}\n         */\n        this._accountMemo = null;\n\n        /**\n         * @private\n         * @type {?Long}\n         */\n        this._maxAutomaticTokenAssociations = null;\n\n        if (props.key != null) {\n            this.setKey(props.key);\n        }\n\n        if (props.receiverSignatureRequired != null) {\n            this.setReceiverSignatureRequired(props.receiverSignatureRequired);\n        }\n\n        if (props.initialBalance != null) {\n            this.setInitialBalance(props.initialBalance);\n        }\n\n        if (props.proxyAccountId != null) {\n            this.setProxyAccountId(props.proxyAccountId);\n        }\n\n        if (props.autoRenewPeriod != null) {\n            this.setAutoRenewPeriod(props.autoRenewPeriod);\n        }\n\n        if (props.accountMemo != null) {\n            this.setAccountMemo(props.accountMemo);\n        }\n\n        if (props.maxAutomaticTokenAssociations != null) {\n            this.setMaxAutomaticTokenAssociations(\n                props.maxAutomaticTokenAssociations\n            );\n        }\n    }\n\n    /**\n     * @internal\n     * @param {proto.ITransaction[]} transactions\n     * @param {proto.ISignedTransaction[]} signedTransactions\n     * @param {TransactionId[]} transactionIds\n     * @param {AccountId[]} nodeIds\n     * @param {proto.ITransactionBody[]} bodies\n     * @returns {AccountCreateTransaction}\n     */\n    static _fromProtobuf(\n        transactions,\n        signedTransactions,\n        transactionIds,\n        nodeIds,\n        bodies\n    ) {\n        const body = bodies[0];\n        const create = /** @type {proto.ICryptoCreateTransactionBody} */ (\n            body.cryptoCreateAccount\n        );\n\n        return Transaction._fromProtobufTransactions(\n            new AccountCreateTransaction({\n                key:\n                    create.key != null\n                        ? Key._fromProtobufKey(create.key)\n                        : undefined,\n                initialBalance:\n                    create.initialBalance != null\n                        ? create.initialBalance\n                        : undefined,\n                receiverSignatureRequired:\n                    create.receiverSigRequired != null\n                        ? create.receiverSigRequired\n                        : undefined,\n                proxyAccountId:\n                    create.proxyAccountID != null\n                        ? AccountId._fromProtobuf(\n                              /** @type {proto.IAccountID} */ (\n                                  create.proxyAccountID\n                              )\n                          )\n                        : undefined,\n                autoRenewPeriod:\n                    create.autoRenewPeriod != null\n                        ? create.autoRenewPeriod.seconds != null\n                            ? create.autoRenewPeriod.seconds\n                            : undefined\n                        : undefined,\n                accountMemo: create.memo != null ? create.memo : undefined,\n                maxAutomaticTokenAssociations:\n                    create.maxAutomaticTokenAssociations != null\n                        ? create.maxAutomaticTokenAssociations\n                        : undefined,\n            }),\n            transactions,\n            signedTransactions,\n            transactionIds,\n            nodeIds,\n            bodies\n        );\n    }\n\n    /**\n     * @returns {?Key}\n     */\n    get key() {\n        return this._key;\n    }\n\n    /**\n     * Set the key for this account.\n     *\n     * This is the key that must sign each transfer out of the account.\n     *\n     * If `receiverSignatureRequired` is true, then the key must also sign\n     * any transfer into the account.\n     *\n     * @param {Key} key\n     * @returns {this}\n     */\n    setKey(key) {\n        this._requireNotFrozen();\n        this._key = key;\n\n        return this;\n    }\n\n    /**\n     * @returns {?Hbar}\n     */\n    get initialBalance() {\n        return this._initialBalance;\n    }\n\n    /**\n     * Set the initial amount to transfer into this account.\n     *\n     * @param {number | string | Long | BigNumber | Hbar} initialBalance\n     * @returns {this}\n     */\n    setInitialBalance(initialBalance) {\n        this._requireNotFrozen();\n        this._initialBalance =\n            initialBalance instanceof Hbar\n                ? initialBalance\n                : new Hbar(initialBalance);\n\n        return this;\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    get receiverSignatureRequired() {\n        return this._receiverSignatureRequired;\n    }\n\n    /**\n     * Set to true to require the key for this account to sign any transfer of\n     * hbars to this account.\n     *\n     * @param {boolean} receiverSignatureRequired\n     * @returns {this}\n     */\n    setReceiverSignatureRequired(receiverSignatureRequired) {\n        this._requireNotFrozen();\n        this._receiverSignatureRequired = receiverSignatureRequired;\n\n        return this;\n    }\n\n    /**\n     * @returns {?AccountId}\n     */\n    get proxyAccountId() {\n        return this._proxyAccountId;\n    }\n\n    /**\n     * Set the ID of the account to which this account is proxy staked.\n     *\n     * @param {AccountId} proxyAccountId\n     * @returns {this}\n     */\n    setProxyAccountId(proxyAccountId) {\n        this._requireNotFrozen();\n        this._proxyAccountId = proxyAccountId;\n\n        return this;\n    }\n\n    /**\n     * @returns {Duration}\n     */\n    get autoRenewPeriod() {\n        return this._autoRenewPeriod;\n    }\n\n    /**\n     * Set the auto renew period for this account.\n     *\n     * @param {Duration | Long | number} autoRenewPeriod\n     * @returns {this}\n     */\n    setAutoRenewPeriod(autoRenewPeriod) {\n        this._requireNotFrozen();\n        this._autoRenewPeriod =\n            autoRenewPeriod instanceof Duration\n                ? autoRenewPeriod\n                : new Duration(autoRenewPeriod);\n\n        return this;\n    }\n\n    /**\n     * @returns {?string}\n     */\n    get accountMemo() {\n        return this._accountMemo;\n    }\n\n    /**\n     * @param {string} memo\n     * @returns {this}\n     */\n    setAccountMemo(memo) {\n        this._requireNotFrozen();\n        this._accountMemo = memo;\n\n        return this;\n    }\n\n    /**\n     * @returns {?Long}\n     */\n    get maxAutomaticTokenAssociations() {\n        return this._maxAutomaticTokenAssociations;\n    }\n\n    /**\n     * @param {Long | number} maxAutomaticTokenAssociations\n     * @returns {this}\n     */\n    setMaxAutomaticTokenAssociations(maxAutomaticTokenAssociations) {\n        this._requireNotFrozen();\n        this._maxAutomaticTokenAssociations =\n            typeof maxAutomaticTokenAssociations === \"number\"\n                ? Long.fromNumber(maxAutomaticTokenAssociations)\n                : maxAutomaticTokenAssociations;\n\n        return this;\n    }\n\n    /**\n     * @param {Client} client\n     */\n    _validateChecksums(client) {\n        if (this._proxyAccountId != null) {\n            this._proxyAccountId.validateChecksum(client);\n        }\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {proto.ITransaction} request\n     * @returns {Promise<proto.ITransactionResponse>}\n     */\n    _execute(channel, request) {\n        return channel.crypto.createAccount(request);\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {NonNullable<proto.TransactionBody[\"data\"]>}\n     */\n    _getTransactionDataCase() {\n        return \"cryptoCreateAccount\";\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {proto.ICryptoCreateTransactionBody}\n     */\n    _makeTransactionData() {\n        return {\n            key: this._key != null ? this._key._toProtobufKey() : null,\n            initialBalance:\n                this._initialBalance != null\n                    ? this._initialBalance.toTinybars()\n                    : null,\n            autoRenewPeriod: this._autoRenewPeriod._toProtobuf(),\n            proxyAccountID:\n                this._proxyAccountId != null\n                    ? this._proxyAccountId._toProtobuf()\n                    : null,\n            receiveRecordThreshold: this._receiveRecordThreshold.toTinybars(),\n            sendRecordThreshold: this._sendRecordThreshold.toTinybars(),\n            receiverSigRequired: this._receiverSignatureRequired,\n            memo: this._accountMemo,\n            maxAutomaticTokenAssociations:\n                this._maxAutomaticTokenAssociations != null\n                    ? this._maxAutomaticTokenAssociations.toInt()\n                    : null,\n        };\n    }\n}\n\nTRANSACTION_REGISTRY.set(\n    \"cryptoCreateAccount\",\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    AccountCreateTransaction._fromProtobuf\n);\n"]},"metadata":{},"sourceType":"module"}