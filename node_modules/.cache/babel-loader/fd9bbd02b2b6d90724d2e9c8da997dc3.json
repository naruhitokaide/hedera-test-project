{"ast":null,"code":"/**\n * Possible statuses for {@link Mnemonic#validate()}.\n *\n * @readonly\n * @enum {string}\n */\nconst BadMnemonicReason = Object.freeze({\n  /**\n   * The mnemonic did not have a supported number of words (12 or 24 for regular and 22 for legacy).\n   */\n  BadLength: \"BadLength\",\n\n  /**\n   * The mnemonic contained words which were not found in the word list.\n   */\n  UnknownWords: \"UnknownWords\",\n\n  /**\n   * The checksum encoded in the mnemonic did not match the checksum we just calculated for\n   * that mnemonic.\n   *\n   * 24-word mnemonics have an 8-bit checksum that is appended to the 32 bytes of source entropy\n   * after being calculated from it, before being encoded into words.\n   *\n   * This could happen if two or more of the words were entered out of the original order or\n   * replaced with another from the standard word list (as this is only returned if all the words\n   * exist in the word list).\n   */\n  ChecksumMismatch: \"ChecksumMismatch\"\n});\nexport default BadMnemonicReason;","map":{"version":3,"sources":["C:/Work/coding-sandbox/react-again/dapp-days/node_modules/@hashgraph/cryptography/src/BadMnemonicReason.js"],"names":["BadMnemonicReason","Object","freeze","BadLength","UnknownWords","ChecksumMismatch"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,iBAAiB,GAAGC,MAAM,CAACC,MAAP,CAAc;AACpC;AACJ;AACA;AACIC,EAAAA,SAAS,EAAE,WAJyB;;AAMpC;AACJ;AACA;AACIC,EAAAA,YAAY,EAAE,cATsB;;AAWpC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACIC,EAAAA,gBAAgB,EAAE;AAtBkB,CAAd,CAA1B;AAyBA,eAAeL,iBAAf","sourcesContent":["/**\n * Possible statuses for {@link Mnemonic#validate()}.\n *\n * @readonly\n * @enum {string}\n */\nconst BadMnemonicReason = Object.freeze({\n    /**\n     * The mnemonic did not have a supported number of words (12 or 24 for regular and 22 for legacy).\n     */\n    BadLength: \"BadLength\",\n\n    /**\n     * The mnemonic contained words which were not found in the word list.\n     */\n    UnknownWords: \"UnknownWords\",\n\n    /**\n     * The checksum encoded in the mnemonic did not match the checksum we just calculated for\n     * that mnemonic.\n     *\n     * 24-word mnemonics have an 8-bit checksum that is appended to the 32 bytes of source entropy\n     * after being calculated from it, before being encoded into words.\n     *\n     * This could happen if two or more of the words were entered out of the original order or\n     * replaced with another from the standard word list (as this is only returned if all the words\n     * exist in the word list).\n     */\n    ChecksumMismatch: \"ChecksumMismatch\",\n});\n\nexport default BadMnemonicReason;\n"]},"metadata":{},"sourceType":"module"}