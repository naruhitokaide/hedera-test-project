{"ast":null,"code":"var _jsxFileName = \"C:\\\\Work\\\\coding-sandbox\\\\react-again\\\\dapp-days\\\\src\\\\components\\\\MintButton.jsx\";\nimport React from \"react\";\nimport { Client, AccountId, PrivateKey, TokenCreateTransaction } from \"@hashgraph/sdk\";\nimport operator from \"../config\"; //\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function mintButton() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sayHi,\n      className: \"cta-button connect-wallet-button\",\n      children: \"Connect to Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 3\n  }, this);\n\n  async function sayHi() {\n    console.log(\"Starting token creation\");\n    const operatorId = AccountId.fromString(operator.id);\n    const operatorKey = AccountId.fromString(operator.pvkey);\n    const client = Client.forTestnet().setOperator(operatorId, operatorKey);\n    const tokenCreateTx = await new TokenCreateTransaction().setTokenName(\"dAppDayToken\").setTokenSymbol(\"DDT\").setTreasuryAccountId(operatorId);\n    console.log(\"Finished token creation\");\n  }\n}","map":{"version":3,"sources":["C:/Work/coding-sandbox/react-again/dapp-days/src/components/MintButton.jsx"],"names":["React","Client","AccountId","PrivateKey","TokenCreateTransaction","operator","mintButton","sayHi","console","log","operatorId","fromString","id","operatorKey","pvkey","client","forTestnet","setOperator","tokenCreateTx","setTokenName","setTokenSymbol","setTreasuryAccountId"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,UAA5B,EAAwCC,sBAAxC,QAAsE,gBAAtE;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CACA;;;AACA,eAAe,SAASC,UAAT,GAAsB;AACpC,sBACC;AAAA,2BACC;AAAQ,MAAA,OAAO,EAAEC,KAAjB;AAAwB,MAAA,SAAS,EAAC,kCAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;;AAQA,iBAAeA,KAAf,GAAuB;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AAEA,UAAMC,UAAU,GAAGR,SAAS,CAACS,UAAV,CAAqBN,QAAQ,CAACO,EAA9B,CAAnB;AACA,UAAMC,WAAW,GAAGX,SAAS,CAACS,UAAV,CAAqBN,QAAQ,CAACS,KAA9B,CAApB;AACA,UAAMC,MAAM,GAAGd,MAAM,CAACe,UAAP,GAAoBC,WAApB,CAAgCP,UAAhC,EAA4CG,WAA5C,CAAf;AAEA,UAAMK,aAAa,GAAG,MAAM,IAAId,sBAAJ,GAC1Be,YAD0B,CACb,cADa,EAE1BC,cAF0B,CAEX,KAFW,EAG1BC,oBAH0B,CAGLX,UAHK,CAA5B;AAKAF,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACA;AACD","sourcesContent":["import React from \"react\";\r\nimport { Client, AccountId, PrivateKey, TokenCreateTransaction } from \"@hashgraph/sdk\";\r\nimport operator from \"../config\";\r\n//\r\nexport default function mintButton() {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<button onClick={sayHi} className=\"cta-button connect-wallet-button\">\r\n\t\t\t\tConnect to Wallet\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n\r\n\tasync function sayHi() {\r\n\t\tconsole.log(\"Starting token creation\");\r\n\r\n\t\tconst operatorId = AccountId.fromString(operator.id);\r\n\t\tconst operatorKey = AccountId.fromString(operator.pvkey);\r\n\t\tconst client = Client.forTestnet().setOperator(operatorId, operatorKey);\r\n\r\n\t\tconst tokenCreateTx = await new TokenCreateTransaction()\r\n\t\t\t.setTokenName(\"dAppDayToken\")\r\n\t\t\t.setTokenSymbol(\"DDT\")\r\n\t\t\t.setTreasuryAccountId(operatorId);\r\n\r\n\t\tconsole.log(\"Finished token creation\");\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}