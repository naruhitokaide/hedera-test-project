{"ast":null,"code":"import ScheduleId from \"./ScheduleId.js\";\nimport AccountId from \"../account/AccountId.js\";\nimport Timestamp from \"../Timestamp.js\";\nimport Transaction from \"../transaction/Transaction.js\";\nimport { TransactionList as ProtoTransactionList, TransactionBody as ProtoTransactionBody, SignedTransaction as ProtoSignedTransaction, SchedulableTransactionBody as ProtoSchedulableTransactionBody } from \"@hashgraph/proto\";\nimport TransactionId from \"../transaction/TransactionId.js\";\nimport Key from \"../Key.js\";\nimport KeyList from \"../KeyList.js\";\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").IScheduleInfo} proto.IScheduleInfo\n * @typedef {import(\"@hashgraph/proto\").IScheduleID} proto.IScheduleID\n * @typedef {import(\"@hashgraph/proto\").ITimestamp} proto.ITimestamp\n * @typedef {import(\"@hashgraph/proto\").IAccountID} proto.IAccountID\n * @typedef {import(\"@hashgraph/proto\").IScheduleID} proto.IScheduledID\n * @typedef {import(\"@hashgraph/proto\").IFileID} proto.IFileID\n * @typedef {import(\"@hashgraph/proto\").IContractID} proto.IContractID\n * @typedef {import(\"@hashgraph/proto\").ITokenID} proto.ITokenID\n * @typedef {import(\"@hashgraph/proto\").IKey} proto.IKey\n * @typedef {import(\"@hashgraph/proto\").IDuration} proto.IDuration\n * @typedef {import(\"@hashgraph/proto\").ISchedulableTransactionBody} proto.ISchedulableTransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionBody} proto.ITransactionBody\n */\n\n/**\n * Response when the client sends the node ScheduleGetInfoQuery.\n */\n\nexport default class ScheduleInfo {\n  /**\n   * @private\n   * @param {object} props\n   * @param {ScheduleId} props.scheduleId;\n   * @param {?AccountId} props.creatorAccountID;\n   * @param {?AccountId} props.payerAccountID;\n   * @param {?proto.ISchedulableTransactionBody} props.schedulableTransactionBody;\n   * @param {?Key} props.adminKey\n   * @param {?KeyList} props.signers;\n   * @param {?string} props.scheduleMemo;\n   * @param {?Timestamp} props.expirationTime;\n   * @param {?Timestamp} props.executed;\n   * @param {?Timestamp} props.deleted;\n   * @param {?TransactionId} props.scheduledTransactionId;\n   */\n  constructor(props) {\n    /**\n     *\n     * @readonly\n     */\n    this.scheduleId = props.scheduleId;\n    /**\n     *\n     * @readonly\n     */\n\n    this.creatorAccountId = props.creatorAccountID;\n    /**\n     *\n     * @readonly\n     */\n\n    this.payerAccountId = props.payerAccountID;\n    /**\n     *\n     * @readonly\n     */\n\n    this.schedulableTransactionBody = props.schedulableTransactionBody;\n    /**\n     *\n     * @readonly\n     */\n\n    this.signers = props.signers;\n    /**\n     *\n     * @readonly\n     */\n\n    this.scheduleMemo = props.scheduleMemo;\n    /**\n     *\n     * @readonly\n     */\n\n    this.adminKey = props.adminKey != null ? props.adminKey : null;\n    /**\n     *\n     * @readonly\n     */\n\n    this.expirationTime = props.expirationTime;\n    /**\n     *\n     * @readonly\n     */\n\n    this.executed = props.executed;\n    /**\n     *\n     * @readonly\n     */\n\n    this.deleted = props.deleted;\n    this.scheduledTransactionId = props.scheduledTransactionId;\n    Object.freeze(this);\n  }\n  /**\n   * @internal\n   * @param {proto.IScheduleInfo} info\n   * @returns {ScheduleInfo}\n   */\n\n\n  static _fromProtobuf(info) {\n    return new ScheduleInfo({\n      scheduleId: ScheduleId._fromProtobuf(\n      /** @type {proto.IScheduleID} */\n      info.scheduleID),\n      creatorAccountID: info.creatorAccountID != null ? AccountId._fromProtobuf(\n      /** @type {proto.IAccountID} */\n      info.creatorAccountID) : null,\n      payerAccountID: info.payerAccountID != null ? AccountId._fromProtobuf(\n      /** @type {proto.IAccountID} */\n      info.payerAccountID) : null,\n      schedulableTransactionBody: info.scheduledTransactionBody != null ? info.scheduledTransactionBody : null,\n      adminKey: info.adminKey != null ? Key._fromProtobufKey(info.adminKey) : null,\n      signers: info.signers != null ? KeyList.__fromProtobufKeyList(info.signers) : null,\n      scheduleMemo: info.memo != null ? info.memo : null,\n      expirationTime: info.expirationTime != null ? Timestamp._fromProtobuf(\n      /** @type {proto.ITimestamp} */\n      info.expirationTime) : null,\n      executed: info.executionTime != null ? Timestamp._fromProtobuf(\n      /** @type {proto.ITimestamp} */\n      info.executionTime) : null,\n      deleted: info.deletionTime != null ? Timestamp._fromProtobuf(\n      /** @type {proto.ITimestamp} */\n      info.deletionTime) : null,\n      scheduledTransactionId: info.scheduledTransactionID != null ? TransactionId._fromProtobuf(info.scheduledTransactionID) : null\n    });\n  }\n  /**\n   * @returns {proto.IScheduleInfo}\n   */\n\n\n  _toProtobuf() {\n    return {\n      scheduleID: this.scheduleId != null ? this.scheduleId._toProtobuf() : null,\n      creatorAccountID: this.creatorAccountId != null ? this.creatorAccountId._toProtobuf() : null,\n      payerAccountID: this.payerAccountId != null ? this.payerAccountId._toProtobuf() : null,\n      scheduledTransactionBody: this.schedulableTransactionBody != null ? this.schedulableTransactionBody : null,\n      adminKey: this.adminKey != null ? this.adminKey._toProtobufKey() : null,\n      signers: this.signers != null ? this.signers._toProtobufKey().keyList : null,\n      memo: this.scheduleMemo != null ? this.scheduleMemo : \"\",\n      expirationTime: this.expirationTime != null ? this.expirationTime._toProtobuf() : null,\n      scheduledTransactionID: this.scheduledTransactionId != null ? this.scheduledTransactionId._toProtobuf() : null\n    };\n  }\n  /**\n   * @returns {Transaction}\n   */\n\n\n  get scheduledTransaction() {\n    if (this.schedulableTransactionBody == null) {\n      throw new Error(\"Scheduled transaction body is empty\");\n    }\n\n    const scheduled = new ProtoSchedulableTransactionBody(this.schedulableTransactionBody);\n    const data =\n    /** @type {NonNullable<ProtoSchedulableTransactionBody[\"data\"]>} */\n    scheduled.data;\n    return Transaction.fromBytes(ProtoTransactionList.encode({\n      transactionList: [{\n        signedTransactionBytes: ProtoSignedTransaction.encode({\n          bodyBytes: ProtoTransactionBody.encode({\n            transactionFee: this.schedulableTransactionBody.transactionFee,\n            memo: this.schedulableTransactionBody.memo,\n            [data]: scheduled[data]\n          }).finish()\n        }).finish()\n      }]\n    }).finish());\n  }\n\n}","map":{"version":3,"sources":["C:/Work/coding-sandbox/react-again/dapp-days/node_modules/@hashgraph/sdk/src/schedule/ScheduleInfo.js"],"names":["ScheduleId","AccountId","Timestamp","Transaction","TransactionList","ProtoTransactionList","TransactionBody","ProtoTransactionBody","SignedTransaction","ProtoSignedTransaction","SchedulableTransactionBody","ProtoSchedulableTransactionBody","TransactionId","Key","KeyList","ScheduleInfo","constructor","props","scheduleId","creatorAccountId","creatorAccountID","payerAccountId","payerAccountID","schedulableTransactionBody","signers","scheduleMemo","adminKey","expirationTime","executed","deleted","scheduledTransactionId","Object","freeze","_fromProtobuf","info","scheduleID","scheduledTransactionBody","_fromProtobufKey","__fromProtobufKeyList","memo","executionTime","deletionTime","scheduledTransactionID","_toProtobuf","_toProtobufKey","keyList","scheduledTransaction","Error","scheduled","data","fromBytes","encode","transactionList","signedTransactionBytes","bodyBytes","transactionFee","finish"],"mappings":"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","sourcesContent":["import ScheduleId from \"./ScheduleId.js\";\nimport AccountId from \"../account/AccountId.js\";\nimport Timestamp from \"../Timestamp.js\";\nimport Transaction from \"../transaction/Transaction.js\";\nimport {\n    TransactionList as ProtoTransactionList,\n    TransactionBody as ProtoTransactionBody,\n    SignedTransaction as ProtoSignedTransaction,\n    SchedulableTransactionBody as ProtoSchedulableTransactionBody,\n} from \"@hashgraph/proto\";\nimport TransactionId from \"../transaction/TransactionId.js\";\nimport Key from \"../Key.js\";\nimport KeyList from \"../KeyList.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").IScheduleInfo} proto.IScheduleInfo\n * @typedef {import(\"@hashgraph/proto\").IScheduleID} proto.IScheduleID\n * @typedef {import(\"@hashgraph/proto\").ITimestamp} proto.ITimestamp\n * @typedef {import(\"@hashgraph/proto\").IAccountID} proto.IAccountID\n * @typedef {import(\"@hashgraph/proto\").IScheduleID} proto.IScheduledID\n * @typedef {import(\"@hashgraph/proto\").IFileID} proto.IFileID\n * @typedef {import(\"@hashgraph/proto\").IContractID} proto.IContractID\n * @typedef {import(\"@hashgraph/proto\").ITokenID} proto.ITokenID\n * @typedef {import(\"@hashgraph/proto\").IKey} proto.IKey\n * @typedef {import(\"@hashgraph/proto\").IDuration} proto.IDuration\n * @typedef {import(\"@hashgraph/proto\").ISchedulableTransactionBody} proto.ISchedulableTransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionBody} proto.ITransactionBody\n */\n\n/**\n * Response when the client sends the node ScheduleGetInfoQuery.\n */\nexport default class ScheduleInfo {\n    /**\n     * @private\n     * @param {object} props\n     * @param {ScheduleId} props.scheduleId;\n     * @param {?AccountId} props.creatorAccountID;\n     * @param {?AccountId} props.payerAccountID;\n     * @param {?proto.ISchedulableTransactionBody} props.schedulableTransactionBody;\n     * @param {?Key} props.adminKey\n     * @param {?KeyList} props.signers;\n     * @param {?string} props.scheduleMemo;\n     * @param {?Timestamp} props.expirationTime;\n     * @param {?Timestamp} props.executed;\n     * @param {?Timestamp} props.deleted;\n     * @param {?TransactionId} props.scheduledTransactionId;\n     */\n    constructor(props) {\n        /**\n         *\n         * @readonly\n         */\n        this.scheduleId = props.scheduleId;\n\n        /**\n         *\n         * @readonly\n         */\n        this.creatorAccountId = props.creatorAccountID;\n\n        /**\n         *\n         * @readonly\n         */\n        this.payerAccountId = props.payerAccountID;\n\n        /**\n         *\n         * @readonly\n         */\n        this.schedulableTransactionBody = props.schedulableTransactionBody;\n\n        /**\n         *\n         * @readonly\n         */\n        this.signers = props.signers;\n\n        /**\n         *\n         * @readonly\n         */\n        this.scheduleMemo = props.scheduleMemo;\n\n        /**\n         *\n         * @readonly\n         */\n        this.adminKey = props.adminKey != null ? props.adminKey : null;\n\n        /**\n         *\n         * @readonly\n         */\n        this.expirationTime = props.expirationTime;\n\n        /**\n         *\n         * @readonly\n         */\n        this.executed = props.executed;\n\n        /**\n         *\n         * @readonly\n         */\n        this.deleted = props.deleted;\n\n        this.scheduledTransactionId = props.scheduledTransactionId;\n\n        Object.freeze(this);\n    }\n\n    /**\n     * @internal\n     * @param {proto.IScheduleInfo} info\n     * @returns {ScheduleInfo}\n     */\n    static _fromProtobuf(info) {\n        return new ScheduleInfo({\n            scheduleId: ScheduleId._fromProtobuf(\n                /** @type {proto.IScheduleID} */ (info.scheduleID)\n            ),\n            creatorAccountID:\n                info.creatorAccountID != null\n                    ? AccountId._fromProtobuf(\n                          /** @type {proto.IAccountID} */ (\n                              info.creatorAccountID\n                          )\n                      )\n                    : null,\n            payerAccountID:\n                info.payerAccountID != null\n                    ? AccountId._fromProtobuf(\n                          /** @type {proto.IAccountID} */ (info.payerAccountID)\n                      )\n                    : null,\n            schedulableTransactionBody:\n                info.scheduledTransactionBody != null\n                    ? info.scheduledTransactionBody\n                    : null,\n            adminKey:\n                info.adminKey != null\n                    ? Key._fromProtobufKey(info.adminKey)\n                    : null,\n            signers:\n                info.signers != null\n                    ? KeyList.__fromProtobufKeyList(info.signers)\n                    : null,\n            scheduleMemo: info.memo != null ? info.memo : null,\n            expirationTime:\n                info.expirationTime != null\n                    ? Timestamp._fromProtobuf(\n                          /** @type {proto.ITimestamp} */ (info.expirationTime)\n                      )\n                    : null,\n            executed:\n                info.executionTime != null\n                    ? Timestamp._fromProtobuf(\n                          /** @type {proto.ITimestamp} */ (info.executionTime)\n                      )\n                    : null,\n            deleted:\n                info.deletionTime != null\n                    ? Timestamp._fromProtobuf(\n                          /** @type {proto.ITimestamp} */ (info.deletionTime)\n                      )\n                    : null,\n            scheduledTransactionId:\n                info.scheduledTransactionID != null\n                    ? TransactionId._fromProtobuf(info.scheduledTransactionID)\n                    : null,\n        });\n    }\n\n    /**\n     * @returns {proto.IScheduleInfo}\n     */\n    _toProtobuf() {\n        return {\n            scheduleID:\n                this.scheduleId != null ? this.scheduleId._toProtobuf() : null,\n            creatorAccountID:\n                this.creatorAccountId != null\n                    ? this.creatorAccountId._toProtobuf()\n                    : null,\n            payerAccountID:\n                this.payerAccountId != null\n                    ? this.payerAccountId._toProtobuf()\n                    : null,\n            scheduledTransactionBody:\n                this.schedulableTransactionBody != null\n                    ? this.schedulableTransactionBody\n                    : null,\n            adminKey:\n                this.adminKey != null ? this.adminKey._toProtobufKey() : null,\n            signers:\n                this.signers != null\n                    ? this.signers._toProtobufKey().keyList\n                    : null,\n            memo: this.scheduleMemo != null ? this.scheduleMemo : \"\",\n            expirationTime:\n                this.expirationTime != null\n                    ? this.expirationTime._toProtobuf()\n                    : null,\n            scheduledTransactionID:\n                this.scheduledTransactionId != null\n                    ? this.scheduledTransactionId._toProtobuf()\n                    : null,\n        };\n    }\n\n    /**\n     * @returns {Transaction}\n     */\n    get scheduledTransaction() {\n        if (this.schedulableTransactionBody == null) {\n            throw new Error(\"Scheduled transaction body is empty\");\n        }\n\n        const scheduled = new ProtoSchedulableTransactionBody(\n            this.schedulableTransactionBody\n        );\n        const data =\n            /** @type {NonNullable<ProtoSchedulableTransactionBody[\"data\"]>} */ (\n                scheduled.data\n            );\n\n        return Transaction.fromBytes(\n            ProtoTransactionList.encode({\n                transactionList: [\n                    {\n                        signedTransactionBytes: ProtoSignedTransaction.encode({\n                            bodyBytes: ProtoTransactionBody.encode({\n                                transactionFee:\n                                    this.schedulableTransactionBody\n                                        .transactionFee,\n                                memo: this.schedulableTransactionBody.memo,\n                                [data]: scheduled[data],\n                            }).finish(),\n                        }).finish(),\n                    },\n                ],\n            }).finish()\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}