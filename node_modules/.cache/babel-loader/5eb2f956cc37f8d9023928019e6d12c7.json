{"ast":null,"code":"import NodeAccountIdSignatureMap from \"./NodeAccountIdSignatureMap.js\";\nimport ObjectMap from \"../ObjectMap.js\";\nimport AccountId from \"../account/AccountId.js\";\n/**\n * @augments {ObjectMap<AccountId, NodeAccountIdSignatureMap>}\n */\n\nexport default class SignatureMap extends ObjectMap {\n  constructor() {\n    super(s => AccountId.fromString(s));\n  }\n  /**\n   * @param {import(\"./Transaction.js\").default} transaction\n   * @returns {SignatureMap}\n   */\n\n\n  static _fromTransaction(transaction) {\n    const signatures = new SignatureMap();\n\n    for (let i = 0; i < transaction._nodeIds.length; i++) {\n      const sigMap = transaction._signedTransactions[i].sigMap;\n\n      if (sigMap != null) {\n        signatures._set(transaction._nodeIds[i], NodeAccountIdSignatureMap._fromTransactionSigMap(sigMap));\n      }\n    }\n\n    return signatures;\n  }\n\n}","map":{"version":3,"sources":["C:/Work/coding-sandbox/react-again/dapp-days/node_modules/@hashgraph/sdk/src/transaction/SignatureMap.js"],"names":["NodeAccountIdSignatureMap","ObjectMap","AccountId","SignatureMap","constructor","s","fromString","_fromTransaction","transaction","signatures","i","_nodeIds","length","sigMap","_signedTransactions","_set","_fromTransactionSigMap"],"mappings":"AAAA,OAAOA,yBAAP,MAAsC,gCAAtC;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AAEA;AACA;AACA;;AACA,eAAe,MAAMC,YAAN,SAA2BF,SAA3B,CAAqC;AAChDG,EAAAA,WAAW,GAAG;AACV,UAAOC,CAAD,IAAOH,SAAS,CAACI,UAAV,CAAqBD,CAArB,CAAb;AACH;AAED;AACJ;AACA;AACA;;;AAC2B,SAAhBE,gBAAgB,CAACC,WAAD,EAAc;AACjC,UAAMC,UAAU,GAAG,IAAIN,YAAJ,EAAnB;;AAEA,SAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,WAAW,CAACG,QAAZ,CAAqBC,MAAzC,EAAiDF,CAAC,EAAlD,EAAsD;AAClD,YAAMG,MAAM,GAAGL,WAAW,CAACM,mBAAZ,CAAgCJ,CAAhC,EAAmCG,MAAlD;;AAEA,UAAIA,MAAM,IAAI,IAAd,EAAoB;AAChBJ,QAAAA,UAAU,CAACM,IAAX,CACIP,WAAW,CAACG,QAAZ,CAAqBD,CAArB,CADJ,EAEIV,yBAAyB,CAACgB,sBAA1B,CAAiDH,MAAjD,CAFJ;AAIH;AACJ;;AAED,WAAOJ,UAAP;AACH;;AAxB+C","sourcesContent":["import NodeAccountIdSignatureMap from \"./NodeAccountIdSignatureMap.js\";\nimport ObjectMap from \"../ObjectMap.js\";\nimport AccountId from \"../account/AccountId.js\";\n\n/**\n * @augments {ObjectMap<AccountId, NodeAccountIdSignatureMap>}\n */\nexport default class SignatureMap extends ObjectMap {\n    constructor() {\n        super((s) => AccountId.fromString(s));\n    }\n\n    /**\n     * @param {import(\"./Transaction.js\").default} transaction\n     * @returns {SignatureMap}\n     */\n    static _fromTransaction(transaction) {\n        const signatures = new SignatureMap();\n\n        for (let i = 0; i < transaction._nodeIds.length; i++) {\n            const sigMap = transaction._signedTransactions[i].sigMap;\n\n            if (sigMap != null) {\n                signatures._set(\n                    transaction._nodeIds[i],\n                    NodeAccountIdSignatureMap._fromTransactionSigMap(sigMap)\n                );\n            }\n        }\n\n        return signatures;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}