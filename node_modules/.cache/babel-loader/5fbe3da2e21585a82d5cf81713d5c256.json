{"ast":null,"code":"import Hbar from \"../Hbar.js\";\nimport TokenId from \"./TokenId.js\";\nimport AccountId from \"../account/AccountId.js\";\nimport Transaction, { TRANSACTION_REGISTRY } from \"../transaction/Transaction.js\";\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").ITransaction} proto.ITransaction\n * @typedef {import(\"@hashgraph/proto\").ISignedTransaction} proto.ISignedTransaction\n * @typedef {import(\"@hashgraph/proto\").TransactionBody} proto.TransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionBody} proto.ITransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionResponse} proto.ITransactionResponse\n * @typedef {import(\"@hashgraph/proto\").ITokenDissociateTransactionBody} proto.ITokenDissociateTransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITokenID} proto.ITokenID\n */\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n * @typedef {import(\"../transaction/TransactionId.js\").default} TransactionId\n */\n\n/**\n * Dissociate a new Hedera™ crypto-currency token.\n */\n\nexport default class TokenDissociateTransaction extends Transaction {\n  /**\n   * @param {object} [props]\n   * @param {(TokenId | string)[]} [props.tokenIds]\n   * @param {AccountId | string} [props.accountId]\n   */\n  constructor() {\n    let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super();\n    /**\n     * @private\n     * @type {?TokenId[]}\n     */\n\n    this._tokenIds = null;\n    /**\n     * @private\n     * @type {?AccountId}\n     */\n\n    this._accountId = null;\n    this.setMaxTransactionFee(new Hbar(5));\n\n    if (props.tokenIds != null) {\n      this.setTokenIds(props.tokenIds);\n    }\n\n    if (props.accountId != null) {\n      this.setAccountId(props.accountId);\n    }\n  }\n  /**\n   * @internal\n   * @param {proto.ITransaction[]} transactions\n   * @param {proto.ISignedTransaction[]} signedTransactions\n   * @param {TransactionId[]} transactionIds\n   * @param {AccountId[]} nodeIds\n   * @param {proto.ITransactionBody[]} bodies\n   * @returns {TokenDissociateTransaction}\n   */\n\n\n  static _fromProtobuf(transactions, signedTransactions, transactionIds, nodeIds, bodies) {\n    const body = bodies[0];\n    const dissociateToken =\n    /** @type {proto.ITokenDissociateTransactionBody} */\n    body.tokenDissociate;\n    return Transaction._fromProtobufTransactions(new TokenDissociateTransaction({\n      tokenIds: dissociateToken.tokens != null ? dissociateToken.tokens.map(token => TokenId._fromProtobuf(token)) : undefined,\n      accountId: dissociateToken.account != null ? AccountId._fromProtobuf(dissociateToken.account) : undefined\n    }), transactions, signedTransactions, transactionIds, nodeIds, bodies);\n  }\n  /**\n   * @returns {?TokenId[]}\n   */\n\n\n  get tokenIds() {\n    return this._tokenIds;\n  }\n  /**\n   * @param {(TokenId | string)[]} tokenIds\n   * @returns {this}\n   */\n\n\n  setTokenIds(tokenIds) {\n    this._requireNotFrozen();\n\n    this._tokenIds = tokenIds.map(tokenId => typeof tokenId === \"string\" ? TokenId.fromString(tokenId) : tokenId.clone());\n    return this;\n  }\n  /**\n   * @returns {?AccountId}\n   */\n\n\n  get accountId() {\n    return this._accountId;\n  }\n  /**\n   * @param {AccountId | string} accountId\n   * @returns {this}\n   */\n\n\n  setAccountId(accountId) {\n    this._requireNotFrozen();\n\n    this._accountId = typeof accountId === \"string\" ? AccountId.fromString(accountId) : accountId.clone();\n    return this;\n  }\n  /**\n   * @param {Client} client\n   */\n\n\n  _validateChecksums(client) {\n    if (this._accountId != null) {\n      this._accountId.validateChecksum(client);\n    }\n\n    for (const tokenId of this._tokenIds != null ? this._tokenIds : []) {\n      if (tokenId != null) {\n        tokenId.validateChecksum(client);\n      }\n    }\n  }\n  /**\n   * @override\n   * @internal\n   * @param {Channel} channel\n   * @param {proto.ITransaction} request\n   * @returns {Promise<proto.ITransactionResponse>}\n   */\n\n\n  _execute(channel, request) {\n    return channel.token.dissociateTokens(request);\n  }\n  /**\n   * @override\n   * @protected\n   * @returns {NonNullable<proto.TransactionBody[\"data\"]>}\n   */\n\n\n  _getTransactionDataCase() {\n    return \"tokenDissociate\";\n  }\n  /**\n   * @override\n   * @protected\n   * @returns {proto.ITokenDissociateTransactionBody}\n   */\n\n\n  _makeTransactionData() {\n    return {\n      tokens: this._tokenIds != null ? this._tokenIds.map(tokenId => tokenId._toProtobuf()) : null,\n      account: this._accountId != null ? this._accountId._toProtobuf() : null\n    };\n  }\n\n}\nTRANSACTION_REGISTRY.set(\"tokenDissociate\", // eslint-disable-next-line @typescript-eslint/unbound-method\nTokenDissociateTransaction._fromProtobuf);","map":{"version":3,"sources":["C:/Work/coding-sandbox/react-again/dapp-days/node_modules/@hashgraph/sdk/src/token/TokenDissociateTransaction.js"],"names":["Hbar","TokenId","AccountId","Transaction","TRANSACTION_REGISTRY","TokenDissociateTransaction","constructor","props","_tokenIds","_accountId","setMaxTransactionFee","tokenIds","setTokenIds","accountId","setAccountId","_fromProtobuf","transactions","signedTransactions","transactionIds","nodeIds","bodies","body","dissociateToken","tokenDissociate","_fromProtobufTransactions","tokens","map","token","undefined","account","_requireNotFrozen","tokenId","fromString","clone","_validateChecksums","client","validateChecksum","_execute","channel","request","dissociateTokens","_getTransactionDataCase","_makeTransactionData","_toProtobuf","set"],"mappings":"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","sourcesContent":["import Hbar from \"../Hbar.js\";\nimport TokenId from \"./TokenId.js\";\nimport AccountId from \"../account/AccountId.js\";\nimport Transaction, {\n    TRANSACTION_REGISTRY,\n} from \"../transaction/Transaction.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").ITransaction} proto.ITransaction\n * @typedef {import(\"@hashgraph/proto\").ISignedTransaction} proto.ISignedTransaction\n * @typedef {import(\"@hashgraph/proto\").TransactionBody} proto.TransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionBody} proto.ITransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionResponse} proto.ITransactionResponse\n * @typedef {import(\"@hashgraph/proto\").ITokenDissociateTransactionBody} proto.ITokenDissociateTransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITokenID} proto.ITokenID\n */\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n * @typedef {import(\"../transaction/TransactionId.js\").default} TransactionId\n */\n\n/**\n * Dissociate a new Hedera™ crypto-currency token.\n */\nexport default class TokenDissociateTransaction extends Transaction {\n    /**\n     * @param {object} [props]\n     * @param {(TokenId | string)[]} [props.tokenIds]\n     * @param {AccountId | string} [props.accountId]\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @private\n         * @type {?TokenId[]}\n         */\n        this._tokenIds = null;\n\n        /**\n         * @private\n         * @type {?AccountId}\n         */\n        this._accountId = null;\n\n        this.setMaxTransactionFee(new Hbar(5));\n\n        if (props.tokenIds != null) {\n            this.setTokenIds(props.tokenIds);\n        }\n\n        if (props.accountId != null) {\n            this.setAccountId(props.accountId);\n        }\n    }\n\n    /**\n     * @internal\n     * @param {proto.ITransaction[]} transactions\n     * @param {proto.ISignedTransaction[]} signedTransactions\n     * @param {TransactionId[]} transactionIds\n     * @param {AccountId[]} nodeIds\n     * @param {proto.ITransactionBody[]} bodies\n     * @returns {TokenDissociateTransaction}\n     */\n    static _fromProtobuf(\n        transactions,\n        signedTransactions,\n        transactionIds,\n        nodeIds,\n        bodies\n    ) {\n        const body = bodies[0];\n        const dissociateToken =\n            /** @type {proto.ITokenDissociateTransactionBody} */ (\n                body.tokenDissociate\n            );\n\n        return Transaction._fromProtobufTransactions(\n            new TokenDissociateTransaction({\n                tokenIds:\n                    dissociateToken.tokens != null\n                        ? dissociateToken.tokens.map((token) =>\n                              TokenId._fromProtobuf(token)\n                          )\n                        : undefined,\n                accountId:\n                    dissociateToken.account != null\n                        ? AccountId._fromProtobuf(dissociateToken.account)\n                        : undefined,\n            }),\n            transactions,\n            signedTransactions,\n            transactionIds,\n            nodeIds,\n            bodies\n        );\n    }\n\n    /**\n     * @returns {?TokenId[]}\n     */\n    get tokenIds() {\n        return this._tokenIds;\n    }\n\n    /**\n     * @param {(TokenId | string)[]} tokenIds\n     * @returns {this}\n     */\n    setTokenIds(tokenIds) {\n        this._requireNotFrozen();\n        this._tokenIds = tokenIds.map((tokenId) =>\n            typeof tokenId === \"string\"\n                ? TokenId.fromString(tokenId)\n                : tokenId.clone()\n        );\n\n        return this;\n    }\n\n    /**\n     * @returns {?AccountId}\n     */\n    get accountId() {\n        return this._accountId;\n    }\n\n    /**\n     * @param {AccountId | string} accountId\n     * @returns {this}\n     */\n    setAccountId(accountId) {\n        this._requireNotFrozen();\n        this._accountId =\n            typeof accountId === \"string\"\n                ? AccountId.fromString(accountId)\n                : accountId.clone();\n\n        return this;\n    }\n\n    /**\n     * @param {Client} client\n     */\n    _validateChecksums(client) {\n        if (this._accountId != null) {\n            this._accountId.validateChecksum(client);\n        }\n\n        for (const tokenId of this._tokenIds != null ? this._tokenIds : []) {\n            if (tokenId != null) {\n                tokenId.validateChecksum(client);\n            }\n        }\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {proto.ITransaction} request\n     * @returns {Promise<proto.ITransactionResponse>}\n     */\n    _execute(channel, request) {\n        return channel.token.dissociateTokens(request);\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {NonNullable<proto.TransactionBody[\"data\"]>}\n     */\n    _getTransactionDataCase() {\n        return \"tokenDissociate\";\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {proto.ITokenDissociateTransactionBody}\n     */\n    _makeTransactionData() {\n        return {\n            tokens:\n                this._tokenIds != null\n                    ? this._tokenIds.map((tokenId) => tokenId._toProtobuf())\n                    : null,\n            account:\n                this._accountId != null ? this._accountId._toProtobuf() : null,\n        };\n    }\n}\n\nTRANSACTION_REGISTRY.set(\n    \"tokenDissociate\",\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    TokenDissociateTransaction._fromProtobuf\n);\n"]},"metadata":{},"sourceType":"module"}