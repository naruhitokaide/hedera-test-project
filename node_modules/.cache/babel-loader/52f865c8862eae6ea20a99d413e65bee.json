{"ast":null,"code":"/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").ResponseCodeEnum} proto.ResponseCodeEnum\n */\nexport default class Status {\n  /**\n   * @hideconstructor\n   * @internal\n   * @param {number} code\n   */\n  constructor(code) {\n    /** @readonly */\n    this._code = code;\n    Object.freeze(this);\n  }\n  /**\n   * @returns {string}\n   */\n\n\n  toString() {\n    switch (this) {\n      case Status.Ok:\n        return \"OK\";\n\n      case Status.InvalidTransaction:\n        return \"INVALID_TRANSACTION\";\n\n      case Status.PayerAccountNotFound:\n        return \"PAYER_ACCOUNT_NOT_FOUND\";\n\n      case Status.InvalidNodeAccount:\n        return \"INVALID_NODE_ACCOUNT\";\n\n      case Status.TransactionExpired:\n        return \"TRANSACTION_EXPIRED\";\n\n      case Status.InvalidTransactionStart:\n        return \"INVALID_TRANSACTION_START\";\n\n      case Status.InvalidTransactionDuration:\n        return \"INVALID_TRANSACTION_DURATION\";\n\n      case Status.InvalidSignature:\n        return \"INVALID_SIGNATURE\";\n\n      case Status.MemoTooLong:\n        return \"MEMO_TOO_LONG\";\n\n      case Status.InsufficientTxFee:\n        return \"INSUFFICIENT_TX_FEE\";\n\n      case Status.InsufficientPayerBalance:\n        return \"INSUFFICIENT_PAYER_BALANCE\";\n\n      case Status.DuplicateTransaction:\n        return \"DUPLICATE_TRANSACTION\";\n\n      case Status.Busy:\n        return \"BUSY\";\n\n      case Status.NotSupported:\n        return \"NOT_SUPPORTED\";\n\n      case Status.InvalidFileId:\n        return \"INVALID_FILE_ID\";\n\n      case Status.InvalidAccountId:\n        return \"INVALID_ACCOUNT_ID\";\n\n      case Status.InvalidContractId:\n        return \"INVALID_CONTRACT_ID\";\n\n      case Status.InvalidTransactionId:\n        return \"INVALID_TRANSACTION_ID\";\n\n      case Status.ReceiptNotFound:\n        return \"RECEIPT_NOT_FOUND\";\n\n      case Status.RecordNotFound:\n        return \"RECORD_NOT_FOUND\";\n\n      case Status.InvalidSolidityId:\n        return \"INVALID_SOLIDITY_ID\";\n\n      case Status.Unknown:\n        return \"UNKNOWN\";\n\n      case Status.Success:\n        return \"SUCCESS\";\n\n      case Status.FailInvalid:\n        return \"FAIL_INVALID\";\n\n      case Status.FailFee:\n        return \"FAIL_FEE\";\n\n      case Status.FailBalance:\n        return \"FAIL_BALANCE\";\n\n      case Status.KeyRequired:\n        return \"KEY_REQUIRED\";\n\n      case Status.BadEncoding:\n        return \"BAD_ENCODING\";\n\n      case Status.InsufficientAccountBalance:\n        return \"INSUFFICIENT_ACCOUNT_BALANCE\";\n\n      case Status.InvalidSolidityAddress:\n        return \"INVALID_SOLIDITY_ADDRESS\";\n\n      case Status.InsufficientGas:\n        return \"INSUFFICIENT_GAS\";\n\n      case Status.ContractSizeLimitExceeded:\n        return \"CONTRACT_SIZE_LIMIT_EXCEEDED\";\n\n      case Status.LocalCallModificationException:\n        return \"LOCAL_CALL_MODIFICATION_EXCEPTION\";\n\n      case Status.ContractRevertExecuted:\n        return \"CONTRACT_REVERT_EXECUTED\";\n\n      case Status.ContractExecutionException:\n        return \"CONTRACT_EXECUTION_EXCEPTION\";\n\n      case Status.InvalidReceivingNodeAccount:\n        return \"INVALID_RECEIVING_NODE_ACCOUNT\";\n\n      case Status.MissingQueryHeader:\n        return \"MISSING_QUERY_HEADER\";\n\n      case Status.AccountUpdateFailed:\n        return \"ACCOUNT_UPDATE_FAILED\";\n\n      case Status.InvalidKeyEncoding:\n        return \"INVALID_KEY_ENCODING\";\n\n      case Status.NullSolidityAddress:\n        return \"NULL_SOLIDITY_ADDRESS\";\n\n      case Status.ContractUpdateFailed:\n        return \"CONTRACT_UPDATE_FAILED\";\n\n      case Status.InvalidQueryHeader:\n        return \"INVALID_QUERY_HEADER\";\n\n      case Status.InvalidFeeSubmitted:\n        return \"INVALID_FEE_SUBMITTED\";\n\n      case Status.InvalidPayerSignature:\n        return \"INVALID_PAYER_SIGNATURE\";\n\n      case Status.KeyNotProvided:\n        return \"KEY_NOT_PROVIDED\";\n\n      case Status.InvalidExpirationTime:\n        return \"INVALID_EXPIRATION_TIME\";\n\n      case Status.NoWaclKey:\n        return \"NO_WACL_KEY\";\n\n      case Status.FileContentEmpty:\n        return \"FILE_CONTENT_EMPTY\";\n\n      case Status.InvalidAccountAmounts:\n        return \"INVALID_ACCOUNT_AMOUNTS\";\n\n      case Status.EmptyTransactionBody:\n        return \"EMPTY_TRANSACTION_BODY\";\n\n      case Status.InvalidTransactionBody:\n        return \"INVALID_TRANSACTION_BODY\";\n\n      case Status.InvalidSignatureTypeMismatchingKey:\n        return \"INVALID_SIGNATURE_TYPE_MISMATCHING_KEY\";\n\n      case Status.InvalidSignatureCountMismatchingKey:\n        return \"INVALID_SIGNATURE_COUNT_MISMATCHING_KEY\";\n\n      case Status.EmptyLiveHashBody:\n        return \"EMPTY_LIVE_HASH_BODY\";\n\n      case Status.EmptyLiveHash:\n        return \"EMPTY_LIVE_HASH\";\n\n      case Status.EmptyLiveHashKeys:\n        return \"EMPTY_LIVE_HASH_KEYS\";\n\n      case Status.InvalidLiveHashSize:\n        return \"INVALID_LIVE_HASH_SIZE\";\n\n      case Status.EmptyQueryBody:\n        return \"EMPTY_QUERY_BODY\";\n\n      case Status.EmptyLiveHashQuery:\n        return \"EMPTY_LIVE_HASH_QUERY\";\n\n      case Status.LiveHashNotFound:\n        return \"LIVE_HASH_NOT_FOUND\";\n\n      case Status.AccountIdDoesNotExist:\n        return \"ACCOUNT_ID_DOES_NOT_EXIST\";\n\n      case Status.LiveHashAlreadyExists:\n        return \"LIVE_HASH_ALREADY_EXISTS\";\n\n      case Status.InvalidFileWacl:\n        return \"INVALID_FILE_WACL\";\n\n      case Status.SerializationFailed:\n        return \"SERIALIZATION_FAILED\";\n\n      case Status.TransactionOversize:\n        return \"TRANSACTION_OVERSIZE\";\n\n      case Status.TransactionTooManyLayers:\n        return \"TRANSACTION_TOO_MANY_LAYERS\";\n\n      case Status.ContractDeleted:\n        return \"CONTRACT_DELETED\";\n\n      case Status.PlatformNotActive:\n        return \"PLATFORM_NOT_ACTIVE\";\n\n      case Status.KeyPrefixMismatch:\n        return \"KEY_PREFIX_MISMATCH\";\n\n      case Status.PlatformTransactionNotCreated:\n        return \"PLATFORM_TRANSACTION_NOT_CREATED\";\n\n      case Status.InvalidRenewalPeriod:\n        return \"INVALID_RENEWAL_PERIOD\";\n\n      case Status.InvalidPayerAccountId:\n        return \"INVALID_PAYER_ACCOUNT_ID\";\n\n      case Status.AccountDeleted:\n        return \"ACCOUNT_DELETED\";\n\n      case Status.FileDeleted:\n        return \"FILE_DELETED\";\n\n      case Status.AccountRepeatedInAccountAmounts:\n        return \"ACCOUNT_REPEATED_IN_ACCOUNT_AMOUNTS\";\n\n      case Status.SettingNegativeAccountBalance:\n        return \"SETTING_NEGATIVE_ACCOUNT_BALANCE\";\n\n      case Status.ObtainerRequired:\n        return \"OBTAINER_REQUIRED\";\n\n      case Status.ObtainerSameContractId:\n        return \"OBTAINER_SAME_CONTRACT_ID\";\n\n      case Status.ObtainerDoesNotExist:\n        return \"OBTAINER_DOES_NOT_EXIST\";\n\n      case Status.ModifyingImmutableContract:\n        return \"MODIFYING_IMMUTABLE_CONTRACT\";\n\n      case Status.FileSystemException:\n        return \"FILE_SYSTEM_EXCEPTION\";\n\n      case Status.AutorenewDurationNotInRange:\n        return \"AUTORENEW_DURATION_NOT_IN_RANGE\";\n\n      case Status.ErrorDecodingBytestring:\n        return \"ERROR_DECODING_BYTESTRING\";\n\n      case Status.ContractFileEmpty:\n        return \"CONTRACT_FILE_EMPTY\";\n\n      case Status.ContractBytecodeEmpty:\n        return \"CONTRACT_BYTECODE_EMPTY\";\n\n      case Status.InvalidInitialBalance:\n        return \"INVALID_INITIAL_BALANCE\";\n\n      case Status.InvalidReceiveRecordThreshold:\n        return \"INVALID_RECEIVE_RECORD_THRESHOLD\";\n\n      case Status.InvalidSendRecordThreshold:\n        return \"INVALID_SEND_RECORD_THRESHOLD\";\n\n      case Status.AccountIsNotGenesisAccount:\n        return \"ACCOUNT_IS_NOT_GENESIS_ACCOUNT\";\n\n      case Status.PayerAccountUnauthorized:\n        return \"PAYER_ACCOUNT_UNAUTHORIZED\";\n\n      case Status.InvalidFreezeTransactionBody:\n        return \"INVALID_FREEZE_TRANSACTION_BODY\";\n\n      case Status.FreezeTransactionBodyNotFound:\n        return \"FREEZE_TRANSACTION_BODY_NOT_FOUND\";\n\n      case Status.TransferListSizeLimitExceeded:\n        return \"TRANSFER_LIST_SIZE_LIMIT_EXCEEDED\";\n\n      case Status.ResultSizeLimitExceeded:\n        return \"RESULT_SIZE_LIMIT_EXCEEDED\";\n\n      case Status.NotSpecialAccount:\n        return \"NOT_SPECIAL_ACCOUNT\";\n\n      case Status.ContractNegativeGas:\n        return \"CONTRACT_NEGATIVE_GAS\";\n\n      case Status.ContractNegativeValue:\n        return \"CONTRACT_NEGATIVE_VALUE\";\n\n      case Status.InvalidFeeFile:\n        return \"INVALID_FEE_FILE\";\n\n      case Status.InvalidExchangeRateFile:\n        return \"INVALID_EXCHANGE_RATE_FILE\";\n\n      case Status.InsufficientLocalCallGas:\n        return \"INSUFFICIENT_LOCAL_CALL_GAS\";\n\n      case Status.EntityNotAllowedToDelete:\n        return \"ENTITY_NOT_ALLOWED_TO_DELETE\";\n\n      case Status.AuthorizationFailed:\n        return \"AUTHORIZATION_FAILED\";\n\n      case Status.FileUploadedProtoInvalid:\n        return \"FILE_UPLOADED_PROTO_INVALID\";\n\n      case Status.FileUploadedProtoNotSavedToDisk:\n        return \"FILE_UPLOADED_PROTO_NOT_SAVED_TO_DISK\";\n\n      case Status.FeeScheduleFilePartUploaded:\n        return \"FEE_SCHEDULE_FILE_PART_UPLOADED\";\n\n      case Status.ExchangeRateChangeLimitExceeded:\n        return \"EXCHANGE_RATE_CHANGE_LIMIT_EXCEEDED\";\n\n      case Status.MaxContractStorageExceeded:\n        return \"MAX_CONTRACT_STORAGE_EXCEEDED\";\n\n      case Status.TransferAccountSameAsDeleteAccount:\n        return \"TRANSFER_ACCOUNT_SAME_AS_DELETE_ACCOUNT\";\n\n      case Status.TotalLedgerBalanceInvalid:\n        return \"TOTAL_LEDGER_BALANCE_INVALID\";\n\n      case Status.ExpirationReductionNotAllowed:\n        return \"EXPIRATION_REDUCTION_NOT_ALLOWED\";\n\n      case Status.MaxGasLimitExceeded:\n        return \"MAX_GAS_LIMIT_EXCEEDED\";\n\n      case Status.MaxFileSizeExceeded:\n        return \"MAX_FILE_SIZE_EXCEEDED\";\n\n      case Status.ReceiverSigRequired:\n        return \"RECEIVER_SIG_REQUIRED\";\n\n      case Status.InvalidTopicId:\n        return \"INVALID_TOPIC_ID\";\n\n      case Status.InvalidAdminKey:\n        return \"INVALID_ADMIN_KEY\";\n\n      case Status.InvalidSubmitKey:\n        return \"INVALID_SUBMIT_KEY\";\n\n      case Status.Unauthorized:\n        return \"UNAUTHORIZED\";\n\n      case Status.InvalidTopicMessage:\n        return \"INVALID_TOPIC_MESSAGE\";\n\n      case Status.InvalidAutorenewAccount:\n        return \"INVALID_AUTORENEW_ACCOUNT\";\n\n      case Status.AutorenewAccountNotAllowed:\n        return \"AUTORENEW_ACCOUNT_NOT_ALLOWED\";\n\n      case Status.TopicExpired:\n        return \"TOPIC_EXPIRED\";\n\n      case Status.InvalidChunkNumber:\n        return \"INVALID_CHUNK_NUMBER\";\n\n      case Status.InvalidChunkTransactionId:\n        return \"INVALID_CHUNK_TRANSACTION_ID\";\n\n      case Status.AccountFrozenForToken:\n        return \"ACCOUNT_FROZEN_FOR_TOKEN\";\n\n      case Status.TokensPerAccountLimitExceeded:\n        return \"TOKENS_PER_ACCOUNT_LIMIT_EXCEEDED\";\n\n      case Status.InvalidTokenId:\n        return \"INVALID_TOKEN_ID\";\n\n      case Status.InvalidTokenDecimals:\n        return \"INVALID_TOKEN_DECIMALS\";\n\n      case Status.InvalidTokenInitialSupply:\n        return \"INVALID_TOKEN_INITIAL_SUPPLY\";\n\n      case Status.InvalidTreasuryAccountForToken:\n        return \"INVALID_TREASURY_ACCOUNT_FOR_TOKEN\";\n\n      case Status.InvalidTokenSymbol:\n        return \"INVALID_TOKEN_SYMBOL\";\n\n      case Status.TokenHasNoFreezeKey:\n        return \"TOKEN_HAS_NO_FREEZE_KEY\";\n\n      case Status.TransfersNotZeroSumForToken:\n        return \"TRANSFERS_NOT_ZERO_SUM_FOR_TOKEN\";\n\n      case Status.MissingTokenSymbol:\n        return \"MISSING_TOKEN_SYMBOL\";\n\n      case Status.TokenSymbolTooLong:\n        return \"TOKEN_SYMBOL_TOO_LONG\";\n\n      case Status.AccountKycNotGrantedForToken:\n        return \"ACCOUNT_KYC_NOT_GRANTED_FOR_TOKEN\";\n\n      case Status.TokenHasNoKycKey:\n        return \"TOKEN_HAS_NO_KYC_KEY\";\n\n      case Status.InsufficientTokenBalance:\n        return \"INSUFFICIENT_TOKEN_BALANCE\";\n\n      case Status.TokenWasDeleted:\n        return \"TOKEN_WAS_DELETED\";\n\n      case Status.TokenHasNoSupplyKey:\n        return \"TOKEN_HAS_NO_SUPPLY_KEY\";\n\n      case Status.TokenHasNoWipeKey:\n        return \"TOKEN_HAS_NO_WIPE_KEY\";\n\n      case Status.InvalidTokenMintAmount:\n        return \"INVALID_TOKEN_MINT_AMOUNT\";\n\n      case Status.InvalidTokenBurnAmount:\n        return \"INVALID_TOKEN_BURN_AMOUNT\";\n\n      case Status.TokenNotAssociatedToAccount:\n        return \"TOKEN_NOT_ASSOCIATED_TO_ACCOUNT\";\n\n      case Status.CannotWipeTokenTreasuryAccount:\n        return \"CANNOT_WIPE_TOKEN_TREASURY_ACCOUNT\";\n\n      case Status.InvalidKycKey:\n        return \"INVALID_KYC_KEY\";\n\n      case Status.InvalidWipeKey:\n        return \"INVALID_WIPE_KEY\";\n\n      case Status.InvalidFreezeKey:\n        return \"INVALID_FREEZE_KEY\";\n\n      case Status.InvalidSupplyKey:\n        return \"INVALID_SUPPLY_KEY\";\n\n      case Status.MissingTokenName:\n        return \"MISSING_TOKEN_NAME\";\n\n      case Status.TokenNameTooLong:\n        return \"TOKEN_NAME_TOO_LONG\";\n\n      case Status.InvalidWipingAmount:\n        return \"INVALID_WIPING_AMOUNT\";\n\n      case Status.TokenIsImmutable:\n        return \"TOKEN_IS_IMMUTABLE\";\n\n      case Status.TokenAlreadyAssociatedToAccount:\n        return \"TOKEN_ALREADY_ASSOCIATED_TO_ACCOUNT\";\n\n      case Status.TransactionRequiresZeroTokenBalances:\n        return \"TRANSACTION_REQUIRES_ZERO_TOKEN_BALANCES\";\n\n      case Status.AccountIsTreasury:\n        return \"ACCOUNT_IS_TREASURY\";\n\n      case Status.TokenIdRepeatedInTokenList:\n        return \"TOKEN_ID_REPEATED_IN_TOKEN_LIST\";\n\n      case Status.TokenTransferListSizeLimitExceeded:\n        return \"TOKEN_TRANSFER_LIST_SIZE_LIMIT_EXCEEDED\";\n\n      case Status.EmptyTokenTransferBody:\n        return \"EMPTY_TOKEN_TRANSFER_BODY\";\n\n      case Status.EmptyTokenTransferAccountAmounts:\n        return \"EMPTY_TOKEN_TRANSFER_ACCOUNT_AMOUNTS\";\n\n      case Status.InvalidScheduleId:\n        return \"INVALID_SCHEDULE_ID\";\n\n      case Status.ScheduleIsImmutable:\n        return \"SCHEDULE_IS_IMMUTABLE\";\n\n      case Status.InvalidSchedulePayerId:\n        return \"INVALID_SCHEDULE_PAYER_ID\";\n\n      case Status.InvalidScheduleAccountId:\n        return \"INVALID_SCHEDULE_ACCOUNT_ID\";\n\n      case Status.NoNewValidSignatures:\n        return \"NO_NEW_VALID_SIGNATURES\";\n\n      case Status.UnresolvableRequiredSigners:\n        return \"UNRESOLVABLE_REQUIRED_SIGNERS\";\n\n      case Status.ScheduledTransactionNotInWhitelist:\n        return \"SCHEDULED_TRANSACTION_NOT_IN_WHITELIST\";\n\n      case Status.SomeSignaturesWereInvalid:\n        return \"SOME_SIGNATURES_WERE_INVALID\";\n\n      case Status.TransactionIdFieldNotAllowed:\n        return \"TRANSACTION_ID_FIELD_NOT_ALLOWED\";\n\n      case Status.IdenticalScheduleAlreadyCreated:\n        return \"IDENTICAL_SCHEDULE_ALREADY_CREATED\";\n\n      case Status.InvalidZeroByteInString:\n        return \"INVALID_ZERO_BYTE_IN_STRING\";\n\n      case Status.ScheduleAlreadyDeleted:\n        return \"SCHEDULE_ALREADY_DELETED\";\n\n      case Status.ScheduleAlreadyExecuted:\n        return \"SCHEDULE_ALREADY_EXECUTED\";\n\n      case Status.MessageSizeTooLarge:\n        return \"MESSAGE_SIZE_TOO_LARGE\";\n\n      case Status.OperationRepeatedInBucketGroups:\n        return \"OPERATION_REPEATED_IN_BUCKET_GROUPS\";\n\n      case Status.BucketCapacityOverflow:\n        return \"BUCKET_CAPACITY_OVERFLOW\";\n\n      case Status.NodeCapacityNotSufficientForOperation:\n        return \"NODE_CAPACITY_NOT_SUFFICIENT_FOR_OPERATION\";\n\n      case Status.BucketHasNoThrottleGroups:\n        return \"BUCKET_HAS_NO_THROTTLE_GROUPS\";\n\n      case Status.ThrottleGroupHasZeroOpsPerSec:\n        return \"THROTTLE_GROUP_HAS_ZERO_OPS_PER_SEC\";\n\n      case Status.SuccessButMissingExpectedOperation:\n        return \"SUCCESS_BUT_MISSING_EXPECTED_OPERATION\";\n\n      case Status.UnparseableThrottleDefinitions:\n        return \"UNPARSEABLE_THROTTLE_DEFINITIONS\";\n\n      case Status.InvalidThrottleDefinitions:\n        return \"INVALID_THROTTLE_DEFINITIONS\";\n\n      case Status.AccountExpiredAndPendingRemoval:\n        return \"ACCOUNT_EXPIRED_AND_PENDING_REMOVAL\";\n\n      case Status.InvalidTokenMaxSupply:\n        return \"INVALID_TOKEN_MAX_SUPPLY\";\n\n      case Status.InvalidTokenNftSerialNumber:\n        return \"INVALID_TOKEN_NFT_SERIAL_NUMBER\";\n\n      case Status.InvalidNftId:\n        return \"INVALID_NFT_ID\";\n\n      case Status.MetadataTooLong:\n        return \"METADATA_TOO_LONG\";\n\n      case Status.BatchSizeLimitExceeded:\n        return \"BATCH_SIZE_LIMIT_EXCEEDED\";\n\n      case Status.InvalidQueryRange:\n        return \"INVALID_QUERY_RANGE\";\n\n      case Status.FractionDividesByZero:\n        return \"FRACTION_DIVIDES_BY_ZERO\";\n\n      case Status.InsufficientPayerBalanceForCustomFee:\n        return \"INSUFFICIENT_PAYER_BALANCE_FOR_CUSTOM_FEE\";\n\n      case Status.CustomFeesListTooLong:\n        return \"CUSTOM_FEES_LIST_TOO_LONG\";\n\n      case Status.InvalidCustomFeeCollector:\n        return \"INVALID_CUSTOM_FEE_COLLECTOR\";\n\n      case Status.InvalidTokenIdInCustomFees:\n        return \"INVALID_TOKEN_ID_IN_CUSTOM_FEES\";\n\n      case Status.TokenNotAssociatedToFeeCollector:\n        return \"TOKEN_NOT_ASSOCIATED_TO_FEE_COLLECTOR\";\n\n      case Status.TokenMaxSupplyReached:\n        return \"TOKEN_MAX_SUPPLY_REACHED\";\n\n      case Status.SenderDoesNotOwnNftSerialNo:\n        return \"SENDER_DOES_NOT_OWN_NFT_SERIAL_NO\";\n\n      case Status.CustomFeeNotFullySpecified:\n        return \"CUSTOM_FEE_NOT_FULLY_SPECIFIED\";\n\n      case Status.CustomFeeMustBePositive:\n        return \"CUSTOM_FEE_MUST_BE_POSITIVE\";\n\n      case Status.TokenHasNoFeeScheduleKey:\n        return \"TOKEN_HAS_NO_FEE_SCHEDULE_KEY\";\n\n      case Status.CustomFeeOutsideNumericRange:\n        return \"CUSTOM_FEE_OUTSIDE_NUMERIC_RANGE\";\n\n      case Status.RoyaltyFractionCannotExceedOne:\n        return \"ROYALTY_FRACTION_CANNOT_EXCEED_ONE\";\n\n      case Status.FractionalFeeMaxAmountLessThanMinAmount:\n        return \"FRACTIONAL_FEE_MAX_AMOUNT_LESS_THAN_MIN_AMOUNT\";\n\n      case Status.CustomScheduleAlreadyHasNoFees:\n        return \"CUSTOM_SCHEDULE_ALREADY_HAS_NO_FEES\";\n\n      case Status.CustomFeeDenominationMustBeFungibleCommon:\n        return \"CUSTOM_FEE_DENOMINATION_MUST_BE_FUNGIBLE_COMMON\";\n\n      case Status.CustomFractionalFeeOnlyAllowedForFungibleCommon:\n        return \"CUSTOM_FRACTIONAL_FEE_ONLY_ALLOWED_FOR_FUNGIBLE_COMMON\";\n\n      case Status.InvalidCustomFeeScheduleKey:\n        return \"INVALID_CUSTOM_FEE_SCHEDULE_KEY\";\n\n      case Status.InvalidTokenMintMetadata:\n        return \"INVALID_TOKEN_MINT_METADATA\";\n\n      case Status.InvalidTokenBurnMetadata:\n        return \"INVALID_TOKEN_BURN_METADATA\";\n\n      case Status.CurrentTreasuryStillOwnsNfts:\n        return \"CURRENT_TREASURY_STILL_OWNS_NFTS\";\n\n      case Status.AccountStillOwnsNfts:\n        return \"ACCOUNT_STILL_OWNS_NFTS\";\n\n      case Status.TreasuryMustOwnBurnedNft:\n        return \"TREASURY_MUST_OWN_BURNED_NFT\";\n\n      case Status.AccountDoesNotOwnWipedNft:\n        return \"ACCOUNT_DOES_NOT_OWN_WIPED_NFT\";\n\n      case Status.AccountAmountTransfersOnlyAllowedForFungibleCommon:\n        return \"ACCOUNT_AMOUNT_TRANSFERS_ONLY_ALLOWED_FOR_FUNGIBLE_COMMON\";\n\n      case Status.MaxNftsInPriceRegimeHaveBeenMinted:\n        return \"MAX_NFTS_IN_PRICE_REGIME_HAVE_BEEN_MINTED\";\n\n      case Status.PayerAccountDeleted:\n        return \"PAYER_ACCOUNT_DELETED\";\n\n      case Status.CustomFeeChargingExceededMaxRecursionDepth:\n        return \"CUSTOM_FEE_CHARGING_EXCEEDED_MAX_RECURSION_DEPTH\";\n\n      case Status.CustomFeeChargingExceededMaxAccountAmounts:\n        return \"CUSTOM_FEE_CHARGING_EXCEEDED_MAX_ACCOUNT_AMOUNTS\";\n\n      case Status.InsufficientSenderAccountBalanceForCustomFee:\n        return \"INSUFFICIENT_SENDER_ACCOUNT_BALANCE_FOR_CUSTOM_FEE\";\n\n      case Status.SerialNumberLimitReached:\n        return \"SERIAL_NUMBER_LIMIT_REACHED\";\n\n      case Status.CustomRoyaltyFeeOnlyAllowedForNonFungibleUnique:\n        return \"CUSTOM_ROYALTY_FEE_ONLY_ALLOWED_FOR_NON_FUNGIBLE_UNIQUE\";\n\n      case Status.NoRemainingAutomaticAssociations:\n        return \"NO_REMAINING_AUTOMATIC_ASSOCIATIONS\";\n\n      case Status.ExistingAutomaticAssociationsExceedGivenLimit:\n        return \"EXISTING_AUTOMATIC_ASSOCIATIONS_EXCEED_GIVEN_LIMIT\";\n\n      case Status.RequestedNumAutomaticAssociationsExceedsAssociationLimit:\n        return \"REQUESTED_NUM_AUTOMATIC_ASSOCIATIONS_EXCEEDS_ASSOCIATION_LIMIT\";\n\n      case Status.TokenIsPaused:\n        return \"TOKEN_IS_PAUSED\";\n\n      case Status.TokenHasNoPauseKey:\n        return \"TOKEN_HAS_NO_PAUSE_KEY\";\n\n      case Status.InvalidPauseKey:\n        return \"INVALID_PAUSE_KEY\";\n\n      case Status.FreezeUpdateFileDoesNotExist:\n        return \"FREEZE_UPDATE_FILE_DOES_NOT_EXIST\";\n\n      case Status.FreezeUpdateFileHashDoesNotMatch:\n        return \"FREEZE_UPDATE_FILE_HASH_DOES_NOT_MATCH\";\n\n      case Status.NoUpgradeHasBeenPrepared:\n        return \"NO_UPGRADE_HAS_BEEN_PREPARED\";\n\n      case Status.NoFreezeIsScheduled:\n        return \"NO_FREEZE_IS_SCHEDULED\";\n\n      case Status.UpdateFileHashChangedSincePrepareUpgrade:\n        return \"UPDATE_FILE_HASH_CHANGED_SINCE_PREPARE_UPGRADE\";\n\n      case Status.FreezeStartTimeMustBeFuture:\n        return \"FREEZE_START_TIME_MUST_BE_FUTURE\";\n\n      case Status.PreparedUpdateFileIsImmutable:\n        return \"PREPARED_UPDATE_FILE_IS_IMMUTABLE\";\n\n      case Status.FreezeAlreadyScheduled:\n        return \"FREEZE_ALREADY_SCHEDULED\";\n\n      case Status.FreezeUpgradeInProgress:\n        return \"FREEZE_UPGRADE_IN_PROGRESS\";\n\n      case Status.UpdateFileIdDoesNotMatchPrepared:\n        return \"UPDATE_FILE_ID_DOES_NOT_MATCH_PREPARED\";\n\n      case Status.UpdateFileHashDoesNotMatchPrepared:\n        return \"UPDATE_FILE_HASH_DOES_NOT_MATCH_PREPARED\";\n\n      case Status.ConsensusGasExhausted:\n        return \"CONSENSUS_GAS_EXHAUSTED\";\n\n      case Status.RevertedSuccess:\n        return \"REVERTED_SUCCESS\";\n\n      case Status.MaxStorageInPriceRegimeHasBeenUsed:\n        return \"MAX_STORAGE_IN_PRICE_REGIME_HAS_BEEN_USED\";\n\n      case Status.InvalidAliasKey:\n        return \"INVALID_ALIAS_KEY\";\n\n      case Status.UnexpectedTokenDecimals:\n        return \"UNEXPECTED_TOKEN_DECIMALS\";\n\n      default:\n        return `UNKNOWN (${this._code})`;\n    }\n  }\n  /**\n   * @internal\n   * @param {number} code\n   * @returns {Status}\n   */\n\n\n  static _fromCode(code) {\n    switch (code) {\n      case 0:\n        return Status.Ok;\n\n      case 1:\n        return Status.InvalidTransaction;\n\n      case 2:\n        return Status.PayerAccountNotFound;\n\n      case 3:\n        return Status.InvalidNodeAccount;\n\n      case 4:\n        return Status.TransactionExpired;\n\n      case 5:\n        return Status.InvalidTransactionStart;\n\n      case 6:\n        return Status.InvalidTransactionDuration;\n\n      case 7:\n        return Status.InvalidSignature;\n\n      case 8:\n        return Status.MemoTooLong;\n\n      case 9:\n        return Status.InsufficientTxFee;\n\n      case 10:\n        return Status.InsufficientPayerBalance;\n\n      case 11:\n        return Status.DuplicateTransaction;\n\n      case 12:\n        return Status.Busy;\n\n      case 13:\n        return Status.NotSupported;\n\n      case 14:\n        return Status.InvalidFileId;\n\n      case 15:\n        return Status.InvalidAccountId;\n\n      case 16:\n        return Status.InvalidContractId;\n\n      case 17:\n        return Status.InvalidTransactionId;\n\n      case 18:\n        return Status.ReceiptNotFound;\n\n      case 19:\n        return Status.RecordNotFound;\n\n      case 20:\n        return Status.InvalidSolidityId;\n\n      case 21:\n        return Status.Unknown;\n\n      case 22:\n        return Status.Success;\n\n      case 23:\n        return Status.FailInvalid;\n\n      case 24:\n        return Status.FailFee;\n\n      case 25:\n        return Status.FailBalance;\n\n      case 26:\n        return Status.KeyRequired;\n\n      case 27:\n        return Status.BadEncoding;\n\n      case 28:\n        return Status.InsufficientAccountBalance;\n\n      case 29:\n        return Status.InvalidSolidityAddress;\n\n      case 30:\n        return Status.InsufficientGas;\n\n      case 31:\n        return Status.ContractSizeLimitExceeded;\n\n      case 32:\n        return Status.LocalCallModificationException;\n\n      case 33:\n        return Status.ContractRevertExecuted;\n\n      case 34:\n        return Status.ContractExecutionException;\n\n      case 35:\n        return Status.InvalidReceivingNodeAccount;\n\n      case 36:\n        return Status.MissingQueryHeader;\n\n      case 37:\n        return Status.AccountUpdateFailed;\n\n      case 38:\n        return Status.InvalidKeyEncoding;\n\n      case 39:\n        return Status.NullSolidityAddress;\n\n      case 40:\n        return Status.ContractUpdateFailed;\n\n      case 41:\n        return Status.InvalidQueryHeader;\n\n      case 42:\n        return Status.InvalidFeeSubmitted;\n\n      case 43:\n        return Status.InvalidPayerSignature;\n\n      case 44:\n        return Status.KeyNotProvided;\n\n      case 45:\n        return Status.InvalidExpirationTime;\n\n      case 46:\n        return Status.NoWaclKey;\n\n      case 47:\n        return Status.FileContentEmpty;\n\n      case 48:\n        return Status.InvalidAccountAmounts;\n\n      case 49:\n        return Status.EmptyTransactionBody;\n\n      case 50:\n        return Status.InvalidTransactionBody;\n\n      case 51:\n        return Status.InvalidSignatureTypeMismatchingKey;\n\n      case 52:\n        return Status.InvalidSignatureCountMismatchingKey;\n\n      case 53:\n        return Status.EmptyLiveHashBody;\n\n      case 54:\n        return Status.EmptyLiveHash;\n\n      case 55:\n        return Status.EmptyLiveHashKeys;\n\n      case 56:\n        return Status.InvalidLiveHashSize;\n\n      case 57:\n        return Status.EmptyQueryBody;\n\n      case 58:\n        return Status.EmptyLiveHashQuery;\n\n      case 59:\n        return Status.LiveHashNotFound;\n\n      case 60:\n        return Status.AccountIdDoesNotExist;\n\n      case 61:\n        return Status.LiveHashAlreadyExists;\n\n      case 62:\n        return Status.InvalidFileWacl;\n\n      case 63:\n        return Status.SerializationFailed;\n\n      case 64:\n        return Status.TransactionOversize;\n\n      case 65:\n        return Status.TransactionTooManyLayers;\n\n      case 66:\n        return Status.ContractDeleted;\n\n      case 67:\n        return Status.PlatformNotActive;\n\n      case 68:\n        return Status.KeyPrefixMismatch;\n\n      case 69:\n        return Status.PlatformTransactionNotCreated;\n\n      case 70:\n        return Status.InvalidRenewalPeriod;\n\n      case 71:\n        return Status.InvalidPayerAccountId;\n\n      case 72:\n        return Status.AccountDeleted;\n\n      case 73:\n        return Status.FileDeleted;\n\n      case 74:\n        return Status.AccountRepeatedInAccountAmounts;\n\n      case 75:\n        return Status.SettingNegativeAccountBalance;\n\n      case 76:\n        return Status.ObtainerRequired;\n\n      case 77:\n        return Status.ObtainerSameContractId;\n\n      case 78:\n        return Status.ObtainerDoesNotExist;\n\n      case 79:\n        return Status.ModifyingImmutableContract;\n\n      case 80:\n        return Status.FileSystemException;\n\n      case 81:\n        return Status.AutorenewDurationNotInRange;\n\n      case 82:\n        return Status.ErrorDecodingBytestring;\n\n      case 83:\n        return Status.ContractFileEmpty;\n\n      case 84:\n        return Status.ContractBytecodeEmpty;\n\n      case 85:\n        return Status.InvalidInitialBalance;\n\n      case 86:\n        return Status.InvalidReceiveRecordThreshold;\n\n      case 87:\n        return Status.InvalidSendRecordThreshold;\n\n      case 88:\n        return Status.AccountIsNotGenesisAccount;\n\n      case 89:\n        return Status.PayerAccountUnauthorized;\n\n      case 90:\n        return Status.InvalidFreezeTransactionBody;\n\n      case 91:\n        return Status.FreezeTransactionBodyNotFound;\n\n      case 92:\n        return Status.TransferListSizeLimitExceeded;\n\n      case 93:\n        return Status.ResultSizeLimitExceeded;\n\n      case 94:\n        return Status.NotSpecialAccount;\n\n      case 95:\n        return Status.ContractNegativeGas;\n\n      case 96:\n        return Status.ContractNegativeValue;\n\n      case 97:\n        return Status.InvalidFeeFile;\n\n      case 98:\n        return Status.InvalidExchangeRateFile;\n\n      case 99:\n        return Status.InsufficientLocalCallGas;\n\n      case 100:\n        return Status.EntityNotAllowedToDelete;\n\n      case 101:\n        return Status.AuthorizationFailed;\n\n      case 102:\n        return Status.FileUploadedProtoInvalid;\n\n      case 103:\n        return Status.FileUploadedProtoNotSavedToDisk;\n\n      case 104:\n        return Status.FeeScheduleFilePartUploaded;\n\n      case 105:\n        return Status.ExchangeRateChangeLimitExceeded;\n\n      case 106:\n        return Status.MaxContractStorageExceeded;\n\n      case 107:\n        return Status.TransferAccountSameAsDeleteAccount;\n\n      case 108:\n        return Status.TotalLedgerBalanceInvalid;\n\n      case 110:\n        return Status.ExpirationReductionNotAllowed;\n\n      case 111:\n        return Status.MaxGasLimitExceeded;\n\n      case 112:\n        return Status.MaxFileSizeExceeded;\n\n      case 113:\n        return Status.ReceiverSigRequired;\n\n      case 150:\n        return Status.InvalidTopicId;\n\n      case 155:\n        return Status.InvalidAdminKey;\n\n      case 156:\n        return Status.InvalidSubmitKey;\n\n      case 157:\n        return Status.Unauthorized;\n\n      case 158:\n        return Status.InvalidTopicMessage;\n\n      case 159:\n        return Status.InvalidAutorenewAccount;\n\n      case 160:\n        return Status.AutorenewAccountNotAllowed;\n\n      case 162:\n        return Status.TopicExpired;\n\n      case 163:\n        return Status.InvalidChunkNumber;\n\n      case 164:\n        return Status.InvalidChunkTransactionId;\n\n      case 165:\n        return Status.AccountFrozenForToken;\n\n      case 166:\n        return Status.TokensPerAccountLimitExceeded;\n\n      case 167:\n        return Status.InvalidTokenId;\n\n      case 168:\n        return Status.InvalidTokenDecimals;\n\n      case 169:\n        return Status.InvalidTokenInitialSupply;\n\n      case 170:\n        return Status.InvalidTreasuryAccountForToken;\n\n      case 171:\n        return Status.InvalidTokenSymbol;\n\n      case 172:\n        return Status.TokenHasNoFreezeKey;\n\n      case 173:\n        return Status.TransfersNotZeroSumForToken;\n\n      case 174:\n        return Status.MissingTokenSymbol;\n\n      case 175:\n        return Status.TokenSymbolTooLong;\n\n      case 176:\n        return Status.AccountKycNotGrantedForToken;\n\n      case 177:\n        return Status.TokenHasNoKycKey;\n\n      case 178:\n        return Status.InsufficientTokenBalance;\n\n      case 179:\n        return Status.TokenWasDeleted;\n\n      case 180:\n        return Status.TokenHasNoSupplyKey;\n\n      case 181:\n        return Status.TokenHasNoWipeKey;\n\n      case 182:\n        return Status.InvalidTokenMintAmount;\n\n      case 183:\n        return Status.InvalidTokenBurnAmount;\n\n      case 184:\n        return Status.TokenNotAssociatedToAccount;\n\n      case 185:\n        return Status.CannotWipeTokenTreasuryAccount;\n\n      case 186:\n        return Status.InvalidKycKey;\n\n      case 187:\n        return Status.InvalidWipeKey;\n\n      case 188:\n        return Status.InvalidFreezeKey;\n\n      case 189:\n        return Status.InvalidSupplyKey;\n\n      case 190:\n        return Status.MissingTokenName;\n\n      case 191:\n        return Status.TokenNameTooLong;\n\n      case 192:\n        return Status.InvalidWipingAmount;\n\n      case 193:\n        return Status.TokenIsImmutable;\n\n      case 194:\n        return Status.TokenAlreadyAssociatedToAccount;\n\n      case 195:\n        return Status.TransactionRequiresZeroTokenBalances;\n\n      case 196:\n        return Status.AccountIsTreasury;\n\n      case 197:\n        return Status.TokenIdRepeatedInTokenList;\n\n      case 198:\n        return Status.TokenTransferListSizeLimitExceeded;\n\n      case 199:\n        return Status.EmptyTokenTransferBody;\n\n      case 200:\n        return Status.EmptyTokenTransferAccountAmounts;\n\n      case 201:\n        return Status.InvalidScheduleId;\n\n      case 202:\n        return Status.ScheduleIsImmutable;\n\n      case 203:\n        return Status.InvalidSchedulePayerId;\n\n      case 204:\n        return Status.InvalidScheduleAccountId;\n\n      case 205:\n        return Status.NoNewValidSignatures;\n\n      case 206:\n        return Status.UnresolvableRequiredSigners;\n\n      case 207:\n        return Status.ScheduledTransactionNotInWhitelist;\n\n      case 208:\n        return Status.SomeSignaturesWereInvalid;\n\n      case 209:\n        return Status.TransactionIdFieldNotAllowed;\n\n      case 210:\n        return Status.IdenticalScheduleAlreadyCreated;\n\n      case 211:\n        return Status.InvalidZeroByteInString;\n\n      case 212:\n        return Status.ScheduleAlreadyDeleted;\n\n      case 213:\n        return Status.ScheduleAlreadyExecuted;\n\n      case 214:\n        return Status.MessageSizeTooLarge;\n\n      case 215:\n        return Status.OperationRepeatedInBucketGroups;\n\n      case 216:\n        return Status.BucketCapacityOverflow;\n\n      case 217:\n        return Status.NodeCapacityNotSufficientForOperation;\n\n      case 218:\n        return Status.BucketHasNoThrottleGroups;\n\n      case 219:\n        return Status.ThrottleGroupHasZeroOpsPerSec;\n\n      case 220:\n        return Status.SuccessButMissingExpectedOperation;\n\n      case 221:\n        return Status.UnparseableThrottleDefinitions;\n\n      case 222:\n        return Status.InvalidThrottleDefinitions;\n\n      case 223:\n        return Status.AccountExpiredAndPendingRemoval;\n\n      case 224:\n        return Status.InvalidTokenMaxSupply;\n\n      case 225:\n        return Status.InvalidTokenNftSerialNumber;\n\n      case 226:\n        return Status.InvalidNftId;\n\n      case 227:\n        return Status.MetadataTooLong;\n\n      case 228:\n        return Status.BatchSizeLimitExceeded;\n\n      case 229:\n        return Status.InvalidQueryRange;\n\n      case 230:\n        return Status.FractionDividesByZero;\n\n      case 231:\n        return Status.InsufficientPayerBalanceForCustomFee;\n\n      case 232:\n        return Status.CustomFeesListTooLong;\n\n      case 233:\n        return Status.InvalidCustomFeeCollector;\n\n      case 234:\n        return Status.InvalidTokenIdInCustomFees;\n\n      case 235:\n        return Status.TokenNotAssociatedToFeeCollector;\n\n      case 236:\n        return Status.TokenMaxSupplyReached;\n\n      case 237:\n        return Status.SenderDoesNotOwnNftSerialNo;\n\n      case 238:\n        return Status.CustomFeeNotFullySpecified;\n\n      case 239:\n        return Status.CustomFeeMustBePositive;\n\n      case 240:\n        return Status.TokenHasNoFeeScheduleKey;\n\n      case 241:\n        return Status.CustomFeeOutsideNumericRange;\n\n      case 242:\n        return Status.RoyaltyFractionCannotExceedOne;\n\n      case 243:\n        return Status.FractionalFeeMaxAmountLessThanMinAmount;\n\n      case 244:\n        return Status.CustomScheduleAlreadyHasNoFees;\n\n      case 245:\n        return Status.CustomFeeDenominationMustBeFungibleCommon;\n\n      case 246:\n        return Status.CustomFractionalFeeOnlyAllowedForFungibleCommon;\n\n      case 247:\n        return Status.InvalidCustomFeeScheduleKey;\n\n      case 248:\n        return Status.InvalidTokenMintMetadata;\n\n      case 249:\n        return Status.InvalidTokenBurnMetadata;\n\n      case 250:\n        return Status.CurrentTreasuryStillOwnsNfts;\n\n      case 251:\n        return Status.AccountStillOwnsNfts;\n\n      case 252:\n        return Status.TreasuryMustOwnBurnedNft;\n\n      case 253:\n        return Status.AccountDoesNotOwnWipedNft;\n\n      case 254:\n        return Status.AccountAmountTransfersOnlyAllowedForFungibleCommon;\n\n      case 255:\n        return Status.MaxNftsInPriceRegimeHaveBeenMinted;\n\n      case 256:\n        return Status.PayerAccountDeleted;\n\n      case 257:\n        return Status.CustomFeeChargingExceededMaxRecursionDepth;\n\n      case 258:\n        return Status.CustomFeeChargingExceededMaxAccountAmounts;\n\n      case 259:\n        return Status.InsufficientSenderAccountBalanceForCustomFee;\n\n      case 260:\n        return Status.SerialNumberLimitReached;\n\n      case 261:\n        return Status.CustomRoyaltyFeeOnlyAllowedForNonFungibleUnique;\n\n      case 262:\n        return Status.NoRemainingAutomaticAssociations;\n\n      case 263:\n        return Status.ExistingAutomaticAssociationsExceedGivenLimit;\n\n      case 264:\n        return Status.RequestedNumAutomaticAssociationsExceedsAssociationLimit;\n\n      case 265:\n        return Status.TokenIsPaused;\n\n      case 266:\n        return Status.TokenHasNoPauseKey;\n\n      case 267:\n        return Status.InvalidPauseKey;\n\n      case 268:\n        return Status.FreezeUpdateFileDoesNotExist;\n\n      case 269:\n        return Status.FreezeUpdateFileHashDoesNotMatch;\n\n      case 270:\n        return Status.NoUpgradeHasBeenPrepared;\n\n      case 271:\n        return Status.NoFreezeIsScheduled;\n\n      case 272:\n        return Status.UpdateFileHashChangedSincePrepareUpgrade;\n\n      case 273:\n        return Status.FreezeStartTimeMustBeFuture;\n\n      case 274:\n        return Status.PreparedUpdateFileIsImmutable;\n\n      case 275:\n        return Status.FreezeAlreadyScheduled;\n\n      case 276:\n        return Status.FreezeUpgradeInProgress;\n\n      case 277:\n        return Status.UpdateFileIdDoesNotMatchPrepared;\n\n      case 278:\n        return Status.UpdateFileHashDoesNotMatchPrepared;\n\n      case 279:\n        return Status.ConsensusGasExhausted;\n\n      case 280:\n        return Status.RevertedSuccess;\n\n      case 281:\n        return Status.MaxStorageInPriceRegimeHasBeenUsed;\n\n      case 282:\n        return Status.InvalidAliasKey;\n\n      case 283:\n        return Status.UnexpectedTokenDecimals;\n\n      default:\n        throw new Error(`(BUG) Status.fromCode() does not handle code: ${code}`);\n    }\n  }\n  /**\n   * @returns {proto.ResponseCodeEnum}\n   */\n\n\n  valueOf() {\n    return this._code;\n  }\n\n}\n/**\n * The transaction passed the precheck validations.\n */\n\nStatus.Ok = new Status(0);\n/**\n * For any error not handled by specific error codes listed below.\n */\n\nStatus.InvalidTransaction = new Status(1);\n/**\n * Payer account does not exist.\n */\n\nStatus.PayerAccountNotFound = new Status(2);\n/**\n * Node Account provided does not match the node account of the node the transaction was submitted\n * to.\n */\n\nStatus.InvalidNodeAccount = new Status(3);\n/**\n * Pre-Check error when TransactionValidStart + transactionValidDuration is less than current\n * consensus time.\n */\n\nStatus.TransactionExpired = new Status(4);\n/**\n * Transaction start time is greater than current consensus time\n */\n\nStatus.InvalidTransactionStart = new Status(5);\n/**\n * valid transaction duration is a positive non zero number that does not exceed 120 seconds\n */\n\nStatus.InvalidTransactionDuration = new Status(6);\n/**\n * The transaction signature is not valid\n */\n\nStatus.InvalidSignature = new Status(7);\n/**\n * Transaction memo size exceeded 100 bytes\n */\n\nStatus.MemoTooLong = new Status(8);\n/**\n * The fee provided in the transaction is insufficient for this type of transaction\n */\n\nStatus.InsufficientTxFee = new Status(9);\n/**\n * The payer account has insufficient cryptocurrency to pay the transaction fee\n */\n\nStatus.InsufficientPayerBalance = new Status(10);\n/**\n * This transaction ID is a duplicate of one that was submitted to this node or reached consensus\n * in the last 180 seconds (receipt period)\n */\n\nStatus.DuplicateTransaction = new Status(11);\n/**\n * If API is throttled out\n */\n\nStatus.Busy = new Status(12);\n/**\n * The API is not currently supported\n */\n\nStatus.NotSupported = new Status(13);\n/**\n * The file id is invalid or does not exist\n */\n\nStatus.InvalidFileId = new Status(14);\n/**\n * The account id is invalid or does not exist\n */\n\nStatus.InvalidAccountId = new Status(15);\n/**\n * The contract id is invalid or does not exist\n */\n\nStatus.InvalidContractId = new Status(16);\n/**\n * Transaction id is not valid\n */\n\nStatus.InvalidTransactionId = new Status(17);\n/**\n * Receipt for given transaction id does not exist\n */\n\nStatus.ReceiptNotFound = new Status(18);\n/**\n * Record for given transaction id does not exist\n */\n\nStatus.RecordNotFound = new Status(19);\n/**\n * The solidity id is invalid or entity with this solidity id does not exist\n */\n\nStatus.InvalidSolidityId = new Status(20);\n/**\n * The responding node has submitted the transaction to the network. Its final status is still\n * unknown.\n */\n\nStatus.Unknown = new Status(21);\n/**\n * The transaction succeeded\n */\n\nStatus.Success = new Status(22);\n/**\n * There was a system error and the transaction failed because of invalid request parameters.\n */\n\nStatus.FailInvalid = new Status(23);\n/**\n * There was a system error while performing fee calculation, reserved for future.\n */\n\nStatus.FailFee = new Status(24);\n/**\n * There was a system error while performing balance checks, reserved for future.\n */\n\nStatus.FailBalance = new Status(25);\n/**\n * Key not provided in the transaction body\n */\n\nStatus.KeyRequired = new Status(26);\n/**\n * Unsupported algorithm/encoding used for keys in the transaction\n */\n\nStatus.BadEncoding = new Status(27);\n/**\n * When the account balance is not sufficient for the transfer\n */\n\nStatus.InsufficientAccountBalance = new Status(28);\n/**\n * During an update transaction when the system is not able to find the Users Solidity address\n */\n\nStatus.InvalidSolidityAddress = new Status(29);\n/**\n * Not enough gas was supplied to execute transaction\n */\n\nStatus.InsufficientGas = new Status(30);\n/**\n * contract byte code size is over the limit\n */\n\nStatus.ContractSizeLimitExceeded = new Status(31);\n/**\n * local execution (query) is requested for a function which changes state\n */\n\nStatus.LocalCallModificationException = new Status(32);\n/**\n * Contract REVERT OPCODE executed\n */\n\nStatus.ContractRevertExecuted = new Status(33);\n/**\n * For any contract execution related error not handled by specific error codes listed above.\n */\n\nStatus.ContractExecutionException = new Status(34);\n/**\n * In Query validation, account with +ve(amount) value should be Receiving node account, the\n * receiver account should be only one account in the list\n */\n\nStatus.InvalidReceivingNodeAccount = new Status(35);\n/**\n * Header is missing in Query request\n */\n\nStatus.MissingQueryHeader = new Status(36);\n/**\n * The update of the account failed\n */\n\nStatus.AccountUpdateFailed = new Status(37);\n/**\n * Provided key encoding was not supported by the system\n */\n\nStatus.InvalidKeyEncoding = new Status(38);\n/**\n * null solidity address\n */\n\nStatus.NullSolidityAddress = new Status(39);\n/**\n * update of the contract failed\n */\n\nStatus.ContractUpdateFailed = new Status(40);\n/**\n * the query header is invalid\n */\n\nStatus.InvalidQueryHeader = new Status(41);\n/**\n * Invalid fee submitted\n */\n\nStatus.InvalidFeeSubmitted = new Status(42);\n/**\n * Payer signature is invalid\n */\n\nStatus.InvalidPayerSignature = new Status(43);\n/**\n * The keys were not provided in the request.\n */\n\nStatus.KeyNotProvided = new Status(44);\n/**\n * Expiration time provided in the transaction was invalid.\n */\n\nStatus.InvalidExpirationTime = new Status(45);\n/**\n * WriteAccess Control Keys are not provided for the file\n */\n\nStatus.NoWaclKey = new Status(46);\n/**\n * The contents of file are provided as empty.\n */\n\nStatus.FileContentEmpty = new Status(47);\n/**\n * The crypto transfer credit and debit do not sum equal to 0\n */\n\nStatus.InvalidAccountAmounts = new Status(48);\n/**\n * Transaction body provided is empty\n */\n\nStatus.EmptyTransactionBody = new Status(49);\n/**\n * Invalid transaction body provided\n */\n\nStatus.InvalidTransactionBody = new Status(50);\n/**\n * the type of key (base ed25519 key, KeyList, or ThresholdKey) does not match the type of\n * signature (base ed25519 signature, SignatureList, or ThresholdKeySignature)\n */\n\nStatus.InvalidSignatureTypeMismatchingKey = new Status(51);\n/**\n * the number of key (KeyList, or ThresholdKey) does not match that of signature (SignatureList,\n * or ThresholdKeySignature). e.g. if a keyList has 3 base keys, then the corresponding\n * signatureList should also have 3 base signatures.\n */\n\nStatus.InvalidSignatureCountMismatchingKey = new Status(52);\n/**\n * the livehash body is empty\n */\n\nStatus.EmptyLiveHashBody = new Status(53);\n/**\n * the livehash data is missing\n */\n\nStatus.EmptyLiveHash = new Status(54);\n/**\n * the keys for a livehash are missing\n */\n\nStatus.EmptyLiveHashKeys = new Status(55);\n/**\n * the livehash data is not the output of a SHA-384 digest\n */\n\nStatus.InvalidLiveHashSize = new Status(56);\n/**\n * the query body is empty\n */\n\nStatus.EmptyQueryBody = new Status(57);\n/**\n * the crypto livehash query is empty\n */\n\nStatus.EmptyLiveHashQuery = new Status(58);\n/**\n * the livehash is not present\n */\n\nStatus.LiveHashNotFound = new Status(59);\n/**\n * the account id passed has not yet been created.\n */\n\nStatus.AccountIdDoesNotExist = new Status(60);\n/**\n * the livehash already exists for a given account\n */\n\nStatus.LiveHashAlreadyExists = new Status(61);\n/**\n * File WACL keys are invalid\n */\n\nStatus.InvalidFileWacl = new Status(62);\n/**\n * Serialization failure\n */\n\nStatus.SerializationFailed = new Status(63);\n/**\n * The size of the Transaction is greater than transactionMaxBytes\n */\n\nStatus.TransactionOversize = new Status(64);\n/**\n * The Transaction has more than 50 levels\n */\n\nStatus.TransactionTooManyLayers = new Status(65);\n/**\n * Contract is marked as deleted\n */\n\nStatus.ContractDeleted = new Status(66);\n/**\n * the platform node is either disconnected or lagging behind.\n */\n\nStatus.PlatformNotActive = new Status(67);\n/**\n * one public key matches more than one prefixes on the signature map\n */\n\nStatus.KeyPrefixMismatch = new Status(68);\n/**\n * transaction not created by platform due to large backlog\n */\n\nStatus.PlatformTransactionNotCreated = new Status(69);\n/**\n * auto renewal period is not a positive number of seconds\n */\n\nStatus.InvalidRenewalPeriod = new Status(70);\n/**\n * the response code when a smart contract id is passed for a crypto API request\n */\n\nStatus.InvalidPayerAccountId = new Status(71);\n/**\n * the account has been marked as deleted\n */\n\nStatus.AccountDeleted = new Status(72);\n/**\n * the file has been marked as deleted\n */\n\nStatus.FileDeleted = new Status(73);\n/**\n * same accounts repeated in the transfer account list\n */\n\nStatus.AccountRepeatedInAccountAmounts = new Status(74);\n/**\n * attempting to set negative balance value for crypto account\n */\n\nStatus.SettingNegativeAccountBalance = new Status(75);\n/**\n * when deleting smart contract that has crypto balance either transfer account or transfer smart\n * contract is required\n */\n\nStatus.ObtainerRequired = new Status(76);\n/**\n * when deleting smart contract that has crypto balance you can not use the same contract id as\n * transferContractId as the one being deleted\n */\n\nStatus.ObtainerSameContractId = new Status(77);\n/**\n * transferAccountId or transferContractId specified for contract delete does not exist\n */\n\nStatus.ObtainerDoesNotExist = new Status(78);\n/**\n * attempting to modify (update or delete a immutable smart contract, i.e. one created without a\n * admin key)\n */\n\nStatus.ModifyingImmutableContract = new Status(79);\n/**\n * Unexpected exception thrown by file system functions\n */\n\nStatus.FileSystemException = new Status(80);\n/**\n * the duration is not a subset of [MINIMUM_AUTORENEW_DURATION,MAXIMUM_AUTORENEW_DURATION]\n */\n\nStatus.AutorenewDurationNotInRange = new Status(81);\n/**\n * Decoding the smart contract binary to a byte array failed. Check that the input is a valid hex\n * string.\n */\n\nStatus.ErrorDecodingBytestring = new Status(82);\n/**\n * File to create a smart contract was of length zero\n */\n\nStatus.ContractFileEmpty = new Status(83);\n/**\n * Bytecode for smart contract is of length zero\n */\n\nStatus.ContractBytecodeEmpty = new Status(84);\n/**\n * Attempt to set negative initial balance\n */\n\nStatus.InvalidInitialBalance = new Status(85);\n/**\n * [Deprecated]. attempt to set negative receive record threshold\n */\n\nStatus.InvalidReceiveRecordThreshold = new Status(86);\n/**\n * [Deprecated]. attempt to set negative send record threshold\n */\n\nStatus.InvalidSendRecordThreshold = new Status(87);\n/**\n * Special Account Operations should be performed by only Genesis account, return this code if it\n * is not Genesis Account\n */\n\nStatus.AccountIsNotGenesisAccount = new Status(88);\n/**\n * The fee payer account doesn't have permission to submit such Transaction\n */\n\nStatus.PayerAccountUnauthorized = new Status(89);\n/**\n * FreezeTransactionBody is invalid\n */\n\nStatus.InvalidFreezeTransactionBody = new Status(90);\n/**\n * FreezeTransactionBody does not exist\n */\n\nStatus.FreezeTransactionBodyNotFound = new Status(91);\n/**\n * Exceeded the number of accounts (both from and to) allowed for crypto transfer list\n */\n\nStatus.TransferListSizeLimitExceeded = new Status(92);\n/**\n * Smart contract result size greater than specified maxResultSize\n */\n\nStatus.ResultSizeLimitExceeded = new Status(93);\n/**\n * The payer account is not a special account(account 0.0.55)\n */\n\nStatus.NotSpecialAccount = new Status(94);\n/**\n * Negative gas was offered in smart contract call\n */\n\nStatus.ContractNegativeGas = new Status(95);\n/**\n * Negative value / initial balance was specified in a smart contract call / create\n */\n\nStatus.ContractNegativeValue = new Status(96);\n/**\n * Failed to update fee file\n */\n\nStatus.InvalidFeeFile = new Status(97);\n/**\n * Failed to update exchange rate file\n */\n\nStatus.InvalidExchangeRateFile = new Status(98);\n/**\n * Payment tendered for contract local call cannot cover both the fee and the gas\n */\n\nStatus.InsufficientLocalCallGas = new Status(99);\n/**\n * Entities with Entity ID below 1000 are not allowed to be deleted\n */\n\nStatus.EntityNotAllowedToDelete = new Status(100);\n/**\n * Violating one of these rules: 1) treasury account can update all entities below 0.0.1000, 2)\n * account 0.0.50 can update all entities from 0.0.51 - 0.0.80, 3) Network Function Master Account\n * A/c 0.0.50 - Update all Network Function accounts & perform all the Network Functions listed\n * below, 4) Network Function Accounts: i) A/c 0.0.55 - Update Address Book files (0.0.101/102),\n * ii) A/c 0.0.56 - Update Fee schedule (0.0.111), iii) A/c 0.0.57 - Update Exchange Rate\n * (0.0.112).\n */\n\nStatus.AuthorizationFailed = new Status(101);\n/**\n * Fee Schedule Proto uploaded but not valid (append or update is required)\n */\n\nStatus.FileUploadedProtoInvalid = new Status(102);\n/**\n * Fee Schedule Proto uploaded but not valid (append or update is required)\n */\n\nStatus.FileUploadedProtoNotSavedToDisk = new Status(103);\n/**\n * Fee Schedule Proto File Part uploaded\n */\n\nStatus.FeeScheduleFilePartUploaded = new Status(104);\n/**\n * The change on Exchange Rate exceeds Exchange_Rate_Allowed_Percentage\n */\n\nStatus.ExchangeRateChangeLimitExceeded = new Status(105);\n/**\n * Contract permanent storage exceeded the currently allowable limit\n */\n\nStatus.MaxContractStorageExceeded = new Status(106);\n/**\n * Transfer Account should not be same as Account to be deleted\n */\n\nStatus.TransferAccountSameAsDeleteAccount = new Status(107);\nStatus.TotalLedgerBalanceInvalid = new Status(108);\n/**\n * The expiration date/time on a smart contract may not be reduced\n */\n\nStatus.ExpirationReductionNotAllowed = new Status(110);\n/**\n * Gas exceeded currently allowable gas limit per transaction\n */\n\nStatus.MaxGasLimitExceeded = new Status(111);\n/**\n * File size exceeded the currently allowable limit\n */\n\nStatus.MaxFileSizeExceeded = new Status(112);\n/**\n * When a valid signature is not provided for operations on account with receiverSigRequired=true\n */\n\nStatus.ReceiverSigRequired = new Status(113);\n/**\n * The Topic ID specified is not in the system.\n */\n\nStatus.InvalidTopicId = new Status(150);\n/**\n * A provided admin key was invalid.\n */\n\nStatus.InvalidAdminKey = new Status(155);\n/**\n * A provided submit key was invalid.\n */\n\nStatus.InvalidSubmitKey = new Status(156);\n/**\n * An attempted operation was not authorized (ie - a deleteTopic for a topic with no adminKey).\n */\n\nStatus.Unauthorized = new Status(157);\n/**\n * A ConsensusService message is empty.\n */\n\nStatus.InvalidTopicMessage = new Status(158);\n/**\n * The autoRenewAccount specified is not a valid, active account.\n */\n\nStatus.InvalidAutorenewAccount = new Status(159);\n/**\n * An adminKey was not specified on the topic, so there must not be an autoRenewAccount.\n */\n\nStatus.AutorenewAccountNotAllowed = new Status(160);\n/**\n * The topic has expired, was not automatically renewed, and is in a 7 day grace period before the\n * topic will be deleted unrecoverably. This error response code will not be returned until\n * autoRenew functionality is supported by HAPI.\n */\n\nStatus.TopicExpired = new Status(162);\n/**\n * chunk number must be from 1 to total (chunks) inclusive.\n */\n\nStatus.InvalidChunkNumber = new Status(163);\n/**\n * For every chunk, the payer account that is part of initialTransactionID must match the Payer\n * Account of this transaction. The entire initialTransactionID should match the transactionID of\n * the first chunk, but this is not checked or enforced by Hedera except when the chunk number is 1.\n */\n\nStatus.InvalidChunkTransactionId = new Status(164);\n/**\n * Account is frozen and cannot transact with the token\n */\n\nStatus.AccountFrozenForToken = new Status(165);\n/**\n * An involved account already has more than <tt>tokens.maxPerAccount</tt> associations with\n * non-deleted tokens.\n */\n\nStatus.TokensPerAccountLimitExceeded = new Status(166);\n/**\n * The token is invalid or does not exist\n */\n\nStatus.InvalidTokenId = new Status(167);\n/**\n * Invalid token decimals\n */\n\nStatus.InvalidTokenDecimals = new Status(168);\n/**\n * Invalid token initial supply\n */\n\nStatus.InvalidTokenInitialSupply = new Status(169);\n/**\n * Treasury Account does not exist or is deleted\n */\n\nStatus.InvalidTreasuryAccountForToken = new Status(170);\n/**\n * Token Symbol is not UTF-8 capitalized alphabetical string\n */\n\nStatus.InvalidTokenSymbol = new Status(171);\n/**\n * Freeze key is not set on token\n */\n\nStatus.TokenHasNoFreezeKey = new Status(172);\n/**\n * Amounts in transfer list are not net zero\n */\n\nStatus.TransfersNotZeroSumForToken = new Status(173);\n/**\n * A token symbol was not provided\n */\n\nStatus.MissingTokenSymbol = new Status(174);\n/**\n * The provided token symbol was too long\n */\n\nStatus.TokenSymbolTooLong = new Status(175);\n/**\n * KYC must be granted and account does not have KYC granted\n */\n\nStatus.AccountKycNotGrantedForToken = new Status(176);\n/**\n * KYC key is not set on token\n */\n\nStatus.TokenHasNoKycKey = new Status(177);\n/**\n * Token balance is not sufficient for the transaction\n */\n\nStatus.InsufficientTokenBalance = new Status(178);\n/**\n * Token transactions cannot be executed on deleted token\n */\n\nStatus.TokenWasDeleted = new Status(179);\n/**\n * Supply key is not set on token\n */\n\nStatus.TokenHasNoSupplyKey = new Status(180);\n/**\n * Wipe key is not set on token\n */\n\nStatus.TokenHasNoWipeKey = new Status(181);\n/**\n * The requested token mint amount would cause an invalid total supply\n */\n\nStatus.InvalidTokenMintAmount = new Status(182);\n/**\n * The requested token burn amount would cause an invalid total supply\n */\n\nStatus.InvalidTokenBurnAmount = new Status(183);\n/**\n * A required token-account relationship is missing\n */\n\nStatus.TokenNotAssociatedToAccount = new Status(184);\n/**\n * The target of a wipe operation was the token treasury account\n */\n\nStatus.CannotWipeTokenTreasuryAccount = new Status(185);\n/**\n * The provided KYC key was invalid.\n */\n\nStatus.InvalidKycKey = new Status(186);\n/**\n * The provided wipe key was invalid.\n */\n\nStatus.InvalidWipeKey = new Status(187);\n/**\n * The provided freeze key was invalid.\n */\n\nStatus.InvalidFreezeKey = new Status(188);\n/**\n * The provided supply key was invalid.\n */\n\nStatus.InvalidSupplyKey = new Status(189);\n/**\n * Token Name is not provided\n */\n\nStatus.MissingTokenName = new Status(190);\n/**\n * Token Name is too long\n */\n\nStatus.TokenNameTooLong = new Status(191);\n/**\n * The provided wipe amount must not be negative, zero or bigger than the token holder balance\n */\n\nStatus.InvalidWipingAmount = new Status(192);\n/**\n * Token does not have Admin key set, thus update/delete transactions cannot be performed\n */\n\nStatus.TokenIsImmutable = new Status(193);\n/**\n * An <tt>associateToken</tt> operation specified a token already associated to the account\n */\n\nStatus.TokenAlreadyAssociatedToAccount = new Status(194);\n/**\n * An attempted operation is invalid until all token balances for the target account are zero\n */\n\nStatus.TransactionRequiresZeroTokenBalances = new Status(195);\n/**\n * An attempted operation is invalid because the account is a treasury\n */\n\nStatus.AccountIsTreasury = new Status(196);\n/**\n * Same TokenIDs present in the token list\n */\n\nStatus.TokenIdRepeatedInTokenList = new Status(197);\n/**\n * Exceeded the number of token transfers (both from and to) allowed for token transfer list\n */\n\nStatus.TokenTransferListSizeLimitExceeded = new Status(198);\n/**\n * TokenTransfersTransactionBody has no TokenTransferList\n */\n\nStatus.EmptyTokenTransferBody = new Status(199);\n/**\n * TokenTransfersTransactionBody has a TokenTransferList with no AccountAmounts\n */\n\nStatus.EmptyTokenTransferAccountAmounts = new Status(200);\n/**\n * The Scheduled entity does not exist; or has now expired, been deleted, or been executed\n */\n\nStatus.InvalidScheduleId = new Status(201);\n/**\n * The Scheduled entity cannot be modified. Admin key not set\n */\n\nStatus.ScheduleIsImmutable = new Status(202);\n/**\n * The provided Scheduled Payer does not exist\n */\n\nStatus.InvalidSchedulePayerId = new Status(203);\n/**\n * The Schedule Create Transaction TransactionID account does not exist\n */\n\nStatus.InvalidScheduleAccountId = new Status(204);\n/**\n * The provided sig map did not contain any new valid signatures from required signers of the\n * scheduled transaction\n */\n\nStatus.NoNewValidSignatures = new Status(205);\n/**\n * The required signers for a scheduled transaction cannot be resolved, for example because they do\n * not exist or have been deleted\n */\n\nStatus.UnresolvableRequiredSigners = new Status(206);\n/**\n * Only whitelisted transaction types may be scheduled\n */\n\nStatus.ScheduledTransactionNotInWhitelist = new Status(207);\n/**\n * At least one of the signatures in the provided sig map did not represent a valid signature for\n * any required signer\n */\n\nStatus.SomeSignaturesWereInvalid = new Status(208);\n/**\n * The scheduled field in the TransactionID may not be set to true\n */\n\nStatus.TransactionIdFieldNotAllowed = new Status(209);\n/**\n * A schedule already exists with the same identifying fields of an attempted ScheduleCreate (that\n * is, all fields other than scheduledPayerAccountID)\n */\n\nStatus.IdenticalScheduleAlreadyCreated = new Status(210);\n/**\n * A string field in the transaction has a UTF-8 encoding with the prohibited zero byte\n */\n\nStatus.InvalidZeroByteInString = new Status(211);\n/**\n * A schedule being signed or deleted has already been deleted\n */\n\nStatus.ScheduleAlreadyDeleted = new Status(212);\n/**\n * A schedule being signed or deleted has already been executed\n */\n\nStatus.ScheduleAlreadyExecuted = new Status(213);\n/**\n * ConsensusSubmitMessage request's message size is larger than allowed.\n */\n\nStatus.MessageSizeTooLarge = new Status(214);\n/**\n * An operation was assigned to more than one throttle group in a given bucket\n */\n\nStatus.OperationRepeatedInBucketGroups = new Status(215);\n/**\n * The capacity needed to satisfy all opsPerSec groups in a bucket overflowed a signed 8-byte\n * integral type\n */\n\nStatus.BucketCapacityOverflow = new Status(216);\n/**\n * Given the network size in the address book, the node-level capacity for an operation would never\n * be enough to accept a single request; usually means a bucket burstPeriod should be increased\n */\n\nStatus.NodeCapacityNotSufficientForOperation = new Status(217);\n/**\n * A bucket was defined without any throttle groups\n */\n\nStatus.BucketHasNoThrottleGroups = new Status(218);\n/**\n * A throttle group was granted zero opsPerSec\n */\n\nStatus.ThrottleGroupHasZeroOpsPerSec = new Status(219);\n/**\n * The throttle definitions file was updated, but some supported operations were not assigned a\n * bucket\n */\n\nStatus.SuccessButMissingExpectedOperation = new Status(220);\n/**\n * The new contents for the throttle definitions system file were not valid protobuf\n */\n\nStatus.UnparseableThrottleDefinitions = new Status(221);\n/**\n * The new throttle definitions system file were invalid, and no more specific error could be\n * divined\n */\n\nStatus.InvalidThrottleDefinitions = new Status(222);\n/**\n * The transaction references an account which has passed its expiration without renewal funds\n * available, and currently remains in the ledger only because of the grace period given to expired\n * entities\n */\n\nStatus.AccountExpiredAndPendingRemoval = new Status(223);\n/**\n * Invalid token max supply\n */\n\nStatus.InvalidTokenMaxSupply = new Status(224);\n/**\n * Invalid token nft serial number\n */\n\nStatus.InvalidTokenNftSerialNumber = new Status(225);\n/**\n * Invalid nft id\n */\n\nStatus.InvalidNftId = new Status(226);\n/**\n * Nft metadata is too long\n */\n\nStatus.MetadataTooLong = new Status(227);\n/**\n * Repeated operations count exceeds the limit\n */\n\nStatus.BatchSizeLimitExceeded = new Status(228);\n/**\n * The range of data to be gathered is out of the set boundaries\n */\n\nStatus.InvalidQueryRange = new Status(229);\n/**\n * A custom fractional fee set a denominator of zero\n */\n\nStatus.FractionDividesByZero = new Status(230);\n/**\n * The transaction payer could not afford a custom fee\n */\n\nStatus.InsufficientPayerBalanceForCustomFee = new Status(231);\n/**\n * More than 10 custom fees were specified\n */\n\nStatus.CustomFeesListTooLong = new Status(232);\n/**\n * Any of the feeCollector accounts for customFees is invalid\n */\n\nStatus.InvalidCustomFeeCollector = new Status(233);\n/**\n * Any of the token Ids in customFees is invalid\n */\n\nStatus.InvalidTokenIdInCustomFees = new Status(234);\n/**\n * Any of the token Ids in customFees are not associated to feeCollector\n */\n\nStatus.TokenNotAssociatedToFeeCollector = new Status(235);\n/**\n * A token cannot have more units minted due to its configured supply ceiling\n */\n\nStatus.TokenMaxSupplyReached = new Status(236);\n/**\n * The transaction attempted to move an NFT serial number from an account other than its owner\n */\n\nStatus.SenderDoesNotOwnNftSerialNo = new Status(237);\n/**\n * A custom fee schedule entry did not specify either a fixed or fractional fee\n */\n\nStatus.CustomFeeNotFullySpecified = new Status(238);\n/**\n * Only positive fees may be assessed at this time\n */\n\nStatus.CustomFeeMustBePositive = new Status(239);\n/**\n * Fee schedule key is not set on token\n */\n\nStatus.TokenHasNoFeeScheduleKey = new Status(240);\n/**\n * A fractional custom fee exceeded the range of a 64-bit signed integer\n */\n\nStatus.CustomFeeOutsideNumericRange = new Status(241);\n/**\n * A royalty cannot exceed the total fungible value exchanged for an NFT\n */\n\nStatus.RoyaltyFractionCannotExceedOne = new Status(242);\n/**\n * Each fractional custom fee must have its maximum_amount, if specified, at least its\n * minimum_amount\n */\n\nStatus.FractionalFeeMaxAmountLessThanMinAmount = new Status(243);\n/**\n * A fee schedule update tried to clear the custom fees from a token whose fee schedule was already\n * empty\n */\n\nStatus.CustomScheduleAlreadyHasNoFees = new Status(244);\n/**\n * Only tokens of type FUNGIBLE_COMMON can be used to as fee schedule denominations\n */\n\nStatus.CustomFeeDenominationMustBeFungibleCommon = new Status(245);\n/**\n * Only tokens of type FUNGIBLE_COMMON can have fractional fees\n */\n\nStatus.CustomFractionalFeeOnlyAllowedForFungibleCommon = new Status(246);\n/**\n * The provided custom fee schedule key was invalid\n */\n\nStatus.InvalidCustomFeeScheduleKey = new Status(247);\n/**\n * The requested token mint metadata was invalid\n */\n\nStatus.InvalidTokenMintMetadata = new Status(248);\n/**\n * The requested token burn metadata was invalid\n */\n\nStatus.InvalidTokenBurnMetadata = new Status(249);\n/**\n * The treasury for a unique token cannot be changed until it owns no NFTs\n */\n\nStatus.CurrentTreasuryStillOwnsNfts = new Status(250);\n/**\n * An account cannot be dissociated from a unique token if it owns NFTs for the token\n */\n\nStatus.AccountStillOwnsNfts = new Status(251);\n/**\n * A NFT can only be burned when owned by the unique token's treasury\n */\n\nStatus.TreasuryMustOwnBurnedNft = new Status(252);\n/**\n * An account did not own the NFT to be wiped\n */\n\nStatus.AccountDoesNotOwnWipedNft = new Status(253);\n/**\n * An AccountAmount token transfers list referenced a token type other than FUNGIBLE_COMMON\n */\n\nStatus.AccountAmountTransfersOnlyAllowedForFungibleCommon = new Status(254);\n/**\n * All the NFTs allowed in the current price regime have already been minted\n */\n\nStatus.MaxNftsInPriceRegimeHaveBeenMinted = new Status(255);\n/**\n * The payer account has been marked as deleted\n */\n\nStatus.PayerAccountDeleted = new Status(256);\n/**\n * The reference chain of custom fees for a transferred token exceeded the maximum length of 2\n */\n\nStatus.CustomFeeChargingExceededMaxRecursionDepth = new Status(257);\n/**\n * More than 20 balance adjustments were to satisfy a CryptoTransfer and its implied custom fee\n * payments\n */\n\nStatus.CustomFeeChargingExceededMaxAccountAmounts = new Status(258);\n/**\n * The sender account in the token transfer transaction could not afford a custom fee\n */\n\nStatus.InsufficientSenderAccountBalanceForCustomFee = new Status(259);\n/**\n * Currently no more than 4,294,967,295 NFTs may be minted for a given unique token type\n */\n\nStatus.SerialNumberLimitReached = new Status(260);\n/**\n * Only tokens of type NON_FUNGIBLE_UNIQUE can have royalty fees\n */\n\nStatus.CustomRoyaltyFeeOnlyAllowedForNonFungibleUnique = new Status(261);\n/**\n * The account has reached the limit on the automatic associations count.\n */\n\nStatus.NoRemainingAutomaticAssociations = new Status(262);\n/**\n * Already existing automatic associations are more than the new maximum automatic associations.\n */\n\nStatus.ExistingAutomaticAssociationsExceedGivenLimit = new Status(263);\n/**\n * Cannot set the number of automatic associations for an account more than the\n * maximum allowed token associations <tt>tokens.maxPerAccount</tt>\n */\n\nStatus.RequestedNumAutomaticAssociationsExceedsAssociationLimit = new Status(264);\n/**\n * Token is paused. This Token cannot be a part of any kind of Transaction until unpaused.\n */\n\nStatus.TokenIsPaused = new Status(265);\n/**\n * Pause key is not set on token\n */\n\nStatus.TokenHasNoPauseKey = new Status(266);\n/**\n * The provided pause key was invalid\n */\n\nStatus.InvalidPauseKey = new Status(267);\n/**\n * The update file in a freeze transaction body must exist.\n */\n\nStatus.FreezeUpdateFileDoesNotExist = new Status(268);\n/**\n * The hash of the update file in a freeze transaction body must match the in-memory hash.\n */\n\nStatus.FreezeUpdateFileHashDoesNotMatch = new Status(269);\n/**\n * A FREEZE_UPGRADE transaction was handled with no previous update prepared.\n */\n\nStatus.NoUpgradeHasBeenPrepared = new Status(270);\n/**\n * A FREEZE_ABORT transaction was handled with no scheduled freeze.\n */\n\nStatus.NoFreezeIsScheduled = new Status(271);\n/**\n * The update file hash when handling a FREEZE_UPGRADE transaction differs from the file\n * hash at the time of handling the PREPARE_UPGRADE transaction.\n */\n\nStatus.UpdateFileHashChangedSincePrepareUpgrade = new Status(272);\n/**\n * The given freeze start time was in the (consensus) past.\n */\n\nStatus.FreezeStartTimeMustBeFuture = new Status(273);\n/**\n * The prepared update file cannot be updated or appended until either the upgrade has\n * been completed, or a FREEZE_ABORT has been handled.\n */\n\nStatus.PreparedUpdateFileIsImmutable = new Status(274);\n/**\n * Once a freeze is scheduled, it must be aborted before any other type of freeze can\n * can be performed.\n */\n\nStatus.FreezeAlreadyScheduled = new Status(275);\n/**\n * If an NMT upgrade has been prepared, the following operation must be a FREEZE_UPGRADE.\n * (To issue a FREEZE_ONLY, submit a FREEZE_ABORT first.)\n */\n\nStatus.FreezeUpgradeInProgress = new Status(276);\n/**\n * If an NMT upgrade has been prepared, the subsequent FREEZE_UPGRADE transaction must\n * confirm the id of the file to be used in the upgrade.\n */\n\nStatus.UpdateFileIdDoesNotMatchPrepared = new Status(277);\n/**\n * If an NMT upgrade has been prepared, the subsequent FREEZE_UPGRADE transaction must\n * confirm the hash of the file to be used in the upgrade.\n */\n\nStatus.UpdateFileHashDoesNotMatchPrepared = new Status(278);\n/**\n * Consensus throttle did not allow execution of this transaction. System is throttled at\n * consensus level.\n */\n\nStatus.ConsensusGasExhausted = new Status(279);\n/**\n * A precompiled contract succeeded, but was later reverted.\n */\n\nStatus.RevertedSuccess = new Status(280);\n/**\n * All contract storage allocated to the current price regime has been consumed.\n */\n\nStatus.MaxStorageInPriceRegimeHasBeenUsed = new Status(281);\n/**\n * An alias used in a CryptoTransfer transaction is not the serialization of a primitive Key\n * message--that is, a Key with a single Ed25519 or ECDSA(secp256k1) public key and no\n * unknown protobuf fields.\n */\n\nStatus.InvalidAliasKey = new Status(282);\n/**\n * A fungible token transfer expected a different number of decimals than the involved\n * type actually has.\n */\n\nStatus.UnexpectedTokenDecimals = new Status(283);","map":{"version":3,"sources":["C:/Work/coding-sandbox/react-again/dapp-days/node_modules/@hashgraph/sdk/src/Status.js"],"names":["Status","constructor","code","_code","Object","freeze","toString","Ok","InvalidTransaction","PayerAccountNotFound","InvalidNodeAccount","TransactionExpired","InvalidTransactionStart","InvalidTransactionDuration","InvalidSignature","MemoTooLong","InsufficientTxFee","InsufficientPayerBalance","DuplicateTransaction","Busy","NotSupported","InvalidFileId","InvalidAccountId","InvalidContractId","InvalidTransactionId","ReceiptNotFound","RecordNotFound","InvalidSolidityId","Unknown","Success","FailInvalid","FailFee","FailBalance","KeyRequired","BadEncoding","InsufficientAccountBalance","InvalidSolidityAddress","InsufficientGas","ContractSizeLimitExceeded","LocalCallModificationException","ContractRevertExecuted","ContractExecutionException","InvalidReceivingNodeAccount","MissingQueryHeader","AccountUpdateFailed","InvalidKeyEncoding","NullSolidityAddress","ContractUpdateFailed","InvalidQueryHeader","InvalidFeeSubmitted","InvalidPayerSignature","KeyNotProvided","InvalidExpirationTime","NoWaclKey","FileContentEmpty","InvalidAccountAmounts","EmptyTransactionBody","InvalidTransactionBody","InvalidSignatureTypeMismatchingKey","InvalidSignatureCountMismatchingKey","EmptyLiveHashBody","EmptyLiveHash","EmptyLiveHashKeys","InvalidLiveHashSize","EmptyQueryBody","EmptyLiveHashQuery","LiveHashNotFound","AccountIdDoesNotExist","LiveHashAlreadyExists","InvalidFileWacl","SerializationFailed","TransactionOversize","TransactionTooManyLayers","ContractDeleted","PlatformNotActive","KeyPrefixMismatch","PlatformTransactionNotCreated","InvalidRenewalPeriod","InvalidPayerAccountId","AccountDeleted","FileDeleted","AccountRepeatedInAccountAmounts","SettingNegativeAccountBalance","ObtainerRequired","ObtainerSameContractId","ObtainerDoesNotExist","ModifyingImmutableContract","FileSystemException","AutorenewDurationNotInRange","ErrorDecodingBytestring","ContractFileEmpty","ContractBytecodeEmpty","InvalidInitialBalance","InvalidReceiveRecordThreshold","InvalidSendRecordThreshold","AccountIsNotGenesisAccount","PayerAccountUnauthorized","InvalidFreezeTransactionBody","FreezeTransactionBodyNotFound","TransferListSizeLimitExceeded","ResultSizeLimitExceeded","NotSpecialAccount","ContractNegativeGas","ContractNegativeValue","InvalidFeeFile","InvalidExchangeRateFile","InsufficientLocalCallGas","EntityNotAllowedToDelete","AuthorizationFailed","FileUploadedProtoInvalid","FileUploadedProtoNotSavedToDisk","FeeScheduleFilePartUploaded","ExchangeRateChangeLimitExceeded","MaxContractStorageExceeded","TransferAccountSameAsDeleteAccount","TotalLedgerBalanceInvalid","ExpirationReductionNotAllowed","MaxGasLimitExceeded","MaxFileSizeExceeded","ReceiverSigRequired","InvalidTopicId","InvalidAdminKey","InvalidSubmitKey","Unauthorized","InvalidTopicMessage","InvalidAutorenewAccount","AutorenewAccountNotAllowed","TopicExpired","InvalidChunkNumber","InvalidChunkTransactionId","AccountFrozenForToken","TokensPerAccountLimitExceeded","InvalidTokenId","InvalidTokenDecimals","InvalidTokenInitialSupply","InvalidTreasuryAccountForToken","InvalidTokenSymbol","TokenHasNoFreezeKey","TransfersNotZeroSumForToken","MissingTokenSymbol","TokenSymbolTooLong","AccountKycNotGrantedForToken","TokenHasNoKycKey","InsufficientTokenBalance","TokenWasDeleted","TokenHasNoSupplyKey","TokenHasNoWipeKey","InvalidTokenMintAmount","InvalidTokenBurnAmount","TokenNotAssociatedToAccount","CannotWipeTokenTreasuryAccount","InvalidKycKey","InvalidWipeKey","InvalidFreezeKey","InvalidSupplyKey","MissingTokenName","TokenNameTooLong","InvalidWipingAmount","TokenIsImmutable","TokenAlreadyAssociatedToAccount","TransactionRequiresZeroTokenBalances","AccountIsTreasury","TokenIdRepeatedInTokenList","TokenTransferListSizeLimitExceeded","EmptyTokenTransferBody","EmptyTokenTransferAccountAmounts","InvalidScheduleId","ScheduleIsImmutable","InvalidSchedulePayerId","InvalidScheduleAccountId","NoNewValidSignatures","UnresolvableRequiredSigners","ScheduledTransactionNotInWhitelist","SomeSignaturesWereInvalid","TransactionIdFieldNotAllowed","IdenticalScheduleAlreadyCreated","InvalidZeroByteInString","ScheduleAlreadyDeleted","ScheduleAlreadyExecuted","MessageSizeTooLarge","OperationRepeatedInBucketGroups","BucketCapacityOverflow","NodeCapacityNotSufficientForOperation","BucketHasNoThrottleGroups","ThrottleGroupHasZeroOpsPerSec","SuccessButMissingExpectedOperation","UnparseableThrottleDefinitions","InvalidThrottleDefinitions","AccountExpiredAndPendingRemoval","InvalidTokenMaxSupply","InvalidTokenNftSerialNumber","InvalidNftId","MetadataTooLong","BatchSizeLimitExceeded","InvalidQueryRange","FractionDividesByZero","InsufficientPayerBalanceForCustomFee","CustomFeesListTooLong","InvalidCustomFeeCollector","InvalidTokenIdInCustomFees","TokenNotAssociatedToFeeCollector","TokenMaxSupplyReached","SenderDoesNotOwnNftSerialNo","CustomFeeNotFullySpecified","CustomFeeMustBePositive","TokenHasNoFeeScheduleKey","CustomFeeOutsideNumericRange","RoyaltyFractionCannotExceedOne","FractionalFeeMaxAmountLessThanMinAmount","CustomScheduleAlreadyHasNoFees","CustomFeeDenominationMustBeFungibleCommon","CustomFractionalFeeOnlyAllowedForFungibleCommon","InvalidCustomFeeScheduleKey","InvalidTokenMintMetadata","InvalidTokenBurnMetadata","CurrentTreasuryStillOwnsNfts","AccountStillOwnsNfts","TreasuryMustOwnBurnedNft","AccountDoesNotOwnWipedNft","AccountAmountTransfersOnlyAllowedForFungibleCommon","MaxNftsInPriceRegimeHaveBeenMinted","PayerAccountDeleted","CustomFeeChargingExceededMaxRecursionDepth","CustomFeeChargingExceededMaxAccountAmounts","InsufficientSenderAccountBalanceForCustomFee","SerialNumberLimitReached","CustomRoyaltyFeeOnlyAllowedForNonFungibleUnique","NoRemainingAutomaticAssociations","ExistingAutomaticAssociationsExceedGivenLimit","RequestedNumAutomaticAssociationsExceedsAssociationLimit","TokenIsPaused","TokenHasNoPauseKey","InvalidPauseKey","FreezeUpdateFileDoesNotExist","FreezeUpdateFileHashDoesNotMatch","NoUpgradeHasBeenPrepared","NoFreezeIsScheduled","UpdateFileHashChangedSincePrepareUpgrade","FreezeStartTimeMustBeFuture","PreparedUpdateFileIsImmutable","FreezeAlreadyScheduled","FreezeUpgradeInProgress","UpdateFileIdDoesNotMatchPrepared","UpdateFileHashDoesNotMatchPrepared","ConsensusGasExhausted","RevertedSuccess","MaxStorageInPriceRegimeHasBeenUsed","InvalidAliasKey","UnexpectedTokenDecimals","_fromCode","Error","valueOf"],"mappings":"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","sourcesContent":["/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").ResponseCodeEnum} proto.ResponseCodeEnum\n */\n\nexport default class Status {\n    /**\n     * @hideconstructor\n     * @internal\n     * @param {number} code\n     */\n    constructor(code) {\n        /** @readonly */\n        this._code = code;\n\n        Object.freeze(this);\n    }\n\n    /**\n     * @returns {string}\n     */\n    toString() {\n        switch (this) {\n            case Status.Ok:\n                return \"OK\";\n            case Status.InvalidTransaction:\n                return \"INVALID_TRANSACTION\";\n            case Status.PayerAccountNotFound:\n                return \"PAYER_ACCOUNT_NOT_FOUND\";\n            case Status.InvalidNodeAccount:\n                return \"INVALID_NODE_ACCOUNT\";\n            case Status.TransactionExpired:\n                return \"TRANSACTION_EXPIRED\";\n            case Status.InvalidTransactionStart:\n                return \"INVALID_TRANSACTION_START\";\n            case Status.InvalidTransactionDuration:\n                return \"INVALID_TRANSACTION_DURATION\";\n            case Status.InvalidSignature:\n                return \"INVALID_SIGNATURE\";\n            case Status.MemoTooLong:\n                return \"MEMO_TOO_LONG\";\n            case Status.InsufficientTxFee:\n                return \"INSUFFICIENT_TX_FEE\";\n            case Status.InsufficientPayerBalance:\n                return \"INSUFFICIENT_PAYER_BALANCE\";\n            case Status.DuplicateTransaction:\n                return \"DUPLICATE_TRANSACTION\";\n            case Status.Busy:\n                return \"BUSY\";\n            case Status.NotSupported:\n                return \"NOT_SUPPORTED\";\n            case Status.InvalidFileId:\n                return \"INVALID_FILE_ID\";\n            case Status.InvalidAccountId:\n                return \"INVALID_ACCOUNT_ID\";\n            case Status.InvalidContractId:\n                return \"INVALID_CONTRACT_ID\";\n            case Status.InvalidTransactionId:\n                return \"INVALID_TRANSACTION_ID\";\n            case Status.ReceiptNotFound:\n                return \"RECEIPT_NOT_FOUND\";\n            case Status.RecordNotFound:\n                return \"RECORD_NOT_FOUND\";\n            case Status.InvalidSolidityId:\n                return \"INVALID_SOLIDITY_ID\";\n            case Status.Unknown:\n                return \"UNKNOWN\";\n            case Status.Success:\n                return \"SUCCESS\";\n            case Status.FailInvalid:\n                return \"FAIL_INVALID\";\n            case Status.FailFee:\n                return \"FAIL_FEE\";\n            case Status.FailBalance:\n                return \"FAIL_BALANCE\";\n            case Status.KeyRequired:\n                return \"KEY_REQUIRED\";\n            case Status.BadEncoding:\n                return \"BAD_ENCODING\";\n            case Status.InsufficientAccountBalance:\n                return \"INSUFFICIENT_ACCOUNT_BALANCE\";\n            case Status.InvalidSolidityAddress:\n                return \"INVALID_SOLIDITY_ADDRESS\";\n            case Status.InsufficientGas:\n                return \"INSUFFICIENT_GAS\";\n            case Status.ContractSizeLimitExceeded:\n                return \"CONTRACT_SIZE_LIMIT_EXCEEDED\";\n            case Status.LocalCallModificationException:\n                return \"LOCAL_CALL_MODIFICATION_EXCEPTION\";\n            case Status.ContractRevertExecuted:\n                return \"CONTRACT_REVERT_EXECUTED\";\n            case Status.ContractExecutionException:\n                return \"CONTRACT_EXECUTION_EXCEPTION\";\n            case Status.InvalidReceivingNodeAccount:\n                return \"INVALID_RECEIVING_NODE_ACCOUNT\";\n            case Status.MissingQueryHeader:\n                return \"MISSING_QUERY_HEADER\";\n            case Status.AccountUpdateFailed:\n                return \"ACCOUNT_UPDATE_FAILED\";\n            case Status.InvalidKeyEncoding:\n                return \"INVALID_KEY_ENCODING\";\n            case Status.NullSolidityAddress:\n                return \"NULL_SOLIDITY_ADDRESS\";\n            case Status.ContractUpdateFailed:\n                return \"CONTRACT_UPDATE_FAILED\";\n            case Status.InvalidQueryHeader:\n                return \"INVALID_QUERY_HEADER\";\n            case Status.InvalidFeeSubmitted:\n                return \"INVALID_FEE_SUBMITTED\";\n            case Status.InvalidPayerSignature:\n                return \"INVALID_PAYER_SIGNATURE\";\n            case Status.KeyNotProvided:\n                return \"KEY_NOT_PROVIDED\";\n            case Status.InvalidExpirationTime:\n                return \"INVALID_EXPIRATION_TIME\";\n            case Status.NoWaclKey:\n                return \"NO_WACL_KEY\";\n            case Status.FileContentEmpty:\n                return \"FILE_CONTENT_EMPTY\";\n            case Status.InvalidAccountAmounts:\n                return \"INVALID_ACCOUNT_AMOUNTS\";\n            case Status.EmptyTransactionBody:\n                return \"EMPTY_TRANSACTION_BODY\";\n            case Status.InvalidTransactionBody:\n                return \"INVALID_TRANSACTION_BODY\";\n            case Status.InvalidSignatureTypeMismatchingKey:\n                return \"INVALID_SIGNATURE_TYPE_MISMATCHING_KEY\";\n            case Status.InvalidSignatureCountMismatchingKey:\n                return \"INVALID_SIGNATURE_COUNT_MISMATCHING_KEY\";\n            case Status.EmptyLiveHashBody:\n                return \"EMPTY_LIVE_HASH_BODY\";\n            case Status.EmptyLiveHash:\n                return \"EMPTY_LIVE_HASH\";\n            case Status.EmptyLiveHashKeys:\n                return \"EMPTY_LIVE_HASH_KEYS\";\n            case Status.InvalidLiveHashSize:\n                return \"INVALID_LIVE_HASH_SIZE\";\n            case Status.EmptyQueryBody:\n                return \"EMPTY_QUERY_BODY\";\n            case Status.EmptyLiveHashQuery:\n                return \"EMPTY_LIVE_HASH_QUERY\";\n            case Status.LiveHashNotFound:\n                return \"LIVE_HASH_NOT_FOUND\";\n            case Status.AccountIdDoesNotExist:\n                return \"ACCOUNT_ID_DOES_NOT_EXIST\";\n            case Status.LiveHashAlreadyExists:\n                return \"LIVE_HASH_ALREADY_EXISTS\";\n            case Status.InvalidFileWacl:\n                return \"INVALID_FILE_WACL\";\n            case Status.SerializationFailed:\n                return \"SERIALIZATION_FAILED\";\n            case Status.TransactionOversize:\n                return \"TRANSACTION_OVERSIZE\";\n            case Status.TransactionTooManyLayers:\n                return \"TRANSACTION_TOO_MANY_LAYERS\";\n            case Status.ContractDeleted:\n                return \"CONTRACT_DELETED\";\n            case Status.PlatformNotActive:\n                return \"PLATFORM_NOT_ACTIVE\";\n            case Status.KeyPrefixMismatch:\n                return \"KEY_PREFIX_MISMATCH\";\n            case Status.PlatformTransactionNotCreated:\n                return \"PLATFORM_TRANSACTION_NOT_CREATED\";\n            case Status.InvalidRenewalPeriod:\n                return \"INVALID_RENEWAL_PERIOD\";\n            case Status.InvalidPayerAccountId:\n                return \"INVALID_PAYER_ACCOUNT_ID\";\n            case Status.AccountDeleted:\n                return \"ACCOUNT_DELETED\";\n            case Status.FileDeleted:\n                return \"FILE_DELETED\";\n            case Status.AccountRepeatedInAccountAmounts:\n                return \"ACCOUNT_REPEATED_IN_ACCOUNT_AMOUNTS\";\n            case Status.SettingNegativeAccountBalance:\n                return \"SETTING_NEGATIVE_ACCOUNT_BALANCE\";\n            case Status.ObtainerRequired:\n                return \"OBTAINER_REQUIRED\";\n            case Status.ObtainerSameContractId:\n                return \"OBTAINER_SAME_CONTRACT_ID\";\n            case Status.ObtainerDoesNotExist:\n                return \"OBTAINER_DOES_NOT_EXIST\";\n            case Status.ModifyingImmutableContract:\n                return \"MODIFYING_IMMUTABLE_CONTRACT\";\n            case Status.FileSystemException:\n                return \"FILE_SYSTEM_EXCEPTION\";\n            case Status.AutorenewDurationNotInRange:\n                return \"AUTORENEW_DURATION_NOT_IN_RANGE\";\n            case Status.ErrorDecodingBytestring:\n                return \"ERROR_DECODING_BYTESTRING\";\n            case Status.ContractFileEmpty:\n                return \"CONTRACT_FILE_EMPTY\";\n            case Status.ContractBytecodeEmpty:\n                return \"CONTRACT_BYTECODE_EMPTY\";\n            case Status.InvalidInitialBalance:\n                return \"INVALID_INITIAL_BALANCE\";\n            case Status.InvalidReceiveRecordThreshold:\n                return \"INVALID_RECEIVE_RECORD_THRESHOLD\";\n            case Status.InvalidSendRecordThreshold:\n                return \"INVALID_SEND_RECORD_THRESHOLD\";\n            case Status.AccountIsNotGenesisAccount:\n                return \"ACCOUNT_IS_NOT_GENESIS_ACCOUNT\";\n            case Status.PayerAccountUnauthorized:\n                return \"PAYER_ACCOUNT_UNAUTHORIZED\";\n            case Status.InvalidFreezeTransactionBody:\n                return \"INVALID_FREEZE_TRANSACTION_BODY\";\n            case Status.FreezeTransactionBodyNotFound:\n                return \"FREEZE_TRANSACTION_BODY_NOT_FOUND\";\n            case Status.TransferListSizeLimitExceeded:\n                return \"TRANSFER_LIST_SIZE_LIMIT_EXCEEDED\";\n            case Status.ResultSizeLimitExceeded:\n                return \"RESULT_SIZE_LIMIT_EXCEEDED\";\n            case Status.NotSpecialAccount:\n                return \"NOT_SPECIAL_ACCOUNT\";\n            case Status.ContractNegativeGas:\n                return \"CONTRACT_NEGATIVE_GAS\";\n            case Status.ContractNegativeValue:\n                return \"CONTRACT_NEGATIVE_VALUE\";\n            case Status.InvalidFeeFile:\n                return \"INVALID_FEE_FILE\";\n            case Status.InvalidExchangeRateFile:\n                return \"INVALID_EXCHANGE_RATE_FILE\";\n            case Status.InsufficientLocalCallGas:\n                return \"INSUFFICIENT_LOCAL_CALL_GAS\";\n            case Status.EntityNotAllowedToDelete:\n                return \"ENTITY_NOT_ALLOWED_TO_DELETE\";\n            case Status.AuthorizationFailed:\n                return \"AUTHORIZATION_FAILED\";\n            case Status.FileUploadedProtoInvalid:\n                return \"FILE_UPLOADED_PROTO_INVALID\";\n            case Status.FileUploadedProtoNotSavedToDisk:\n                return \"FILE_UPLOADED_PROTO_NOT_SAVED_TO_DISK\";\n            case Status.FeeScheduleFilePartUploaded:\n                return \"FEE_SCHEDULE_FILE_PART_UPLOADED\";\n            case Status.ExchangeRateChangeLimitExceeded:\n                return \"EXCHANGE_RATE_CHANGE_LIMIT_EXCEEDED\";\n            case Status.MaxContractStorageExceeded:\n                return \"MAX_CONTRACT_STORAGE_EXCEEDED\";\n            case Status.TransferAccountSameAsDeleteAccount:\n                return \"TRANSFER_ACCOUNT_SAME_AS_DELETE_ACCOUNT\";\n            case Status.TotalLedgerBalanceInvalid:\n                return \"TOTAL_LEDGER_BALANCE_INVALID\";\n            case Status.ExpirationReductionNotAllowed:\n                return \"EXPIRATION_REDUCTION_NOT_ALLOWED\";\n            case Status.MaxGasLimitExceeded:\n                return \"MAX_GAS_LIMIT_EXCEEDED\";\n            case Status.MaxFileSizeExceeded:\n                return \"MAX_FILE_SIZE_EXCEEDED\";\n            case Status.ReceiverSigRequired:\n                return \"RECEIVER_SIG_REQUIRED\";\n            case Status.InvalidTopicId:\n                return \"INVALID_TOPIC_ID\";\n            case Status.InvalidAdminKey:\n                return \"INVALID_ADMIN_KEY\";\n            case Status.InvalidSubmitKey:\n                return \"INVALID_SUBMIT_KEY\";\n            case Status.Unauthorized:\n                return \"UNAUTHORIZED\";\n            case Status.InvalidTopicMessage:\n                return \"INVALID_TOPIC_MESSAGE\";\n            case Status.InvalidAutorenewAccount:\n                return \"INVALID_AUTORENEW_ACCOUNT\";\n            case Status.AutorenewAccountNotAllowed:\n                return \"AUTORENEW_ACCOUNT_NOT_ALLOWED\";\n            case Status.TopicExpired:\n                return \"TOPIC_EXPIRED\";\n            case Status.InvalidChunkNumber:\n                return \"INVALID_CHUNK_NUMBER\";\n            case Status.InvalidChunkTransactionId:\n                return \"INVALID_CHUNK_TRANSACTION_ID\";\n            case Status.AccountFrozenForToken:\n                return \"ACCOUNT_FROZEN_FOR_TOKEN\";\n            case Status.TokensPerAccountLimitExceeded:\n                return \"TOKENS_PER_ACCOUNT_LIMIT_EXCEEDED\";\n            case Status.InvalidTokenId:\n                return \"INVALID_TOKEN_ID\";\n            case Status.InvalidTokenDecimals:\n                return \"INVALID_TOKEN_DECIMALS\";\n            case Status.InvalidTokenInitialSupply:\n                return \"INVALID_TOKEN_INITIAL_SUPPLY\";\n            case Status.InvalidTreasuryAccountForToken:\n                return \"INVALID_TREASURY_ACCOUNT_FOR_TOKEN\";\n            case Status.InvalidTokenSymbol:\n                return \"INVALID_TOKEN_SYMBOL\";\n            case Status.TokenHasNoFreezeKey:\n                return \"TOKEN_HAS_NO_FREEZE_KEY\";\n            case Status.TransfersNotZeroSumForToken:\n                return \"TRANSFERS_NOT_ZERO_SUM_FOR_TOKEN\";\n            case Status.MissingTokenSymbol:\n                return \"MISSING_TOKEN_SYMBOL\";\n            case Status.TokenSymbolTooLong:\n                return \"TOKEN_SYMBOL_TOO_LONG\";\n            case Status.AccountKycNotGrantedForToken:\n                return \"ACCOUNT_KYC_NOT_GRANTED_FOR_TOKEN\";\n            case Status.TokenHasNoKycKey:\n                return \"TOKEN_HAS_NO_KYC_KEY\";\n            case Status.InsufficientTokenBalance:\n                return \"INSUFFICIENT_TOKEN_BALANCE\";\n            case Status.TokenWasDeleted:\n                return \"TOKEN_WAS_DELETED\";\n            case Status.TokenHasNoSupplyKey:\n                return \"TOKEN_HAS_NO_SUPPLY_KEY\";\n            case Status.TokenHasNoWipeKey:\n                return \"TOKEN_HAS_NO_WIPE_KEY\";\n            case Status.InvalidTokenMintAmount:\n                return \"INVALID_TOKEN_MINT_AMOUNT\";\n            case Status.InvalidTokenBurnAmount:\n                return \"INVALID_TOKEN_BURN_AMOUNT\";\n            case Status.TokenNotAssociatedToAccount:\n                return \"TOKEN_NOT_ASSOCIATED_TO_ACCOUNT\";\n            case Status.CannotWipeTokenTreasuryAccount:\n                return \"CANNOT_WIPE_TOKEN_TREASURY_ACCOUNT\";\n            case Status.InvalidKycKey:\n                return \"INVALID_KYC_KEY\";\n            case Status.InvalidWipeKey:\n                return \"INVALID_WIPE_KEY\";\n            case Status.InvalidFreezeKey:\n                return \"INVALID_FREEZE_KEY\";\n            case Status.InvalidSupplyKey:\n                return \"INVALID_SUPPLY_KEY\";\n            case Status.MissingTokenName:\n                return \"MISSING_TOKEN_NAME\";\n            case Status.TokenNameTooLong:\n                return \"TOKEN_NAME_TOO_LONG\";\n            case Status.InvalidWipingAmount:\n                return \"INVALID_WIPING_AMOUNT\";\n            case Status.TokenIsImmutable:\n                return \"TOKEN_IS_IMMUTABLE\";\n            case Status.TokenAlreadyAssociatedToAccount:\n                return \"TOKEN_ALREADY_ASSOCIATED_TO_ACCOUNT\";\n            case Status.TransactionRequiresZeroTokenBalances:\n                return \"TRANSACTION_REQUIRES_ZERO_TOKEN_BALANCES\";\n            case Status.AccountIsTreasury:\n                return \"ACCOUNT_IS_TREASURY\";\n            case Status.TokenIdRepeatedInTokenList:\n                return \"TOKEN_ID_REPEATED_IN_TOKEN_LIST\";\n            case Status.TokenTransferListSizeLimitExceeded:\n                return \"TOKEN_TRANSFER_LIST_SIZE_LIMIT_EXCEEDED\";\n            case Status.EmptyTokenTransferBody:\n                return \"EMPTY_TOKEN_TRANSFER_BODY\";\n            case Status.EmptyTokenTransferAccountAmounts:\n                return \"EMPTY_TOKEN_TRANSFER_ACCOUNT_AMOUNTS\";\n            case Status.InvalidScheduleId:\n                return \"INVALID_SCHEDULE_ID\";\n            case Status.ScheduleIsImmutable:\n                return \"SCHEDULE_IS_IMMUTABLE\";\n            case Status.InvalidSchedulePayerId:\n                return \"INVALID_SCHEDULE_PAYER_ID\";\n            case Status.InvalidScheduleAccountId:\n                return \"INVALID_SCHEDULE_ACCOUNT_ID\";\n            case Status.NoNewValidSignatures:\n                return \"NO_NEW_VALID_SIGNATURES\";\n            case Status.UnresolvableRequiredSigners:\n                return \"UNRESOLVABLE_REQUIRED_SIGNERS\";\n            case Status.ScheduledTransactionNotInWhitelist:\n                return \"SCHEDULED_TRANSACTION_NOT_IN_WHITELIST\";\n            case Status.SomeSignaturesWereInvalid:\n                return \"SOME_SIGNATURES_WERE_INVALID\";\n            case Status.TransactionIdFieldNotAllowed:\n                return \"TRANSACTION_ID_FIELD_NOT_ALLOWED\";\n            case Status.IdenticalScheduleAlreadyCreated:\n                return \"IDENTICAL_SCHEDULE_ALREADY_CREATED\";\n            case Status.InvalidZeroByteInString:\n                return \"INVALID_ZERO_BYTE_IN_STRING\";\n            case Status.ScheduleAlreadyDeleted:\n                return \"SCHEDULE_ALREADY_DELETED\";\n            case Status.ScheduleAlreadyExecuted:\n                return \"SCHEDULE_ALREADY_EXECUTED\";\n            case Status.MessageSizeTooLarge:\n                return \"MESSAGE_SIZE_TOO_LARGE\";\n            case Status.OperationRepeatedInBucketGroups:\n                return \"OPERATION_REPEATED_IN_BUCKET_GROUPS\";\n            case Status.BucketCapacityOverflow:\n                return \"BUCKET_CAPACITY_OVERFLOW\";\n            case Status.NodeCapacityNotSufficientForOperation:\n                return \"NODE_CAPACITY_NOT_SUFFICIENT_FOR_OPERATION\";\n            case Status.BucketHasNoThrottleGroups:\n                return \"BUCKET_HAS_NO_THROTTLE_GROUPS\";\n            case Status.ThrottleGroupHasZeroOpsPerSec:\n                return \"THROTTLE_GROUP_HAS_ZERO_OPS_PER_SEC\";\n            case Status.SuccessButMissingExpectedOperation:\n                return \"SUCCESS_BUT_MISSING_EXPECTED_OPERATION\";\n            case Status.UnparseableThrottleDefinitions:\n                return \"UNPARSEABLE_THROTTLE_DEFINITIONS\";\n            case Status.InvalidThrottleDefinitions:\n                return \"INVALID_THROTTLE_DEFINITIONS\";\n            case Status.AccountExpiredAndPendingRemoval:\n                return \"ACCOUNT_EXPIRED_AND_PENDING_REMOVAL\";\n            case Status.InvalidTokenMaxSupply:\n                return \"INVALID_TOKEN_MAX_SUPPLY\";\n            case Status.InvalidTokenNftSerialNumber:\n                return \"INVALID_TOKEN_NFT_SERIAL_NUMBER\";\n            case Status.InvalidNftId:\n                return \"INVALID_NFT_ID\";\n            case Status.MetadataTooLong:\n                return \"METADATA_TOO_LONG\";\n            case Status.BatchSizeLimitExceeded:\n                return \"BATCH_SIZE_LIMIT_EXCEEDED\";\n            case Status.InvalidQueryRange:\n                return \"INVALID_QUERY_RANGE\";\n            case Status.FractionDividesByZero:\n                return \"FRACTION_DIVIDES_BY_ZERO\";\n            case Status.InsufficientPayerBalanceForCustomFee:\n                return \"INSUFFICIENT_PAYER_BALANCE_FOR_CUSTOM_FEE\";\n            case Status.CustomFeesListTooLong:\n                return \"CUSTOM_FEES_LIST_TOO_LONG\";\n            case Status.InvalidCustomFeeCollector:\n                return \"INVALID_CUSTOM_FEE_COLLECTOR\";\n            case Status.InvalidTokenIdInCustomFees:\n                return \"INVALID_TOKEN_ID_IN_CUSTOM_FEES\";\n            case Status.TokenNotAssociatedToFeeCollector:\n                return \"TOKEN_NOT_ASSOCIATED_TO_FEE_COLLECTOR\";\n            case Status.TokenMaxSupplyReached:\n                return \"TOKEN_MAX_SUPPLY_REACHED\";\n            case Status.SenderDoesNotOwnNftSerialNo:\n                return \"SENDER_DOES_NOT_OWN_NFT_SERIAL_NO\";\n            case Status.CustomFeeNotFullySpecified:\n                return \"CUSTOM_FEE_NOT_FULLY_SPECIFIED\";\n            case Status.CustomFeeMustBePositive:\n                return \"CUSTOM_FEE_MUST_BE_POSITIVE\";\n            case Status.TokenHasNoFeeScheduleKey:\n                return \"TOKEN_HAS_NO_FEE_SCHEDULE_KEY\";\n            case Status.CustomFeeOutsideNumericRange:\n                return \"CUSTOM_FEE_OUTSIDE_NUMERIC_RANGE\";\n            case Status.RoyaltyFractionCannotExceedOne:\n                return \"ROYALTY_FRACTION_CANNOT_EXCEED_ONE\";\n            case Status.FractionalFeeMaxAmountLessThanMinAmount:\n                return \"FRACTIONAL_FEE_MAX_AMOUNT_LESS_THAN_MIN_AMOUNT\";\n            case Status.CustomScheduleAlreadyHasNoFees:\n                return \"CUSTOM_SCHEDULE_ALREADY_HAS_NO_FEES\";\n            case Status.CustomFeeDenominationMustBeFungibleCommon:\n                return \"CUSTOM_FEE_DENOMINATION_MUST_BE_FUNGIBLE_COMMON\";\n            case Status.CustomFractionalFeeOnlyAllowedForFungibleCommon:\n                return \"CUSTOM_FRACTIONAL_FEE_ONLY_ALLOWED_FOR_FUNGIBLE_COMMON\";\n            case Status.InvalidCustomFeeScheduleKey:\n                return \"INVALID_CUSTOM_FEE_SCHEDULE_KEY\";\n            case Status.InvalidTokenMintMetadata:\n                return \"INVALID_TOKEN_MINT_METADATA\";\n            case Status.InvalidTokenBurnMetadata:\n                return \"INVALID_TOKEN_BURN_METADATA\";\n            case Status.CurrentTreasuryStillOwnsNfts:\n                return \"CURRENT_TREASURY_STILL_OWNS_NFTS\";\n            case Status.AccountStillOwnsNfts:\n                return \"ACCOUNT_STILL_OWNS_NFTS\";\n            case Status.TreasuryMustOwnBurnedNft:\n                return \"TREASURY_MUST_OWN_BURNED_NFT\";\n            case Status.AccountDoesNotOwnWipedNft:\n                return \"ACCOUNT_DOES_NOT_OWN_WIPED_NFT\";\n            case Status.AccountAmountTransfersOnlyAllowedForFungibleCommon:\n                return \"ACCOUNT_AMOUNT_TRANSFERS_ONLY_ALLOWED_FOR_FUNGIBLE_COMMON\";\n            case Status.MaxNftsInPriceRegimeHaveBeenMinted:\n                return \"MAX_NFTS_IN_PRICE_REGIME_HAVE_BEEN_MINTED\";\n            case Status.PayerAccountDeleted:\n                return \"PAYER_ACCOUNT_DELETED\";\n            case Status.CustomFeeChargingExceededMaxRecursionDepth:\n                return \"CUSTOM_FEE_CHARGING_EXCEEDED_MAX_RECURSION_DEPTH\";\n            case Status.CustomFeeChargingExceededMaxAccountAmounts:\n                return \"CUSTOM_FEE_CHARGING_EXCEEDED_MAX_ACCOUNT_AMOUNTS\";\n            case Status.InsufficientSenderAccountBalanceForCustomFee:\n                return \"INSUFFICIENT_SENDER_ACCOUNT_BALANCE_FOR_CUSTOM_FEE\";\n            case Status.SerialNumberLimitReached:\n                return \"SERIAL_NUMBER_LIMIT_REACHED\";\n            case Status.CustomRoyaltyFeeOnlyAllowedForNonFungibleUnique:\n                return \"CUSTOM_ROYALTY_FEE_ONLY_ALLOWED_FOR_NON_FUNGIBLE_UNIQUE\";\n            case Status.NoRemainingAutomaticAssociations:\n                return \"NO_REMAINING_AUTOMATIC_ASSOCIATIONS\";\n            case Status.ExistingAutomaticAssociationsExceedGivenLimit:\n                return \"EXISTING_AUTOMATIC_ASSOCIATIONS_EXCEED_GIVEN_LIMIT\";\n            case Status.RequestedNumAutomaticAssociationsExceedsAssociationLimit:\n                return \"REQUESTED_NUM_AUTOMATIC_ASSOCIATIONS_EXCEEDS_ASSOCIATION_LIMIT\";\n            case Status.TokenIsPaused:\n                return \"TOKEN_IS_PAUSED\";\n            case Status.TokenHasNoPauseKey:\n                return \"TOKEN_HAS_NO_PAUSE_KEY\";\n            case Status.InvalidPauseKey:\n                return \"INVALID_PAUSE_KEY\";\n            case Status.FreezeUpdateFileDoesNotExist:\n                return \"FREEZE_UPDATE_FILE_DOES_NOT_EXIST\";\n            case Status.FreezeUpdateFileHashDoesNotMatch:\n                return \"FREEZE_UPDATE_FILE_HASH_DOES_NOT_MATCH\";\n            case Status.NoUpgradeHasBeenPrepared:\n                return \"NO_UPGRADE_HAS_BEEN_PREPARED\";\n            case Status.NoFreezeIsScheduled:\n                return \"NO_FREEZE_IS_SCHEDULED\";\n            case Status.UpdateFileHashChangedSincePrepareUpgrade:\n                return \"UPDATE_FILE_HASH_CHANGED_SINCE_PREPARE_UPGRADE\";\n            case Status.FreezeStartTimeMustBeFuture:\n                return \"FREEZE_START_TIME_MUST_BE_FUTURE\";\n            case Status.PreparedUpdateFileIsImmutable:\n                return \"PREPARED_UPDATE_FILE_IS_IMMUTABLE\";\n            case Status.FreezeAlreadyScheduled:\n                return \"FREEZE_ALREADY_SCHEDULED\";\n            case Status.FreezeUpgradeInProgress:\n                return \"FREEZE_UPGRADE_IN_PROGRESS\";\n            case Status.UpdateFileIdDoesNotMatchPrepared:\n                return \"UPDATE_FILE_ID_DOES_NOT_MATCH_PREPARED\";\n            case Status.UpdateFileHashDoesNotMatchPrepared:\n                return \"UPDATE_FILE_HASH_DOES_NOT_MATCH_PREPARED\";\n            case Status.ConsensusGasExhausted:\n                return \"CONSENSUS_GAS_EXHAUSTED\";\n            case Status.RevertedSuccess:\n                return \"REVERTED_SUCCESS\";\n            case Status.MaxStorageInPriceRegimeHasBeenUsed:\n                return \"MAX_STORAGE_IN_PRICE_REGIME_HAS_BEEN_USED\";\n            case Status.InvalidAliasKey:\n                return \"INVALID_ALIAS_KEY\";\n            case Status.UnexpectedTokenDecimals:\n                return \"UNEXPECTED_TOKEN_DECIMALS\";\n            default:\n                return `UNKNOWN (${this._code})`;\n        }\n    }\n\n    /**\n     * @internal\n     * @param {number} code\n     * @returns {Status}\n     */\n    static _fromCode(code) {\n        switch (code) {\n            case 0:\n                return Status.Ok;\n            case 1:\n                return Status.InvalidTransaction;\n            case 2:\n                return Status.PayerAccountNotFound;\n            case 3:\n                return Status.InvalidNodeAccount;\n            case 4:\n                return Status.TransactionExpired;\n            case 5:\n                return Status.InvalidTransactionStart;\n            case 6:\n                return Status.InvalidTransactionDuration;\n            case 7:\n                return Status.InvalidSignature;\n            case 8:\n                return Status.MemoTooLong;\n            case 9:\n                return Status.InsufficientTxFee;\n            case 10:\n                return Status.InsufficientPayerBalance;\n            case 11:\n                return Status.DuplicateTransaction;\n            case 12:\n                return Status.Busy;\n            case 13:\n                return Status.NotSupported;\n            case 14:\n                return Status.InvalidFileId;\n            case 15:\n                return Status.InvalidAccountId;\n            case 16:\n                return Status.InvalidContractId;\n            case 17:\n                return Status.InvalidTransactionId;\n            case 18:\n                return Status.ReceiptNotFound;\n            case 19:\n                return Status.RecordNotFound;\n            case 20:\n                return Status.InvalidSolidityId;\n            case 21:\n                return Status.Unknown;\n            case 22:\n                return Status.Success;\n            case 23:\n                return Status.FailInvalid;\n            case 24:\n                return Status.FailFee;\n            case 25:\n                return Status.FailBalance;\n            case 26:\n                return Status.KeyRequired;\n            case 27:\n                return Status.BadEncoding;\n            case 28:\n                return Status.InsufficientAccountBalance;\n            case 29:\n                return Status.InvalidSolidityAddress;\n            case 30:\n                return Status.InsufficientGas;\n            case 31:\n                return Status.ContractSizeLimitExceeded;\n            case 32:\n                return Status.LocalCallModificationException;\n            case 33:\n                return Status.ContractRevertExecuted;\n            case 34:\n                return Status.ContractExecutionException;\n            case 35:\n                return Status.InvalidReceivingNodeAccount;\n            case 36:\n                return Status.MissingQueryHeader;\n            case 37:\n                return Status.AccountUpdateFailed;\n            case 38:\n                return Status.InvalidKeyEncoding;\n            case 39:\n                return Status.NullSolidityAddress;\n            case 40:\n                return Status.ContractUpdateFailed;\n            case 41:\n                return Status.InvalidQueryHeader;\n            case 42:\n                return Status.InvalidFeeSubmitted;\n            case 43:\n                return Status.InvalidPayerSignature;\n            case 44:\n                return Status.KeyNotProvided;\n            case 45:\n                return Status.InvalidExpirationTime;\n            case 46:\n                return Status.NoWaclKey;\n            case 47:\n                return Status.FileContentEmpty;\n            case 48:\n                return Status.InvalidAccountAmounts;\n            case 49:\n                return Status.EmptyTransactionBody;\n            case 50:\n                return Status.InvalidTransactionBody;\n            case 51:\n                return Status.InvalidSignatureTypeMismatchingKey;\n            case 52:\n                return Status.InvalidSignatureCountMismatchingKey;\n            case 53:\n                return Status.EmptyLiveHashBody;\n            case 54:\n                return Status.EmptyLiveHash;\n            case 55:\n                return Status.EmptyLiveHashKeys;\n            case 56:\n                return Status.InvalidLiveHashSize;\n            case 57:\n                return Status.EmptyQueryBody;\n            case 58:\n                return Status.EmptyLiveHashQuery;\n            case 59:\n                return Status.LiveHashNotFound;\n            case 60:\n                return Status.AccountIdDoesNotExist;\n            case 61:\n                return Status.LiveHashAlreadyExists;\n            case 62:\n                return Status.InvalidFileWacl;\n            case 63:\n                return Status.SerializationFailed;\n            case 64:\n                return Status.TransactionOversize;\n            case 65:\n                return Status.TransactionTooManyLayers;\n            case 66:\n                return Status.ContractDeleted;\n            case 67:\n                return Status.PlatformNotActive;\n            case 68:\n                return Status.KeyPrefixMismatch;\n            case 69:\n                return Status.PlatformTransactionNotCreated;\n            case 70:\n                return Status.InvalidRenewalPeriod;\n            case 71:\n                return Status.InvalidPayerAccountId;\n            case 72:\n                return Status.AccountDeleted;\n            case 73:\n                return Status.FileDeleted;\n            case 74:\n                return Status.AccountRepeatedInAccountAmounts;\n            case 75:\n                return Status.SettingNegativeAccountBalance;\n            case 76:\n                return Status.ObtainerRequired;\n            case 77:\n                return Status.ObtainerSameContractId;\n            case 78:\n                return Status.ObtainerDoesNotExist;\n            case 79:\n                return Status.ModifyingImmutableContract;\n            case 80:\n                return Status.FileSystemException;\n            case 81:\n                return Status.AutorenewDurationNotInRange;\n            case 82:\n                return Status.ErrorDecodingBytestring;\n            case 83:\n                return Status.ContractFileEmpty;\n            case 84:\n                return Status.ContractBytecodeEmpty;\n            case 85:\n                return Status.InvalidInitialBalance;\n            case 86:\n                return Status.InvalidReceiveRecordThreshold;\n            case 87:\n                return Status.InvalidSendRecordThreshold;\n            case 88:\n                return Status.AccountIsNotGenesisAccount;\n            case 89:\n                return Status.PayerAccountUnauthorized;\n            case 90:\n                return Status.InvalidFreezeTransactionBody;\n            case 91:\n                return Status.FreezeTransactionBodyNotFound;\n            case 92:\n                return Status.TransferListSizeLimitExceeded;\n            case 93:\n                return Status.ResultSizeLimitExceeded;\n            case 94:\n                return Status.NotSpecialAccount;\n            case 95:\n                return Status.ContractNegativeGas;\n            case 96:\n                return Status.ContractNegativeValue;\n            case 97:\n                return Status.InvalidFeeFile;\n            case 98:\n                return Status.InvalidExchangeRateFile;\n            case 99:\n                return Status.InsufficientLocalCallGas;\n            case 100:\n                return Status.EntityNotAllowedToDelete;\n            case 101:\n                return Status.AuthorizationFailed;\n            case 102:\n                return Status.FileUploadedProtoInvalid;\n            case 103:\n                return Status.FileUploadedProtoNotSavedToDisk;\n            case 104:\n                return Status.FeeScheduleFilePartUploaded;\n            case 105:\n                return Status.ExchangeRateChangeLimitExceeded;\n            case 106:\n                return Status.MaxContractStorageExceeded;\n            case 107:\n                return Status.TransferAccountSameAsDeleteAccount;\n            case 108:\n                return Status.TotalLedgerBalanceInvalid;\n            case 110:\n                return Status.ExpirationReductionNotAllowed;\n            case 111:\n                return Status.MaxGasLimitExceeded;\n            case 112:\n                return Status.MaxFileSizeExceeded;\n            case 113:\n                return Status.ReceiverSigRequired;\n            case 150:\n                return Status.InvalidTopicId;\n            case 155:\n                return Status.InvalidAdminKey;\n            case 156:\n                return Status.InvalidSubmitKey;\n            case 157:\n                return Status.Unauthorized;\n            case 158:\n                return Status.InvalidTopicMessage;\n            case 159:\n                return Status.InvalidAutorenewAccount;\n            case 160:\n                return Status.AutorenewAccountNotAllowed;\n            case 162:\n                return Status.TopicExpired;\n            case 163:\n                return Status.InvalidChunkNumber;\n            case 164:\n                return Status.InvalidChunkTransactionId;\n            case 165:\n                return Status.AccountFrozenForToken;\n            case 166:\n                return Status.TokensPerAccountLimitExceeded;\n            case 167:\n                return Status.InvalidTokenId;\n            case 168:\n                return Status.InvalidTokenDecimals;\n            case 169:\n                return Status.InvalidTokenInitialSupply;\n            case 170:\n                return Status.InvalidTreasuryAccountForToken;\n            case 171:\n                return Status.InvalidTokenSymbol;\n            case 172:\n                return Status.TokenHasNoFreezeKey;\n            case 173:\n                return Status.TransfersNotZeroSumForToken;\n            case 174:\n                return Status.MissingTokenSymbol;\n            case 175:\n                return Status.TokenSymbolTooLong;\n            case 176:\n                return Status.AccountKycNotGrantedForToken;\n            case 177:\n                return Status.TokenHasNoKycKey;\n            case 178:\n                return Status.InsufficientTokenBalance;\n            case 179:\n                return Status.TokenWasDeleted;\n            case 180:\n                return Status.TokenHasNoSupplyKey;\n            case 181:\n                return Status.TokenHasNoWipeKey;\n            case 182:\n                return Status.InvalidTokenMintAmount;\n            case 183:\n                return Status.InvalidTokenBurnAmount;\n            case 184:\n                return Status.TokenNotAssociatedToAccount;\n            case 185:\n                return Status.CannotWipeTokenTreasuryAccount;\n            case 186:\n                return Status.InvalidKycKey;\n            case 187:\n                return Status.InvalidWipeKey;\n            case 188:\n                return Status.InvalidFreezeKey;\n            case 189:\n                return Status.InvalidSupplyKey;\n            case 190:\n                return Status.MissingTokenName;\n            case 191:\n                return Status.TokenNameTooLong;\n            case 192:\n                return Status.InvalidWipingAmount;\n            case 193:\n                return Status.TokenIsImmutable;\n            case 194:\n                return Status.TokenAlreadyAssociatedToAccount;\n            case 195:\n                return Status.TransactionRequiresZeroTokenBalances;\n            case 196:\n                return Status.AccountIsTreasury;\n            case 197:\n                return Status.TokenIdRepeatedInTokenList;\n            case 198:\n                return Status.TokenTransferListSizeLimitExceeded;\n            case 199:\n                return Status.EmptyTokenTransferBody;\n            case 200:\n                return Status.EmptyTokenTransferAccountAmounts;\n            case 201:\n                return Status.InvalidScheduleId;\n            case 202:\n                return Status.ScheduleIsImmutable;\n            case 203:\n                return Status.InvalidSchedulePayerId;\n            case 204:\n                return Status.InvalidScheduleAccountId;\n            case 205:\n                return Status.NoNewValidSignatures;\n            case 206:\n                return Status.UnresolvableRequiredSigners;\n            case 207:\n                return Status.ScheduledTransactionNotInWhitelist;\n            case 208:\n                return Status.SomeSignaturesWereInvalid;\n            case 209:\n                return Status.TransactionIdFieldNotAllowed;\n            case 210:\n                return Status.IdenticalScheduleAlreadyCreated;\n            case 211:\n                return Status.InvalidZeroByteInString;\n            case 212:\n                return Status.ScheduleAlreadyDeleted;\n            case 213:\n                return Status.ScheduleAlreadyExecuted;\n            case 214:\n                return Status.MessageSizeTooLarge;\n            case 215:\n                return Status.OperationRepeatedInBucketGroups;\n            case 216:\n                return Status.BucketCapacityOverflow;\n            case 217:\n                return Status.NodeCapacityNotSufficientForOperation;\n            case 218:\n                return Status.BucketHasNoThrottleGroups;\n            case 219:\n                return Status.ThrottleGroupHasZeroOpsPerSec;\n            case 220:\n                return Status.SuccessButMissingExpectedOperation;\n            case 221:\n                return Status.UnparseableThrottleDefinitions;\n            case 222:\n                return Status.InvalidThrottleDefinitions;\n            case 223:\n                return Status.AccountExpiredAndPendingRemoval;\n            case 224:\n                return Status.InvalidTokenMaxSupply;\n            case 225:\n                return Status.InvalidTokenNftSerialNumber;\n            case 226:\n                return Status.InvalidNftId;\n            case 227:\n                return Status.MetadataTooLong;\n            case 228:\n                return Status.BatchSizeLimitExceeded;\n            case 229:\n                return Status.InvalidQueryRange;\n            case 230:\n                return Status.FractionDividesByZero;\n            case 231:\n                return Status.InsufficientPayerBalanceForCustomFee;\n            case 232:\n                return Status.CustomFeesListTooLong;\n            case 233:\n                return Status.InvalidCustomFeeCollector;\n            case 234:\n                return Status.InvalidTokenIdInCustomFees;\n            case 235:\n                return Status.TokenNotAssociatedToFeeCollector;\n            case 236:\n                return Status.TokenMaxSupplyReached;\n            case 237:\n                return Status.SenderDoesNotOwnNftSerialNo;\n            case 238:\n                return Status.CustomFeeNotFullySpecified;\n            case 239:\n                return Status.CustomFeeMustBePositive;\n            case 240:\n                return Status.TokenHasNoFeeScheduleKey;\n            case 241:\n                return Status.CustomFeeOutsideNumericRange;\n            case 242:\n                return Status.RoyaltyFractionCannotExceedOne;\n            case 243:\n                return Status.FractionalFeeMaxAmountLessThanMinAmount;\n            case 244:\n                return Status.CustomScheduleAlreadyHasNoFees;\n            case 245:\n                return Status.CustomFeeDenominationMustBeFungibleCommon;\n            case 246:\n                return Status.CustomFractionalFeeOnlyAllowedForFungibleCommon;\n            case 247:\n                return Status.InvalidCustomFeeScheduleKey;\n            case 248:\n                return Status.InvalidTokenMintMetadata;\n            case 249:\n                return Status.InvalidTokenBurnMetadata;\n            case 250:\n                return Status.CurrentTreasuryStillOwnsNfts;\n            case 251:\n                return Status.AccountStillOwnsNfts;\n            case 252:\n                return Status.TreasuryMustOwnBurnedNft;\n            case 253:\n                return Status.AccountDoesNotOwnWipedNft;\n            case 254:\n                return Status.AccountAmountTransfersOnlyAllowedForFungibleCommon;\n            case 255:\n                return Status.MaxNftsInPriceRegimeHaveBeenMinted;\n            case 256:\n                return Status.PayerAccountDeleted;\n            case 257:\n                return Status.CustomFeeChargingExceededMaxRecursionDepth;\n            case 258:\n                return Status.CustomFeeChargingExceededMaxAccountAmounts;\n            case 259:\n                return Status.InsufficientSenderAccountBalanceForCustomFee;\n            case 260:\n                return Status.SerialNumberLimitReached;\n            case 261:\n                return Status.CustomRoyaltyFeeOnlyAllowedForNonFungibleUnique;\n            case 262:\n                return Status.NoRemainingAutomaticAssociations;\n            case 263:\n                return Status.ExistingAutomaticAssociationsExceedGivenLimit;\n            case 264:\n                return Status.RequestedNumAutomaticAssociationsExceedsAssociationLimit;\n            case 265:\n                return Status.TokenIsPaused;\n            case 266:\n                return Status.TokenHasNoPauseKey;\n            case 267:\n                return Status.InvalidPauseKey;\n            case 268:\n                return Status.FreezeUpdateFileDoesNotExist;\n            case 269:\n                return Status.FreezeUpdateFileHashDoesNotMatch;\n            case 270:\n                return Status.NoUpgradeHasBeenPrepared;\n            case 271:\n                return Status.NoFreezeIsScheduled;\n            case 272:\n                return Status.UpdateFileHashChangedSincePrepareUpgrade;\n            case 273:\n                return Status.FreezeStartTimeMustBeFuture;\n            case 274:\n                return Status.PreparedUpdateFileIsImmutable;\n            case 275:\n                return Status.FreezeAlreadyScheduled;\n            case 276:\n                return Status.FreezeUpgradeInProgress;\n            case 277:\n                return Status.UpdateFileIdDoesNotMatchPrepared;\n            case 278:\n                return Status.UpdateFileHashDoesNotMatchPrepared;\n            case 279:\n                return Status.ConsensusGasExhausted;\n            case 280:\n                return Status.RevertedSuccess;\n            case 281:\n                return Status.MaxStorageInPriceRegimeHasBeenUsed;\n            case 282:\n                return Status.InvalidAliasKey;\n            case 283:\n                return Status.UnexpectedTokenDecimals;\n            default:\n                throw new Error(\n                    `(BUG) Status.fromCode() does not handle code: ${code}`\n                );\n        }\n    }\n\n    /**\n     * @returns {proto.ResponseCodeEnum}\n     */\n    valueOf() {\n        return this._code;\n    }\n}\n\n/**\n * The transaction passed the precheck validations.\n */\nStatus.Ok = new Status(0);\n\n/**\n * For any error not handled by specific error codes listed below.\n */\nStatus.InvalidTransaction = new Status(1);\n\n/**\n * Payer account does not exist.\n */\nStatus.PayerAccountNotFound = new Status(2);\n\n/**\n * Node Account provided does not match the node account of the node the transaction was submitted\n * to.\n */\nStatus.InvalidNodeAccount = new Status(3);\n\n/**\n * Pre-Check error when TransactionValidStart + transactionValidDuration is less than current\n * consensus time.\n */\nStatus.TransactionExpired = new Status(4);\n\n/**\n * Transaction start time is greater than current consensus time\n */\nStatus.InvalidTransactionStart = new Status(5);\n\n/**\n * valid transaction duration is a positive non zero number that does not exceed 120 seconds\n */\nStatus.InvalidTransactionDuration = new Status(6);\n\n/**\n * The transaction signature is not valid\n */\nStatus.InvalidSignature = new Status(7);\n\n/**\n * Transaction memo size exceeded 100 bytes\n */\nStatus.MemoTooLong = new Status(8);\n\n/**\n * The fee provided in the transaction is insufficient for this type of transaction\n */\nStatus.InsufficientTxFee = new Status(9);\n\n/**\n * The payer account has insufficient cryptocurrency to pay the transaction fee\n */\nStatus.InsufficientPayerBalance = new Status(10);\n\n/**\n * This transaction ID is a duplicate of one that was submitted to this node or reached consensus\n * in the last 180 seconds (receipt period)\n */\nStatus.DuplicateTransaction = new Status(11);\n\n/**\n * If API is throttled out\n */\nStatus.Busy = new Status(12);\n\n/**\n * The API is not currently supported\n */\nStatus.NotSupported = new Status(13);\n\n/**\n * The file id is invalid or does not exist\n */\nStatus.InvalidFileId = new Status(14);\n\n/**\n * The account id is invalid or does not exist\n */\nStatus.InvalidAccountId = new Status(15);\n\n/**\n * The contract id is invalid or does not exist\n */\nStatus.InvalidContractId = new Status(16);\n\n/**\n * Transaction id is not valid\n */\nStatus.InvalidTransactionId = new Status(17);\n\n/**\n * Receipt for given transaction id does not exist\n */\nStatus.ReceiptNotFound = new Status(18);\n\n/**\n * Record for given transaction id does not exist\n */\nStatus.RecordNotFound = new Status(19);\n\n/**\n * The solidity id is invalid or entity with this solidity id does not exist\n */\nStatus.InvalidSolidityId = new Status(20);\n\n/**\n * The responding node has submitted the transaction to the network. Its final status is still\n * unknown.\n */\nStatus.Unknown = new Status(21);\n\n/**\n * The transaction succeeded\n */\nStatus.Success = new Status(22);\n\n/**\n * There was a system error and the transaction failed because of invalid request parameters.\n */\nStatus.FailInvalid = new Status(23);\n\n/**\n * There was a system error while performing fee calculation, reserved for future.\n */\nStatus.FailFee = new Status(24);\n\n/**\n * There was a system error while performing balance checks, reserved for future.\n */\nStatus.FailBalance = new Status(25);\n\n/**\n * Key not provided in the transaction body\n */\nStatus.KeyRequired = new Status(26);\n\n/**\n * Unsupported algorithm/encoding used for keys in the transaction\n */\nStatus.BadEncoding = new Status(27);\n\n/**\n * When the account balance is not sufficient for the transfer\n */\nStatus.InsufficientAccountBalance = new Status(28);\n\n/**\n * During an update transaction when the system is not able to find the Users Solidity address\n */\nStatus.InvalidSolidityAddress = new Status(29);\n\n/**\n * Not enough gas was supplied to execute transaction\n */\nStatus.InsufficientGas = new Status(30);\n\n/**\n * contract byte code size is over the limit\n */\nStatus.ContractSizeLimitExceeded = new Status(31);\n\n/**\n * local execution (query) is requested for a function which changes state\n */\nStatus.LocalCallModificationException = new Status(32);\n\n/**\n * Contract REVERT OPCODE executed\n */\nStatus.ContractRevertExecuted = new Status(33);\n\n/**\n * For any contract execution related error not handled by specific error codes listed above.\n */\nStatus.ContractExecutionException = new Status(34);\n\n/**\n * In Query validation, account with +ve(amount) value should be Receiving node account, the\n * receiver account should be only one account in the list\n */\nStatus.InvalidReceivingNodeAccount = new Status(35);\n\n/**\n * Header is missing in Query request\n */\nStatus.MissingQueryHeader = new Status(36);\n\n/**\n * The update of the account failed\n */\nStatus.AccountUpdateFailed = new Status(37);\n\n/**\n * Provided key encoding was not supported by the system\n */\nStatus.InvalidKeyEncoding = new Status(38);\n\n/**\n * null solidity address\n */\nStatus.NullSolidityAddress = new Status(39);\n\n/**\n * update of the contract failed\n */\nStatus.ContractUpdateFailed = new Status(40);\n\n/**\n * the query header is invalid\n */\nStatus.InvalidQueryHeader = new Status(41);\n\n/**\n * Invalid fee submitted\n */\nStatus.InvalidFeeSubmitted = new Status(42);\n\n/**\n * Payer signature is invalid\n */\nStatus.InvalidPayerSignature = new Status(43);\n\n/**\n * The keys were not provided in the request.\n */\nStatus.KeyNotProvided = new Status(44);\n\n/**\n * Expiration time provided in the transaction was invalid.\n */\nStatus.InvalidExpirationTime = new Status(45);\n\n/**\n * WriteAccess Control Keys are not provided for the file\n */\nStatus.NoWaclKey = new Status(46);\n\n/**\n * The contents of file are provided as empty.\n */\nStatus.FileContentEmpty = new Status(47);\n\n/**\n * The crypto transfer credit and debit do not sum equal to 0\n */\nStatus.InvalidAccountAmounts = new Status(48);\n\n/**\n * Transaction body provided is empty\n */\nStatus.EmptyTransactionBody = new Status(49);\n\n/**\n * Invalid transaction body provided\n */\nStatus.InvalidTransactionBody = new Status(50);\n\n/**\n * the type of key (base ed25519 key, KeyList, or ThresholdKey) does not match the type of\n * signature (base ed25519 signature, SignatureList, or ThresholdKeySignature)\n */\nStatus.InvalidSignatureTypeMismatchingKey = new Status(51);\n\n/**\n * the number of key (KeyList, or ThresholdKey) does not match that of signature (SignatureList,\n * or ThresholdKeySignature). e.g. if a keyList has 3 base keys, then the corresponding\n * signatureList should also have 3 base signatures.\n */\nStatus.InvalidSignatureCountMismatchingKey = new Status(52);\n\n/**\n * the livehash body is empty\n */\nStatus.EmptyLiveHashBody = new Status(53);\n\n/**\n * the livehash data is missing\n */\nStatus.EmptyLiveHash = new Status(54);\n\n/**\n * the keys for a livehash are missing\n */\nStatus.EmptyLiveHashKeys = new Status(55);\n\n/**\n * the livehash data is not the output of a SHA-384 digest\n */\nStatus.InvalidLiveHashSize = new Status(56);\n\n/**\n * the query body is empty\n */\nStatus.EmptyQueryBody = new Status(57);\n\n/**\n * the crypto livehash query is empty\n */\nStatus.EmptyLiveHashQuery = new Status(58);\n\n/**\n * the livehash is not present\n */\nStatus.LiveHashNotFound = new Status(59);\n\n/**\n * the account id passed has not yet been created.\n */\nStatus.AccountIdDoesNotExist = new Status(60);\n\n/**\n * the livehash already exists for a given account\n */\nStatus.LiveHashAlreadyExists = new Status(61);\n\n/**\n * File WACL keys are invalid\n */\nStatus.InvalidFileWacl = new Status(62);\n\n/**\n * Serialization failure\n */\nStatus.SerializationFailed = new Status(63);\n\n/**\n * The size of the Transaction is greater than transactionMaxBytes\n */\nStatus.TransactionOversize = new Status(64);\n\n/**\n * The Transaction has more than 50 levels\n */\nStatus.TransactionTooManyLayers = new Status(65);\n\n/**\n * Contract is marked as deleted\n */\nStatus.ContractDeleted = new Status(66);\n\n/**\n * the platform node is either disconnected or lagging behind.\n */\nStatus.PlatformNotActive = new Status(67);\n\n/**\n * one public key matches more than one prefixes on the signature map\n */\nStatus.KeyPrefixMismatch = new Status(68);\n\n/**\n * transaction not created by platform due to large backlog\n */\nStatus.PlatformTransactionNotCreated = new Status(69);\n\n/**\n * auto renewal period is not a positive number of seconds\n */\nStatus.InvalidRenewalPeriod = new Status(70);\n\n/**\n * the response code when a smart contract id is passed for a crypto API request\n */\nStatus.InvalidPayerAccountId = new Status(71);\n\n/**\n * the account has been marked as deleted\n */\nStatus.AccountDeleted = new Status(72);\n\n/**\n * the file has been marked as deleted\n */\nStatus.FileDeleted = new Status(73);\n\n/**\n * same accounts repeated in the transfer account list\n */\nStatus.AccountRepeatedInAccountAmounts = new Status(74);\n\n/**\n * attempting to set negative balance value for crypto account\n */\nStatus.SettingNegativeAccountBalance = new Status(75);\n\n/**\n * when deleting smart contract that has crypto balance either transfer account or transfer smart\n * contract is required\n */\nStatus.ObtainerRequired = new Status(76);\n\n/**\n * when deleting smart contract that has crypto balance you can not use the same contract id as\n * transferContractId as the one being deleted\n */\nStatus.ObtainerSameContractId = new Status(77);\n\n/**\n * transferAccountId or transferContractId specified for contract delete does not exist\n */\nStatus.ObtainerDoesNotExist = new Status(78);\n\n/**\n * attempting to modify (update or delete a immutable smart contract, i.e. one created without a\n * admin key)\n */\nStatus.ModifyingImmutableContract = new Status(79);\n\n/**\n * Unexpected exception thrown by file system functions\n */\nStatus.FileSystemException = new Status(80);\n\n/**\n * the duration is not a subset of [MINIMUM_AUTORENEW_DURATION,MAXIMUM_AUTORENEW_DURATION]\n */\nStatus.AutorenewDurationNotInRange = new Status(81);\n\n/**\n * Decoding the smart contract binary to a byte array failed. Check that the input is a valid hex\n * string.\n */\nStatus.ErrorDecodingBytestring = new Status(82);\n\n/**\n * File to create a smart contract was of length zero\n */\nStatus.ContractFileEmpty = new Status(83);\n\n/**\n * Bytecode for smart contract is of length zero\n */\nStatus.ContractBytecodeEmpty = new Status(84);\n\n/**\n * Attempt to set negative initial balance\n */\nStatus.InvalidInitialBalance = new Status(85);\n\n/**\n * [Deprecated]. attempt to set negative receive record threshold\n */\nStatus.InvalidReceiveRecordThreshold = new Status(86);\n\n/**\n * [Deprecated]. attempt to set negative send record threshold\n */\nStatus.InvalidSendRecordThreshold = new Status(87);\n\n/**\n * Special Account Operations should be performed by only Genesis account, return this code if it\n * is not Genesis Account\n */\nStatus.AccountIsNotGenesisAccount = new Status(88);\n\n/**\n * The fee payer account doesn't have permission to submit such Transaction\n */\nStatus.PayerAccountUnauthorized = new Status(89);\n\n/**\n * FreezeTransactionBody is invalid\n */\nStatus.InvalidFreezeTransactionBody = new Status(90);\n\n/**\n * FreezeTransactionBody does not exist\n */\nStatus.FreezeTransactionBodyNotFound = new Status(91);\n\n/**\n * Exceeded the number of accounts (both from and to) allowed for crypto transfer list\n */\nStatus.TransferListSizeLimitExceeded = new Status(92);\n\n/**\n * Smart contract result size greater than specified maxResultSize\n */\nStatus.ResultSizeLimitExceeded = new Status(93);\n\n/**\n * The payer account is not a special account(account 0.0.55)\n */\nStatus.NotSpecialAccount = new Status(94);\n\n/**\n * Negative gas was offered in smart contract call\n */\nStatus.ContractNegativeGas = new Status(95);\n\n/**\n * Negative value / initial balance was specified in a smart contract call / create\n */\nStatus.ContractNegativeValue = new Status(96);\n\n/**\n * Failed to update fee file\n */\nStatus.InvalidFeeFile = new Status(97);\n\n/**\n * Failed to update exchange rate file\n */\nStatus.InvalidExchangeRateFile = new Status(98);\n\n/**\n * Payment tendered for contract local call cannot cover both the fee and the gas\n */\nStatus.InsufficientLocalCallGas = new Status(99);\n\n/**\n * Entities with Entity ID below 1000 are not allowed to be deleted\n */\nStatus.EntityNotAllowedToDelete = new Status(100);\n\n/**\n * Violating one of these rules: 1) treasury account can update all entities below 0.0.1000, 2)\n * account 0.0.50 can update all entities from 0.0.51 - 0.0.80, 3) Network Function Master Account\n * A/c 0.0.50 - Update all Network Function accounts & perform all the Network Functions listed\n * below, 4) Network Function Accounts: i) A/c 0.0.55 - Update Address Book files (0.0.101/102),\n * ii) A/c 0.0.56 - Update Fee schedule (0.0.111), iii) A/c 0.0.57 - Update Exchange Rate\n * (0.0.112).\n */\nStatus.AuthorizationFailed = new Status(101);\n\n/**\n * Fee Schedule Proto uploaded but not valid (append or update is required)\n */\nStatus.FileUploadedProtoInvalid = new Status(102);\n\n/**\n * Fee Schedule Proto uploaded but not valid (append or update is required)\n */\nStatus.FileUploadedProtoNotSavedToDisk = new Status(103);\n\n/**\n * Fee Schedule Proto File Part uploaded\n */\nStatus.FeeScheduleFilePartUploaded = new Status(104);\n\n/**\n * The change on Exchange Rate exceeds Exchange_Rate_Allowed_Percentage\n */\nStatus.ExchangeRateChangeLimitExceeded = new Status(105);\n\n/**\n * Contract permanent storage exceeded the currently allowable limit\n */\nStatus.MaxContractStorageExceeded = new Status(106);\n\n/**\n * Transfer Account should not be same as Account to be deleted\n */\nStatus.TransferAccountSameAsDeleteAccount = new Status(107);\n\nStatus.TotalLedgerBalanceInvalid = new Status(108);\n/**\n * The expiration date/time on a smart contract may not be reduced\n */\nStatus.ExpirationReductionNotAllowed = new Status(110);\n\n/**\n * Gas exceeded currently allowable gas limit per transaction\n */\nStatus.MaxGasLimitExceeded = new Status(111);\n\n/**\n * File size exceeded the currently allowable limit\n */\nStatus.MaxFileSizeExceeded = new Status(112);\n\n/**\n * When a valid signature is not provided for operations on account with receiverSigRequired=true\n */\nStatus.ReceiverSigRequired = new Status(113);\n\n/**\n * The Topic ID specified is not in the system.\n */\nStatus.InvalidTopicId = new Status(150);\n\n/**\n * A provided admin key was invalid.\n */\nStatus.InvalidAdminKey = new Status(155);\n\n/**\n * A provided submit key was invalid.\n */\nStatus.InvalidSubmitKey = new Status(156);\n\n/**\n * An attempted operation was not authorized (ie - a deleteTopic for a topic with no adminKey).\n */\nStatus.Unauthorized = new Status(157);\n\n/**\n * A ConsensusService message is empty.\n */\nStatus.InvalidTopicMessage = new Status(158);\n\n/**\n * The autoRenewAccount specified is not a valid, active account.\n */\nStatus.InvalidAutorenewAccount = new Status(159);\n\n/**\n * An adminKey was not specified on the topic, so there must not be an autoRenewAccount.\n */\nStatus.AutorenewAccountNotAllowed = new Status(160);\n\n/**\n * The topic has expired, was not automatically renewed, and is in a 7 day grace period before the\n * topic will be deleted unrecoverably. This error response code will not be returned until\n * autoRenew functionality is supported by HAPI.\n */\nStatus.TopicExpired = new Status(162);\n\n/**\n * chunk number must be from 1 to total (chunks) inclusive.\n */\nStatus.InvalidChunkNumber = new Status(163);\n\n/**\n * For every chunk, the payer account that is part of initialTransactionID must match the Payer\n * Account of this transaction. The entire initialTransactionID should match the transactionID of\n * the first chunk, but this is not checked or enforced by Hedera except when the chunk number is 1.\n */\nStatus.InvalidChunkTransactionId = new Status(164);\n\n/**\n * Account is frozen and cannot transact with the token\n */\nStatus.AccountFrozenForToken = new Status(165);\n\n/**\n * An involved account already has more than <tt>tokens.maxPerAccount</tt> associations with\n * non-deleted tokens.\n */\nStatus.TokensPerAccountLimitExceeded = new Status(166);\n\n/**\n * The token is invalid or does not exist\n */\nStatus.InvalidTokenId = new Status(167);\n\n/**\n * Invalid token decimals\n */\nStatus.InvalidTokenDecimals = new Status(168);\n\n/**\n * Invalid token initial supply\n */\nStatus.InvalidTokenInitialSupply = new Status(169);\n\n/**\n * Treasury Account does not exist or is deleted\n */\nStatus.InvalidTreasuryAccountForToken = new Status(170);\n\n/**\n * Token Symbol is not UTF-8 capitalized alphabetical string\n */\nStatus.InvalidTokenSymbol = new Status(171);\n\n/**\n * Freeze key is not set on token\n */\nStatus.TokenHasNoFreezeKey = new Status(172);\n\n/**\n * Amounts in transfer list are not net zero\n */\nStatus.TransfersNotZeroSumForToken = new Status(173);\n\n/**\n * A token symbol was not provided\n */\nStatus.MissingTokenSymbol = new Status(174);\n\n/**\n * The provided token symbol was too long\n */\nStatus.TokenSymbolTooLong = new Status(175);\n\n/**\n * KYC must be granted and account does not have KYC granted\n */\nStatus.AccountKycNotGrantedForToken = new Status(176);\n\n/**\n * KYC key is not set on token\n */\nStatus.TokenHasNoKycKey = new Status(177);\n\n/**\n * Token balance is not sufficient for the transaction\n */\nStatus.InsufficientTokenBalance = new Status(178);\n\n/**\n * Token transactions cannot be executed on deleted token\n */\nStatus.TokenWasDeleted = new Status(179);\n\n/**\n * Supply key is not set on token\n */\nStatus.TokenHasNoSupplyKey = new Status(180);\n\n/**\n * Wipe key is not set on token\n */\nStatus.TokenHasNoWipeKey = new Status(181);\n\n/**\n * The requested token mint amount would cause an invalid total supply\n */\nStatus.InvalidTokenMintAmount = new Status(182);\n\n/**\n * The requested token burn amount would cause an invalid total supply\n */\nStatus.InvalidTokenBurnAmount = new Status(183);\n\n/**\n * A required token-account relationship is missing\n */\nStatus.TokenNotAssociatedToAccount = new Status(184);\n\n/**\n * The target of a wipe operation was the token treasury account\n */\nStatus.CannotWipeTokenTreasuryAccount = new Status(185);\n\n/**\n * The provided KYC key was invalid.\n */\nStatus.InvalidKycKey = new Status(186);\n\n/**\n * The provided wipe key was invalid.\n */\nStatus.InvalidWipeKey = new Status(187);\n\n/**\n * The provided freeze key was invalid.\n */\nStatus.InvalidFreezeKey = new Status(188);\n\n/**\n * The provided supply key was invalid.\n */\nStatus.InvalidSupplyKey = new Status(189);\n\n/**\n * Token Name is not provided\n */\nStatus.MissingTokenName = new Status(190);\n\n/**\n * Token Name is too long\n */\nStatus.TokenNameTooLong = new Status(191);\n\n/**\n * The provided wipe amount must not be negative, zero or bigger than the token holder balance\n */\nStatus.InvalidWipingAmount = new Status(192);\n\n/**\n * Token does not have Admin key set, thus update/delete transactions cannot be performed\n */\nStatus.TokenIsImmutable = new Status(193);\n\n/**\n * An <tt>associateToken</tt> operation specified a token already associated to the account\n */\nStatus.TokenAlreadyAssociatedToAccount = new Status(194);\n\n/**\n * An attempted operation is invalid until all token balances for the target account are zero\n */\nStatus.TransactionRequiresZeroTokenBalances = new Status(195);\n\n/**\n * An attempted operation is invalid because the account is a treasury\n */\nStatus.AccountIsTreasury = new Status(196);\n\n/**\n * Same TokenIDs present in the token list\n */\nStatus.TokenIdRepeatedInTokenList = new Status(197);\n\n/**\n * Exceeded the number of token transfers (both from and to) allowed for token transfer list\n */\nStatus.TokenTransferListSizeLimitExceeded = new Status(198);\n\n/**\n * TokenTransfersTransactionBody has no TokenTransferList\n */\nStatus.EmptyTokenTransferBody = new Status(199);\n\n/**\n * TokenTransfersTransactionBody has a TokenTransferList with no AccountAmounts\n */\nStatus.EmptyTokenTransferAccountAmounts = new Status(200);\n\n/**\n * The Scheduled entity does not exist; or has now expired, been deleted, or been executed\n */\nStatus.InvalidScheduleId = new Status(201);\n\n/**\n * The Scheduled entity cannot be modified. Admin key not set\n */\nStatus.ScheduleIsImmutable = new Status(202);\n\n/**\n * The provided Scheduled Payer does not exist\n */\nStatus.InvalidSchedulePayerId = new Status(203);\n\n/**\n * The Schedule Create Transaction TransactionID account does not exist\n */\nStatus.InvalidScheduleAccountId = new Status(204);\n\n/**\n * The provided sig map did not contain any new valid signatures from required signers of the\n * scheduled transaction\n */\nStatus.NoNewValidSignatures = new Status(205);\n\n/**\n * The required signers for a scheduled transaction cannot be resolved, for example because they do\n * not exist or have been deleted\n */\nStatus.UnresolvableRequiredSigners = new Status(206);\n\n/**\n * Only whitelisted transaction types may be scheduled\n */\nStatus.ScheduledTransactionNotInWhitelist = new Status(207);\n\n/**\n * At least one of the signatures in the provided sig map did not represent a valid signature for\n * any required signer\n */\nStatus.SomeSignaturesWereInvalid = new Status(208);\n\n/**\n * The scheduled field in the TransactionID may not be set to true\n */\nStatus.TransactionIdFieldNotAllowed = new Status(209);\n\n/**\n * A schedule already exists with the same identifying fields of an attempted ScheduleCreate (that\n * is, all fields other than scheduledPayerAccountID)\n */\nStatus.IdenticalScheduleAlreadyCreated = new Status(210);\n\n/**\n * A string field in the transaction has a UTF-8 encoding with the prohibited zero byte\n */\nStatus.InvalidZeroByteInString = new Status(211);\n\n/**\n * A schedule being signed or deleted has already been deleted\n */\nStatus.ScheduleAlreadyDeleted = new Status(212);\n\n/**\n * A schedule being signed or deleted has already been executed\n */\nStatus.ScheduleAlreadyExecuted = new Status(213);\n\n/**\n * ConsensusSubmitMessage request's message size is larger than allowed.\n */\nStatus.MessageSizeTooLarge = new Status(214);\n\n/**\n * An operation was assigned to more than one throttle group in a given bucket\n */\nStatus.OperationRepeatedInBucketGroups = new Status(215);\n\n/**\n * The capacity needed to satisfy all opsPerSec groups in a bucket overflowed a signed 8-byte\n * integral type\n */\nStatus.BucketCapacityOverflow = new Status(216);\n\n/**\n * Given the network size in the address book, the node-level capacity for an operation would never\n * be enough to accept a single request; usually means a bucket burstPeriod should be increased\n */\nStatus.NodeCapacityNotSufficientForOperation = new Status(217);\n\n/**\n * A bucket was defined without any throttle groups\n */\nStatus.BucketHasNoThrottleGroups = new Status(218);\n\n/**\n * A throttle group was granted zero opsPerSec\n */\nStatus.ThrottleGroupHasZeroOpsPerSec = new Status(219);\n\n/**\n * The throttle definitions file was updated, but some supported operations were not assigned a\n * bucket\n */\nStatus.SuccessButMissingExpectedOperation = new Status(220);\n\n/**\n * The new contents for the throttle definitions system file were not valid protobuf\n */\nStatus.UnparseableThrottleDefinitions = new Status(221);\n\n/**\n * The new throttle definitions system file were invalid, and no more specific error could be\n * divined\n */\nStatus.InvalidThrottleDefinitions = new Status(222);\n\n/**\n * The transaction references an account which has passed its expiration without renewal funds\n * available, and currently remains in the ledger only because of the grace period given to expired\n * entities\n */\nStatus.AccountExpiredAndPendingRemoval = new Status(223);\n\n/**\n * Invalid token max supply\n */\nStatus.InvalidTokenMaxSupply = new Status(224);\n\n/**\n * Invalid token nft serial number\n */\nStatus.InvalidTokenNftSerialNumber = new Status(225);\n\n/**\n * Invalid nft id\n */\nStatus.InvalidNftId = new Status(226);\n\n/**\n * Nft metadata is too long\n */\nStatus.MetadataTooLong = new Status(227);\n\n/**\n * Repeated operations count exceeds the limit\n */\nStatus.BatchSizeLimitExceeded = new Status(228);\n\n/**\n * The range of data to be gathered is out of the set boundaries\n */\nStatus.InvalidQueryRange = new Status(229);\n\n/**\n * A custom fractional fee set a denominator of zero\n */\nStatus.FractionDividesByZero = new Status(230);\n\n/**\n * The transaction payer could not afford a custom fee\n */\nStatus.InsufficientPayerBalanceForCustomFee = new Status(231);\n\n/**\n * More than 10 custom fees were specified\n */\nStatus.CustomFeesListTooLong = new Status(232);\n\n/**\n * Any of the feeCollector accounts for customFees is invalid\n */\nStatus.InvalidCustomFeeCollector = new Status(233);\n\n/**\n * Any of the token Ids in customFees is invalid\n */\nStatus.InvalidTokenIdInCustomFees = new Status(234);\n\n/**\n * Any of the token Ids in customFees are not associated to feeCollector\n */\nStatus.TokenNotAssociatedToFeeCollector = new Status(235);\n\n/**\n * A token cannot have more units minted due to its configured supply ceiling\n */\nStatus.TokenMaxSupplyReached = new Status(236);\n\n/**\n * The transaction attempted to move an NFT serial number from an account other than its owner\n */\nStatus.SenderDoesNotOwnNftSerialNo = new Status(237);\n\n/**\n * A custom fee schedule entry did not specify either a fixed or fractional fee\n */\nStatus.CustomFeeNotFullySpecified = new Status(238);\n\n/**\n * Only positive fees may be assessed at this time\n */\nStatus.CustomFeeMustBePositive = new Status(239);\n\n/**\n * Fee schedule key is not set on token\n */\nStatus.TokenHasNoFeeScheduleKey = new Status(240);\n\n/**\n * A fractional custom fee exceeded the range of a 64-bit signed integer\n */\nStatus.CustomFeeOutsideNumericRange = new Status(241);\n\n/**\n * A royalty cannot exceed the total fungible value exchanged for an NFT\n */\nStatus.RoyaltyFractionCannotExceedOne = new Status(242);\n\n/**\n * Each fractional custom fee must have its maximum_amount, if specified, at least its\n * minimum_amount\n */\nStatus.FractionalFeeMaxAmountLessThanMinAmount = new Status(243);\n\n/**\n * A fee schedule update tried to clear the custom fees from a token whose fee schedule was already\n * empty\n */\nStatus.CustomScheduleAlreadyHasNoFees = new Status(244);\n\n/**\n * Only tokens of type FUNGIBLE_COMMON can be used to as fee schedule denominations\n */\nStatus.CustomFeeDenominationMustBeFungibleCommon = new Status(245);\n\n/**\n * Only tokens of type FUNGIBLE_COMMON can have fractional fees\n */\nStatus.CustomFractionalFeeOnlyAllowedForFungibleCommon = new Status(246);\n\n/**\n * The provided custom fee schedule key was invalid\n */\nStatus.InvalidCustomFeeScheduleKey = new Status(247);\n\n/**\n * The requested token mint metadata was invalid\n */\nStatus.InvalidTokenMintMetadata = new Status(248);\n\n/**\n * The requested token burn metadata was invalid\n */\nStatus.InvalidTokenBurnMetadata = new Status(249);\n\n/**\n * The treasury for a unique token cannot be changed until it owns no NFTs\n */\nStatus.CurrentTreasuryStillOwnsNfts = new Status(250);\n\n/**\n * An account cannot be dissociated from a unique token if it owns NFTs for the token\n */\nStatus.AccountStillOwnsNfts = new Status(251);\n\n/**\n * A NFT can only be burned when owned by the unique token's treasury\n */\nStatus.TreasuryMustOwnBurnedNft = new Status(252);\n\n/**\n * An account did not own the NFT to be wiped\n */\nStatus.AccountDoesNotOwnWipedNft = new Status(253);\n\n/**\n * An AccountAmount token transfers list referenced a token type other than FUNGIBLE_COMMON\n */\nStatus.AccountAmountTransfersOnlyAllowedForFungibleCommon = new Status(254);\n\n/**\n * All the NFTs allowed in the current price regime have already been minted\n */\nStatus.MaxNftsInPriceRegimeHaveBeenMinted = new Status(255);\n\n/**\n * The payer account has been marked as deleted\n */\nStatus.PayerAccountDeleted = new Status(256);\n\n/**\n * The reference chain of custom fees for a transferred token exceeded the maximum length of 2\n */\nStatus.CustomFeeChargingExceededMaxRecursionDepth = new Status(257);\n\n/**\n * More than 20 balance adjustments were to satisfy a CryptoTransfer and its implied custom fee\n * payments\n */\nStatus.CustomFeeChargingExceededMaxAccountAmounts = new Status(258);\n\n/**\n * The sender account in the token transfer transaction could not afford a custom fee\n */\nStatus.InsufficientSenderAccountBalanceForCustomFee = new Status(259);\n\n/**\n * Currently no more than 4,294,967,295 NFTs may be minted for a given unique token type\n */\nStatus.SerialNumberLimitReached = new Status(260);\n\n/**\n * Only tokens of type NON_FUNGIBLE_UNIQUE can have royalty fees\n */\nStatus.CustomRoyaltyFeeOnlyAllowedForNonFungibleUnique = new Status(261);\n\n/**\n * The account has reached the limit on the automatic associations count.\n */\nStatus.NoRemainingAutomaticAssociations = new Status(262);\n\n/**\n * Already existing automatic associations are more than the new maximum automatic associations.\n */\nStatus.ExistingAutomaticAssociationsExceedGivenLimit = new Status(263);\n\n/**\n * Cannot set the number of automatic associations for an account more than the\n * maximum allowed token associations <tt>tokens.maxPerAccount</tt>\n */\nStatus.RequestedNumAutomaticAssociationsExceedsAssociationLimit = new Status(\n    264\n);\n\n/**\n * Token is paused. This Token cannot be a part of any kind of Transaction until unpaused.\n */\nStatus.TokenIsPaused = new Status(265);\n\n/**\n * Pause key is not set on token\n */\nStatus.TokenHasNoPauseKey = new Status(266);\n\n/**\n * The provided pause key was invalid\n */\nStatus.InvalidPauseKey = new Status(267);\n\n/**\n * The update file in a freeze transaction body must exist.\n */\nStatus.FreezeUpdateFileDoesNotExist = new Status(268);\n\n/**\n * The hash of the update file in a freeze transaction body must match the in-memory hash.\n */\nStatus.FreezeUpdateFileHashDoesNotMatch = new Status(269);\n\n/**\n * A FREEZE_UPGRADE transaction was handled with no previous update prepared.\n */\nStatus.NoUpgradeHasBeenPrepared = new Status(270);\n\n/**\n * A FREEZE_ABORT transaction was handled with no scheduled freeze.\n */\nStatus.NoFreezeIsScheduled = new Status(271);\n\n/**\n * The update file hash when handling a FREEZE_UPGRADE transaction differs from the file\n * hash at the time of handling the PREPARE_UPGRADE transaction.\n */\nStatus.UpdateFileHashChangedSincePrepareUpgrade = new Status(272);\n\n/**\n * The given freeze start time was in the (consensus) past.\n */\nStatus.FreezeStartTimeMustBeFuture = new Status(273);\n\n/**\n * The prepared update file cannot be updated or appended until either the upgrade has\n * been completed, or a FREEZE_ABORT has been handled.\n */\nStatus.PreparedUpdateFileIsImmutable = new Status(274);\n\n/**\n * Once a freeze is scheduled, it must be aborted before any other type of freeze can\n * can be performed.\n */\nStatus.FreezeAlreadyScheduled = new Status(275);\n\n/**\n * If an NMT upgrade has been prepared, the following operation must be a FREEZE_UPGRADE.\n * (To issue a FREEZE_ONLY, submit a FREEZE_ABORT first.)\n */\nStatus.FreezeUpgradeInProgress = new Status(276);\n\n/**\n * If an NMT upgrade has been prepared, the subsequent FREEZE_UPGRADE transaction must\n * confirm the id of the file to be used in the upgrade.\n */\nStatus.UpdateFileIdDoesNotMatchPrepared = new Status(277);\n\n/**\n * If an NMT upgrade has been prepared, the subsequent FREEZE_UPGRADE transaction must\n * confirm the hash of the file to be used in the upgrade.\n */\nStatus.UpdateFileHashDoesNotMatchPrepared = new Status(278);\n\n/**\n * Consensus throttle did not allow execution of this transaction. System is throttled at\n * consensus level.\n */\nStatus.ConsensusGasExhausted = new Status(279);\n\n/**\n * A precompiled contract succeeded, but was later reverted.\n */\nStatus.RevertedSuccess = new Status(280);\n\n/**\n * All contract storage allocated to the current price regime has been consumed.\n */\nStatus.MaxStorageInPriceRegimeHasBeenUsed = new Status(281);\n\n/**\n * An alias used in a CryptoTransfer transaction is not the serialization of a primitive Key\n * message--that is, a Key with a single Ed25519 or ECDSA(secp256k1) public key and no\n * unknown protobuf fields.\n */\nStatus.InvalidAliasKey = new Status(282);\n\n/**\n * A fungible token transfer expected a different number of decimals than the involved\n * type actually has.\n */\nStatus.UnexpectedTokenDecimals = new Status(283);\n"]},"metadata":{},"sourceType":"module"}