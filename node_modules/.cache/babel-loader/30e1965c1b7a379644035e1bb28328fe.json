{"ast":null,"code":"import AccountId from \"../account/AccountId.js\";\nimport Transaction, { DEFAULT_AUTO_RENEW_PERIOD, TRANSACTION_REGISTRY } from \"../transaction/Transaction.js\";\nimport Duration from \"../Duration.js\";\nimport Key from \"../Key.js\";\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").IConsensusCreateTopicTransactionBody} proto.IConsensusCreateTopicTransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransaction} proto.ITransaction\n * @typedef {import(\"@hashgraph/proto\").ISignedTransaction} proto.ISignedTransaction\n * @typedef {import(\"@hashgraph/proto\").TransactionBody} proto.TransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionBody} proto.ITransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionResponse} proto.ITransactionResponse\n */\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n * @typedef {import(\"../transaction/TransactionId.js\").default} TransactionId\n */\n\n/**\n * Create a topic to be used for consensus.\n */\n\nexport default class TopicCreateTransaction extends Transaction {\n  /**\n   * @param {object} props\n   * @param {Key} [props.adminKey]\n   * @param {Key} [props.submitKey]\n   * @param {Duration | Long | number} [props.autoRenewPeriod]\n   * @param {AccountId | string} [props.autoRenewAccountId]\n   * @param {string} [props.topicMemo]\n   */\n  constructor() {\n    let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super();\n    /**\n     * @private\n     * @type {?Key}\n     */\n\n    this._adminKey = null;\n    /**\n     * @private\n     * @type {?Key}\n     */\n\n    this._submitKey = null;\n    /**\n     * @private\n     * @type {?AccountId}\n     */\n\n    this._autoRenewAccountId = null;\n    /**\n     * @private\n     * @type {Duration}\n     */\n\n    this._autoRenewPeriod = new Duration(DEFAULT_AUTO_RENEW_PERIOD);\n    /**\n     * @private\n     * @type {?string}\n     */\n\n    this._topicMemo = null;\n\n    if (props.adminKey != null) {\n      this.setAdminKey(props.adminKey);\n    }\n\n    if (props.submitKey != null) {\n      this.setSubmitKey(props.submitKey);\n    }\n\n    if (props.autoRenewAccountId != null) {\n      this.setAutoRenewAccountId(props.autoRenewAccountId);\n    }\n\n    if (props.autoRenewPeriod != null) {\n      this.setAutoRenewPeriod(props.autoRenewPeriod);\n    }\n\n    if (props.topicMemo != null) {\n      this.setTopicMemo(props.topicMemo);\n    }\n  }\n  /**\n   * @internal\n   * @param {proto.ITransaction[]} transactions\n   * @param {proto.ISignedTransaction[]} signedTransactions\n   * @param {TransactionId[]} transactionIds\n   * @param {AccountId[]} nodeIds\n   * @param {proto.ITransactionBody[]} bodies\n   * @returns {TopicCreateTransaction}\n   */\n\n\n  static _fromProtobuf(transactions, signedTransactions, transactionIds, nodeIds, bodies) {\n    const body = bodies[0];\n    const create =\n    /** @type {proto.IConsensusCreateTopicTransactionBody} */\n    body.consensusCreateTopic;\n    return Transaction._fromProtobufTransactions(new TopicCreateTransaction({\n      adminKey: create.adminKey != null ? Key._fromProtobufKey(create.adminKey) : undefined,\n      submitKey: create.submitKey != null ? Key._fromProtobufKey(create.submitKey) : undefined,\n      autoRenewAccountId: create.autoRenewAccount != null ? AccountId._fromProtobuf(create.autoRenewAccount) : undefined,\n      autoRenewPeriod: create.autoRenewPeriod != null ? create.autoRenewPeriod.seconds != null ? create.autoRenewPeriod.seconds : undefined : undefined,\n      topicMemo: create.memo != null ? create.memo : undefined\n    }), transactions, signedTransactions, transactionIds, nodeIds, bodies);\n  }\n  /**\n   * @returns {?string}\n   */\n\n\n  get topicMemo() {\n    return this._topicMemo;\n  }\n  /**\n   * @param {string} topicMemo\n   * @returns {this}\n   */\n\n\n  setTopicMemo(topicMemo) {\n    this._requireNotFrozen();\n\n    this._topicMemo = topicMemo;\n    return this;\n  }\n  /**\n   * @returns {?Key}\n   */\n\n\n  get adminKey() {\n    return this._adminKey;\n  }\n  /**\n   * @param {Key} adminKey\n   * @returns {this}\n   */\n\n\n  setAdminKey(adminKey) {\n    this._requireNotFrozen();\n\n    this._adminKey = adminKey;\n    return this;\n  }\n  /**\n   * @returns {?Key}\n   */\n\n\n  get submitKey() {\n    return this._submitKey;\n  }\n  /**\n   * @param {Key} submitKey\n   * @returns {this}\n   */\n\n\n  setSubmitKey(submitKey) {\n    this._requireNotFrozen();\n\n    this._submitKey = submitKey;\n    return this;\n  }\n  /**\n   * @returns {?AccountId}\n   */\n\n\n  get autoRenewAccountId() {\n    return this._autoRenewAccountId;\n  }\n  /**\n   * @param {AccountId | string} autoRenewAccountId\n   * @returns {this}\n   */\n\n\n  setAutoRenewAccountId(autoRenewAccountId) {\n    this._requireNotFrozen();\n\n    this._autoRenewAccountId = autoRenewAccountId instanceof AccountId ? autoRenewAccountId : AccountId.fromString(autoRenewAccountId);\n    return this;\n  }\n  /**\n   * @returns {Duration}\n   */\n\n\n  get autoRenewPeriod() {\n    return this._autoRenewPeriod;\n  }\n  /**\n   * Set the auto renew period for this account.\n   *\n   * @param {Duration | Long | number} autoRenewPeriod\n   * @returns {this}\n   */\n\n\n  setAutoRenewPeriod(autoRenewPeriod) {\n    this._requireNotFrozen();\n\n    this._autoRenewPeriod = autoRenewPeriod instanceof Duration ? autoRenewPeriod : new Duration(autoRenewPeriod);\n    return this;\n  }\n  /**\n   * @param {Client} client\n   */\n\n\n  _validateChecksums(client) {\n    if (this._autoRenewAccountId != null) {\n      this._autoRenewAccountId.validateChecksum(client);\n    }\n  }\n  /**\n   * @override\n   * @internal\n   * @param {Channel} channel\n   * @param {proto.ITransaction} request\n   * @returns {Promise<proto.ITransactionResponse>}\n   */\n\n\n  _execute(channel, request) {\n    return channel.consensus.createTopic(request);\n  }\n  /**\n   * @override\n   * @protected\n   * @returns {NonNullable<proto.TransactionBody[\"data\"]>}\n   */\n\n\n  _getTransactionDataCase() {\n    return \"consensusCreateTopic\";\n  }\n  /**\n   * @override\n   * @protected\n   * @returns {proto.IConsensusCreateTopicTransactionBody}\n   */\n\n\n  _makeTransactionData() {\n    return {\n      adminKey: this._adminKey != null ? this._adminKey._toProtobufKey() : null,\n      submitKey: this._submitKey != null ? this._submitKey._toProtobufKey() : null,\n      autoRenewAccount: this._autoRenewAccountId != null ? this._autoRenewAccountId._toProtobuf() : null,\n      autoRenewPeriod: this._autoRenewPeriod._toProtobuf(),\n      memo: this._topicMemo\n    };\n  }\n\n}\nTRANSACTION_REGISTRY.set(\"consensusCreateTopic\", // eslint-disable-next-line @typescript-eslint/unbound-method\nTopicCreateTransaction._fromProtobuf);","map":{"version":3,"sources":["C:/Work/coding-sandbox/react-again/dapp-days/node_modules/@hashgraph/sdk/src/topic/TopicCreateTransaction.js"],"names":["AccountId","Transaction","DEFAULT_AUTO_RENEW_PERIOD","TRANSACTION_REGISTRY","Duration","Key","TopicCreateTransaction","constructor","props","_adminKey","_submitKey","_autoRenewAccountId","_autoRenewPeriod","_topicMemo","adminKey","setAdminKey","submitKey","setSubmitKey","autoRenewAccountId","setAutoRenewAccountId","autoRenewPeriod","setAutoRenewPeriod","topicMemo","setTopicMemo","_fromProtobuf","transactions","signedTransactions","transactionIds","nodeIds","bodies","body","create","consensusCreateTopic","_fromProtobufTransactions","_fromProtobufKey","undefined","autoRenewAccount","seconds","memo","_requireNotFrozen","fromString","_validateChecksums","client","validateChecksum","_execute","channel","request","consensus","createTopic","_getTransactionDataCase","_makeTransactionData","_toProtobufKey","_toProtobuf","set"],"mappings":"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","sourcesContent":["import AccountId from \"../account/AccountId.js\";\nimport Transaction, {\n    DEFAULT_AUTO_RENEW_PERIOD,\n    TRANSACTION_REGISTRY,\n} from \"../transaction/Transaction.js\";\nimport Duration from \"../Duration.js\";\nimport Key from \"../Key.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").IConsensusCreateTopicTransactionBody} proto.IConsensusCreateTopicTransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransaction} proto.ITransaction\n * @typedef {import(\"@hashgraph/proto\").ISignedTransaction} proto.ISignedTransaction\n * @typedef {import(\"@hashgraph/proto\").TransactionBody} proto.TransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionBody} proto.ITransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionResponse} proto.ITransactionResponse\n */\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n * @typedef {import(\"../transaction/TransactionId.js\").default} TransactionId\n */\n\n/**\n * Create a topic to be used for consensus.\n */\nexport default class TopicCreateTransaction extends Transaction {\n    /**\n     * @param {object} props\n     * @param {Key} [props.adminKey]\n     * @param {Key} [props.submitKey]\n     * @param {Duration | Long | number} [props.autoRenewPeriod]\n     * @param {AccountId | string} [props.autoRenewAccountId]\n     * @param {string} [props.topicMemo]\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @private\n         * @type {?Key}\n         */\n        this._adminKey = null;\n\n        /**\n         * @private\n         * @type {?Key}\n         */\n        this._submitKey = null;\n\n        /**\n         * @private\n         * @type {?AccountId}\n         */\n        this._autoRenewAccountId = null;\n\n        /**\n         * @private\n         * @type {Duration}\n         */\n        this._autoRenewPeriod = new Duration(DEFAULT_AUTO_RENEW_PERIOD);\n\n        /**\n         * @private\n         * @type {?string}\n         */\n        this._topicMemo = null;\n\n        if (props.adminKey != null) {\n            this.setAdminKey(props.adminKey);\n        }\n\n        if (props.submitKey != null) {\n            this.setSubmitKey(props.submitKey);\n        }\n\n        if (props.autoRenewAccountId != null) {\n            this.setAutoRenewAccountId(props.autoRenewAccountId);\n        }\n\n        if (props.autoRenewPeriod != null) {\n            this.setAutoRenewPeriod(props.autoRenewPeriod);\n        }\n\n        if (props.topicMemo != null) {\n            this.setTopicMemo(props.topicMemo);\n        }\n    }\n\n    /**\n     * @internal\n     * @param {proto.ITransaction[]} transactions\n     * @param {proto.ISignedTransaction[]} signedTransactions\n     * @param {TransactionId[]} transactionIds\n     * @param {AccountId[]} nodeIds\n     * @param {proto.ITransactionBody[]} bodies\n     * @returns {TopicCreateTransaction}\n     */\n    static _fromProtobuf(\n        transactions,\n        signedTransactions,\n        transactionIds,\n        nodeIds,\n        bodies\n    ) {\n        const body = bodies[0];\n        const create =\n            /** @type {proto.IConsensusCreateTopicTransactionBody} */ (\n                body.consensusCreateTopic\n            );\n\n        return Transaction._fromProtobufTransactions(\n            new TopicCreateTransaction({\n                adminKey:\n                    create.adminKey != null\n                        ? Key._fromProtobufKey(create.adminKey)\n                        : undefined,\n                submitKey:\n                    create.submitKey != null\n                        ? Key._fromProtobufKey(create.submitKey)\n                        : undefined,\n                autoRenewAccountId:\n                    create.autoRenewAccount != null\n                        ? AccountId._fromProtobuf(create.autoRenewAccount)\n                        : undefined,\n                autoRenewPeriod:\n                    create.autoRenewPeriod != null\n                        ? create.autoRenewPeriod.seconds != null\n                            ? create.autoRenewPeriod.seconds\n                            : undefined\n                        : undefined,\n                topicMemo: create.memo != null ? create.memo : undefined,\n            }),\n            transactions,\n            signedTransactions,\n            transactionIds,\n            nodeIds,\n            bodies\n        );\n    }\n\n    /**\n     * @returns {?string}\n     */\n    get topicMemo() {\n        return this._topicMemo;\n    }\n\n    /**\n     * @param {string} topicMemo\n     * @returns {this}\n     */\n    setTopicMemo(topicMemo) {\n        this._requireNotFrozen();\n        this._topicMemo = topicMemo;\n\n        return this;\n    }\n\n    /**\n     * @returns {?Key}\n     */\n    get adminKey() {\n        return this._adminKey;\n    }\n\n    /**\n     * @param {Key} adminKey\n     * @returns {this}\n     */\n    setAdminKey(adminKey) {\n        this._requireNotFrozen();\n        this._adminKey = adminKey;\n\n        return this;\n    }\n\n    /**\n     * @returns {?Key}\n     */\n    get submitKey() {\n        return this._submitKey;\n    }\n\n    /**\n     * @param {Key} submitKey\n     * @returns {this}\n     */\n    setSubmitKey(submitKey) {\n        this._requireNotFrozen();\n        this._submitKey = submitKey;\n\n        return this;\n    }\n\n    /**\n     * @returns {?AccountId}\n     */\n    get autoRenewAccountId() {\n        return this._autoRenewAccountId;\n    }\n\n    /**\n     * @param {AccountId | string} autoRenewAccountId\n     * @returns {this}\n     */\n    setAutoRenewAccountId(autoRenewAccountId) {\n        this._requireNotFrozen();\n        this._autoRenewAccountId =\n            autoRenewAccountId instanceof AccountId\n                ? autoRenewAccountId\n                : AccountId.fromString(autoRenewAccountId);\n\n        return this;\n    }\n\n    /**\n     * @returns {Duration}\n     */\n    get autoRenewPeriod() {\n        return this._autoRenewPeriod;\n    }\n\n    /**\n     * Set the auto renew period for this account.\n     *\n     * @param {Duration | Long | number} autoRenewPeriod\n     * @returns {this}\n     */\n    setAutoRenewPeriod(autoRenewPeriod) {\n        this._requireNotFrozen();\n        this._autoRenewPeriod =\n            autoRenewPeriod instanceof Duration\n                ? autoRenewPeriod\n                : new Duration(autoRenewPeriod);\n\n        return this;\n    }\n\n    /**\n     * @param {Client} client\n     */\n    _validateChecksums(client) {\n        if (this._autoRenewAccountId != null) {\n            this._autoRenewAccountId.validateChecksum(client);\n        }\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {proto.ITransaction} request\n     * @returns {Promise<proto.ITransactionResponse>}\n     */\n    _execute(channel, request) {\n        return channel.consensus.createTopic(request);\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {NonNullable<proto.TransactionBody[\"data\"]>}\n     */\n    _getTransactionDataCase() {\n        return \"consensusCreateTopic\";\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {proto.IConsensusCreateTopicTransactionBody}\n     */\n    _makeTransactionData() {\n        return {\n            adminKey:\n                this._adminKey != null ? this._adminKey._toProtobufKey() : null,\n            submitKey:\n                this._submitKey != null\n                    ? this._submitKey._toProtobufKey()\n                    : null,\n            autoRenewAccount:\n                this._autoRenewAccountId != null\n                    ? this._autoRenewAccountId._toProtobuf()\n                    : null,\n            autoRenewPeriod: this._autoRenewPeriod._toProtobuf(),\n            memo: this._topicMemo,\n        };\n    }\n}\n\nTRANSACTION_REGISTRY.set(\n    \"consensusCreateTopic\",\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    TopicCreateTransaction._fromProtobuf\n);\n"]},"metadata":{},"sourceType":"module"}