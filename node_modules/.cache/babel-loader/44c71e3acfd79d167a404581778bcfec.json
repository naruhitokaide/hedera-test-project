{"ast":null,"code":"import * as entity_id from \"../EntityIdHelper.js\";\nimport * as proto from \"@hashgraph/proto\";\n/**\n * @typedef {import(\"long\").Long} Long\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n */\n\n/**\n * The ID for a crypto-currency file on Hedera.\n */\n\nexport default class FileId {\n  /**\n   * @param {number | Long | import(\"../EntityIdHelper\").IEntityId} props\n   * @param {(number | Long)=} realm\n   * @param {(number | Long)=} num\n   */\n  constructor(props, realm, num) {\n    const result = entity_id.constructor(props, realm, num);\n    this.shard = result.shard;\n    this.realm = result.realm;\n    this.num = result.num;\n    /**\n     * @type {string | null}\n     */\n\n    this._checksum = null;\n  }\n  /**\n   * @param {string} text\n   * @returns {FileId}\n   */\n\n\n  static fromString(text) {\n    const result = entity_id.fromString(text);\n    const id = new FileId(result);\n    id._checksum = result.checksum;\n    return id;\n  }\n  /**\n   * @internal\n   * @param {proto.IFileID} id\n   * @returns {FileId}\n   */\n\n\n  static _fromProtobuf(id) {\n    const fileId = new FileId(id.shardNum != null ? id.shardNum : 0, id.realmNum != null ? id.realmNum : 0, id.fileNum != null ? id.fileNum : 0);\n    return fileId;\n  }\n  /**\n   * @returns {string | null}\n   */\n\n\n  get checksum() {\n    return this._checksum;\n  }\n  /**\n   * @deprecated - Use `validateChecksum` instead\n   * @param {Client} client\n   */\n\n\n  validate(client) {\n    console.warn(\"Deprecated: Use `validateChecksum` instead\");\n    this.validateChecksum(client);\n  }\n  /**\n   * @param {Client} client\n   */\n\n\n  validateChecksum(client) {\n    entity_id.validateChecksum(this.shard, this.realm, this.num, this._checksum, client);\n  }\n  /**\n   * @param {Uint8Array} bytes\n   * @returns {FileId}\n   */\n\n\n  static fromBytes(bytes) {\n    return FileId._fromProtobuf(proto.FileID.decode(bytes));\n  }\n  /**\n   * @param {string} address\n   * @returns {FileId}\n   */\n\n\n  static fromSolidityAddress(address) {\n    const [shard, realm, file] = entity_id.fromSolidityAddress(address);\n    return new FileId(shard, realm, file);\n  }\n  /**\n   * @returns {string} solidity address\n   */\n\n\n  toSolidityAddress() {\n    return entity_id.toSolidityAddress([this.shard, this.realm, this.num]);\n  }\n  /**\n   * @internal\n   * @returns {proto.IFileID}\n   */\n\n\n  _toProtobuf() {\n    return {\n      fileNum: this.num,\n      shardNum: this.shard,\n      realmNum: this.realm\n    };\n  }\n  /**\n   * @returns {string}\n   */\n\n\n  toString() {\n    return `${this.shard.toString()}.${this.realm.toString()}.${this.num.toString()}`;\n  }\n  /**\n   * @param {Client} client\n   * @returns {string}\n   */\n\n\n  toStringWithChecksum(client) {\n    return entity_id.toStringWithChecksum(this.toString(), client);\n  }\n  /**\n   * @returns {Uint8Array}\n   */\n\n\n  toBytes() {\n    return proto.FileID.encode(this._toProtobuf()).finish();\n  }\n  /**\n   * @returns {FileId}\n   */\n\n\n  clone() {\n    const id = new FileId(this);\n    id._checksum = this._checksum;\n    return id;\n  }\n  /**\n   * @param {FileId} other\n   * @returns {number}\n   */\n\n\n  compare(other) {\n    return entity_id.compare([this.shard, this.realm, this.num], [other.shard, other.realm, other.num]);\n  }\n\n}","map":{"version":3,"sources":["C:/Work/coding-sandbox/react-again/dapp-days/node_modules/@hashgraph/sdk/src/file/FileId.js"],"names":["entity_id","proto","FileId","constructor","props","realm","num","result","shard","_checksum","fromString","text","id","checksum","_fromProtobuf","fileId","shardNum","realmNum","fileNum","validate","client","console","warn","validateChecksum","fromBytes","bytes","FileID","decode","fromSolidityAddress","address","file","toSolidityAddress","_toProtobuf","toString","toStringWithChecksum","toBytes","encode","finish","clone","compare","other"],"mappings":"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","sourcesContent":["import * as entity_id from \"../EntityIdHelper.js\";\nimport * as proto from \"@hashgraph/proto\";\n\n/**\n * @typedef {import(\"long\").Long} Long\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n */\n\n/**\n * The ID for a crypto-currency file on Hedera.\n */\nexport default class FileId {\n    /**\n     * @param {number | Long | import(\"../EntityIdHelper\").IEntityId} props\n     * @param {(number | Long)=} realm\n     * @param {(number | Long)=} num\n     */\n    constructor(props, realm, num) {\n        const result = entity_id.constructor(props, realm, num);\n\n        this.shard = result.shard;\n        this.realm = result.realm;\n        this.num = result.num;\n\n        /**\n         * @type {string | null}\n         */\n        this._checksum = null;\n    }\n\n    /**\n     * @param {string} text\n     * @returns {FileId}\n     */\n    static fromString(text) {\n        const result = entity_id.fromString(text);\n        const id = new FileId(result);\n        id._checksum = result.checksum;\n        return id;\n    }\n\n    /**\n     * @internal\n     * @param {proto.IFileID} id\n     * @returns {FileId}\n     */\n    static _fromProtobuf(id) {\n        const fileId = new FileId(\n            id.shardNum != null ? id.shardNum : 0,\n            id.realmNum != null ? id.realmNum : 0,\n            id.fileNum != null ? id.fileNum : 0\n        );\n\n        return fileId;\n    }\n\n    /**\n     * @returns {string | null}\n     */\n    get checksum() {\n        return this._checksum;\n    }\n\n    /**\n     * @deprecated - Use `validateChecksum` instead\n     * @param {Client} client\n     */\n    validate(client) {\n        console.warn(\"Deprecated: Use `validateChecksum` instead\");\n        this.validateChecksum(client);\n    }\n\n    /**\n     * @param {Client} client\n     */\n    validateChecksum(client) {\n        entity_id.validateChecksum(\n            this.shard,\n            this.realm,\n            this.num,\n            this._checksum,\n            client\n        );\n    }\n\n    /**\n     * @param {Uint8Array} bytes\n     * @returns {FileId}\n     */\n    static fromBytes(bytes) {\n        return FileId._fromProtobuf(proto.FileID.decode(bytes));\n    }\n\n    /**\n     * @param {string} address\n     * @returns {FileId}\n     */\n    static fromSolidityAddress(address) {\n        const [shard, realm, file] = entity_id.fromSolidityAddress(address);\n        return new FileId(shard, realm, file);\n    }\n\n    /**\n     * @returns {string} solidity address\n     */\n    toSolidityAddress() {\n        return entity_id.toSolidityAddress([this.shard, this.realm, this.num]);\n    }\n\n    /**\n     * @internal\n     * @returns {proto.IFileID}\n     */\n    _toProtobuf() {\n        return {\n            fileNum: this.num,\n            shardNum: this.shard,\n            realmNum: this.realm,\n        };\n    }\n\n    /**\n     * @returns {string}\n     */\n    toString() {\n        return `${this.shard.toString()}.${this.realm.toString()}.${this.num.toString()}`;\n    }\n\n    /**\n     * @param {Client} client\n     * @returns {string}\n     */\n    toStringWithChecksum(client) {\n        return entity_id.toStringWithChecksum(this.toString(), client);\n    }\n\n    /**\n     * @returns {Uint8Array}\n     */\n    toBytes() {\n        return proto.FileID.encode(this._toProtobuf()).finish();\n    }\n\n    /**\n     * @returns {FileId}\n     */\n    clone() {\n        const id = new FileId(this);\n        id._checksum = this._checksum;\n        return id;\n    }\n\n    /**\n     * @param {FileId} other\n     * @returns {number}\n     */\n    compare(other) {\n        return entity_id.compare(\n            [this.shard, this.realm, this.num],\n            [other.shard, other.realm, other.num]\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}