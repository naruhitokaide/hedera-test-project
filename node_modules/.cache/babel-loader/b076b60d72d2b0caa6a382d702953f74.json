{"ast":null,"code":"import AccountId from \"../account/AccountId.js\";\nimport Endpoint from \"./Endpoint.js\";\nimport * as utf8 from \"../encoding/utf8.js\";\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").INodeAddress} proto.INodeAddress\n */\n\n/**\n * @typedef {import(\"./Endpoint.js\").EndPointJson} EndpointJson\n * @typedef {import(\"long\").Long} Long\n */\n\n/**\n * @typedef {object} NodeAddressJson\n * @property {string | null} publicKey\n * @property {string | null} nodeId\n * @property {string | null} accountId\n * @property {string | null} certHash\n * @property {EndpointJson[] | null} addresses\n * @property {string | null} description\n * @property {string | null} stake\n */\n\nexport default class NodeAddress {\n  /**\n   * @param {object} props\n   * @param {string} [props.publicKey]\n   * @param {Long} [props.nodeId]\n   * @param {AccountId | string} [props.accountId]\n   * @param {Uint8Array} [props.certHash]\n   * @param {Endpoint[]} [props.addresses]\n   * @param {string} [props.description]\n   * @param {Long} [props.stake]\n   */\n  constructor() {\n    let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    /**\n     * @type {string | null}\n     */\n    this._publicKey = null;\n\n    if (props.publicKey != null) {\n      this.setPublicKey(props.publicKey);\n    }\n    /**\n     * @type {Long |null}\n     */\n\n\n    this._nodeId = null;\n\n    if (props.nodeId != null) {\n      this.setNodeId(props.nodeId);\n    }\n    /**\n     * @type {AccountId | null}\n     */\n\n\n    this._accountId = null;\n\n    if (props.accountId != null) {\n      this.setAccountId(props.accountId);\n    }\n    /**\n     * @type {Uint8Array | null}\n     */\n\n\n    this._certHash = null;\n\n    if (props.certHash != null) {\n      this.setCertHash(props.certHash);\n    }\n    /**\n     * @type {Endpoint[]}\n     */\n\n\n    this._addresses = [];\n\n    if (props.addresses != null) {\n      this.setAddresses(props.addresses);\n    }\n    /**\n     * @type {string | null}\n     */\n\n\n    this._description = null;\n\n    if (props.description != null) {\n      this.setDescription(props.description);\n    }\n    /**\n     * @type {Long | null}\n     */\n\n\n    this._stake = null;\n\n    if (props.stake != null) {\n      this.setStake(props.stake);\n    }\n  }\n  /**\n   * @returns {?string}\n   */\n\n\n  get publicKey() {\n    return this._publicKey;\n  }\n  /**\n   * @param {string} publicKey\n   * @returns {this}\n   */\n\n\n  setPublicKey(publicKey) {\n    this._publicKey = publicKey;\n    return this;\n  }\n  /**\n   * @returns {?Long}\n   */\n\n\n  get nodeId() {\n    return this._nodeId;\n  }\n  /**\n   * @param {Long} nodeId\n   * @returns {this}\n   */\n\n\n  setNodeId(nodeId) {\n    this._nodeId = nodeId;\n    return this;\n  }\n  /**\n   * @returns {?AccountId}\n   */\n\n\n  get accountId() {\n    return this._accountId;\n  }\n  /**\n   * @param {AccountId | string} accountId\n   * @returns {this}\n   */\n\n\n  setAccountId(accountId) {\n    this._accountId = typeof accountId === \"string\" ? AccountId.fromString(accountId) : accountId.clone();\n    return this;\n  }\n  /**\n   * @returns {?Uint8Array}\n   */\n\n\n  get certHash() {\n    return this._certHash;\n  }\n  /**\n   * @param {Uint8Array} certHash\n   * @returns {this}\n   */\n\n\n  setCertHash(certHash) {\n    this._certHash = certHash;\n    return this;\n  }\n  /**\n   * @returns {Endpoint[]}\n   */\n\n\n  get addresses() {\n    return this._addresses;\n  }\n  /**\n   * @param {Endpoint[]} addresses\n   * @returns {this}\n   */\n\n\n  setAddresses(addresses) {\n    this._addresses = addresses;\n    return this;\n  }\n  /**\n   * @returns {?string}\n   */\n\n\n  get description() {\n    return this._description;\n  }\n  /**\n   * @param {string} description\n   * @returns {this}\n   */\n\n\n  setDescription(description) {\n    this._description = description;\n    return this;\n  }\n  /**\n   * @returns {?Long}\n   */\n\n\n  get stake() {\n    return this._stake;\n  }\n  /**\n   * @param {Long} stake\n   * @returns {this}\n   */\n\n\n  setStake(stake) {\n    this._stake = stake;\n    return this;\n  }\n  /**\n   * @internal\n   * @param {proto.INodeAddress} nodeAddress\n   * @returns {NodeAddress}\n   */\n\n\n  static _fromProtobuf(nodeAddress) {\n    return new NodeAddress({\n      publicKey: nodeAddress.RSA_PubKey != null ? nodeAddress.RSA_PubKey : undefined,\n      nodeId: nodeAddress.nodeId != null ? nodeAddress.nodeId : undefined,\n      accountId: nodeAddress.nodeAccountId != null ? AccountId._fromProtobuf(nodeAddress.nodeAccountId) : undefined,\n      certHash: nodeAddress.nodeCertHash != null ? nodeAddress.nodeCertHash : undefined,\n      addresses: nodeAddress.serviceEndpoint != null ? nodeAddress.serviceEndpoint.map(address => Endpoint._fromProtobuf(address)) : undefined,\n      description: nodeAddress.description != null ? nodeAddress.description : undefined,\n      stake: nodeAddress.stake != null ? nodeAddress.stake : undefined\n    });\n  }\n  /**\n   * @returns {proto.INodeAddress}\n   */\n\n\n  _toProtobuf() {\n    return {\n      RSA_PubKey: this._publicKey,\n      nodeId: this._nodeId,\n      nodeAccountId: this._accountId != null ? this._accountId._toProtobuf() : null,\n      nodeCertHash: this._certHash,\n      serviceEndpoint: this._addresses.map(address => address._toProtobuf()),\n      description: this._description,\n      stake: this._stake\n    };\n  }\n  /**\n   * @returns {string}\n   */\n\n\n  toString() {\n    return JSON.stringify(this.toJSON());\n  }\n  /**\n   * @returns {NodeAddressJson}\n   */\n\n\n  toJSON() {\n    return {\n      publicKey: this._publicKey,\n      nodeId: this._nodeId != null ? this._nodeId.toString() : null,\n      accountId: this._accountId != null ? this._accountId.toString() : null,\n      certHash: this._certHash != null ? utf8.decode(this._certHash) : null,\n      addresses: this._addresses.map(address => address.toJSON()),\n      description: this._description,\n      stake: this._stake != null ? this._stake.toString() : null\n    };\n  }\n\n}","map":{"version":3,"sources":["C:/Work/coding-sandbox/react-again/dapp-days/node_modules/@hashgraph/sdk/src/address_book/NodeAddress.js"],"names":["AccountId","Endpoint","utf8","NodeAddress","constructor","props","_publicKey","publicKey","setPublicKey","_nodeId","nodeId","setNodeId","_accountId","accountId","setAccountId","_certHash","certHash","setCertHash","_addresses","addresses","setAddresses","_description","description","setDescription","_stake","stake","setStake","fromString","clone","_fromProtobuf","nodeAddress","RSA_PubKey","undefined","nodeAccountId","nodeCertHash","serviceEndpoint","map","address","_toProtobuf","toString","JSON","stringify","toJSON","decode"],"mappings":"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","sourcesContent":["import AccountId from \"../account/AccountId.js\";\nimport Endpoint from \"./Endpoint.js\";\nimport * as utf8 from \"../encoding/utf8.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").INodeAddress} proto.INodeAddress\n */\n\n/**\n * @typedef {import(\"./Endpoint.js\").EndPointJson} EndpointJson\n * @typedef {import(\"long\").Long} Long\n */\n\n/**\n * @typedef {object} NodeAddressJson\n * @property {string | null} publicKey\n * @property {string | null} nodeId\n * @property {string | null} accountId\n * @property {string | null} certHash\n * @property {EndpointJson[] | null} addresses\n * @property {string | null} description\n * @property {string | null} stake\n */\n\nexport default class NodeAddress {\n    /**\n     * @param {object} props\n     * @param {string} [props.publicKey]\n     * @param {Long} [props.nodeId]\n     * @param {AccountId | string} [props.accountId]\n     * @param {Uint8Array} [props.certHash]\n     * @param {Endpoint[]} [props.addresses]\n     * @param {string} [props.description]\n     * @param {Long} [props.stake]\n     */\n    constructor(props = {}) {\n        /**\n         * @type {string | null}\n         */\n        this._publicKey = null;\n\n        if (props.publicKey != null) {\n            this.setPublicKey(props.publicKey);\n        }\n\n        /**\n         * @type {Long |null}\n         */\n        this._nodeId = null;\n\n        if (props.nodeId != null) {\n            this.setNodeId(props.nodeId);\n        }\n\n        /**\n         * @type {AccountId | null}\n         */\n        this._accountId = null;\n\n        if (props.accountId != null) {\n            this.setAccountId(props.accountId);\n        }\n\n        /**\n         * @type {Uint8Array | null}\n         */\n        this._certHash = null;\n\n        if (props.certHash != null) {\n            this.setCertHash(props.certHash);\n        }\n\n        /**\n         * @type {Endpoint[]}\n         */\n        this._addresses = [];\n\n        if (props.addresses != null) {\n            this.setAddresses(props.addresses);\n        }\n\n        /**\n         * @type {string | null}\n         */\n        this._description = null;\n\n        if (props.description != null) {\n            this.setDescription(props.description);\n        }\n\n        /**\n         * @type {Long | null}\n         */\n        this._stake = null;\n\n        if (props.stake != null) {\n            this.setStake(props.stake);\n        }\n    }\n\n    /**\n     * @returns {?string}\n     */\n    get publicKey() {\n        return this._publicKey;\n    }\n\n    /**\n     * @param {string} publicKey\n     * @returns {this}\n     */\n    setPublicKey(publicKey) {\n        this._publicKey = publicKey;\n        return this;\n    }\n\n    /**\n     * @returns {?Long}\n     */\n    get nodeId() {\n        return this._nodeId;\n    }\n\n    /**\n     * @param {Long} nodeId\n     * @returns {this}\n     */\n    setNodeId(nodeId) {\n        this._nodeId = nodeId;\n        return this;\n    }\n\n    /**\n     * @returns {?AccountId}\n     */\n    get accountId() {\n        return this._accountId;\n    }\n\n    /**\n     * @param {AccountId | string} accountId\n     * @returns {this}\n     */\n    setAccountId(accountId) {\n        this._accountId =\n            typeof accountId === \"string\"\n                ? AccountId.fromString(accountId)\n                : accountId.clone();\n        return this;\n    }\n\n    /**\n     * @returns {?Uint8Array}\n     */\n    get certHash() {\n        return this._certHash;\n    }\n\n    /**\n     * @param {Uint8Array} certHash\n     * @returns {this}\n     */\n    setCertHash(certHash) {\n        this._certHash = certHash;\n        return this;\n    }\n\n    /**\n     * @returns {Endpoint[]}\n     */\n    get addresses() {\n        return this._addresses;\n    }\n\n    /**\n     * @param {Endpoint[]} addresses\n     * @returns {this}\n     */\n    setAddresses(addresses) {\n        this._addresses = addresses;\n        return this;\n    }\n\n    /**\n     * @returns {?string}\n     */\n    get description() {\n        return this._description;\n    }\n\n    /**\n     * @param {string} description\n     * @returns {this}\n     */\n    setDescription(description) {\n        this._description = description;\n        return this;\n    }\n\n    /**\n     * @returns {?Long}\n     */\n    get stake() {\n        return this._stake;\n    }\n\n    /**\n     * @param {Long} stake\n     * @returns {this}\n     */\n    setStake(stake) {\n        this._stake = stake;\n        return this;\n    }\n\n    /**\n     * @internal\n     * @param {proto.INodeAddress} nodeAddress\n     * @returns {NodeAddress}\n     */\n    static _fromProtobuf(nodeAddress) {\n        return new NodeAddress({\n            publicKey:\n                nodeAddress.RSA_PubKey != null\n                    ? nodeAddress.RSA_PubKey\n                    : undefined,\n            nodeId: nodeAddress.nodeId != null ? nodeAddress.nodeId : undefined,\n            accountId:\n                nodeAddress.nodeAccountId != null\n                    ? AccountId._fromProtobuf(nodeAddress.nodeAccountId)\n                    : undefined,\n            certHash:\n                nodeAddress.nodeCertHash != null\n                    ? nodeAddress.nodeCertHash\n                    : undefined,\n            addresses:\n                nodeAddress.serviceEndpoint != null\n                    ? nodeAddress.serviceEndpoint.map((address) =>\n                          Endpoint._fromProtobuf(address)\n                      )\n                    : undefined,\n            description:\n                nodeAddress.description != null\n                    ? nodeAddress.description\n                    : undefined,\n            stake: nodeAddress.stake != null ? nodeAddress.stake : undefined,\n        });\n    }\n\n    /**\n     * @returns {proto.INodeAddress}\n     */\n    _toProtobuf() {\n        return {\n            RSA_PubKey: this._publicKey,\n            nodeId: this._nodeId,\n            nodeAccountId:\n                this._accountId != null ? this._accountId._toProtobuf() : null,\n            nodeCertHash: this._certHash,\n            serviceEndpoint: this._addresses.map((address) =>\n                address._toProtobuf()\n            ),\n            description: this._description,\n            stake: this._stake,\n        };\n    }\n\n    /**\n     * @returns {string}\n     */\n    toString() {\n        return JSON.stringify(this.toJSON());\n    }\n\n    /**\n     * @returns {NodeAddressJson}\n     */\n    toJSON() {\n        return {\n            publicKey: this._publicKey,\n            nodeId: this._nodeId != null ? this._nodeId.toString() : null,\n            accountId:\n                this._accountId != null ? this._accountId.toString() : null,\n            certHash:\n                this._certHash != null ? utf8.decode(this._certHash) : null,\n            addresses: this._addresses.map((address) => address.toJSON()),\n            description: this._description,\n            stake: this._stake != null ? this._stake.toString() : null,\n        };\n    }\n}\n"]},"metadata":{},"sourceType":"module"}