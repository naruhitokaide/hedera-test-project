{"ast":null,"code":"/**\n * @param {Uint8Array} array1\n * @param {Uint8Array} array2\n * @returns {boolean}\n */\nexport function arrayEqual(array1, array2) {\n  if (array1 === array2) {\n    return true;\n  }\n\n  if (array1.byteLength !== array2.byteLength) {\n    return false;\n  }\n\n  const view1 = new DataView(array1.buffer, array1.byteOffset, array1.byteLength);\n  const view2 = new DataView(array2.buffer, array2.byteOffset, array2.byteLength);\n  let i = array1.byteLength;\n\n  while (i--) {\n    if (view1.getUint8(i) !== view2.getUint8(i)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\n * @param {Uint8Array} array\n * @param {Uint8Array} arrayPrefix\n * @returns {boolean}\n */\n\nexport function arrayStartsWith(array, arrayPrefix) {\n  if (array.byteLength < arrayPrefix.byteLength) {\n    return false;\n  }\n\n  let i = arrayPrefix.byteLength;\n\n  while (i--) {\n    if (array[i] !== arrayPrefix[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}","map":{"version":3,"sources":["C:/Work/coding-sandbox/react-again/dapp-days/node_modules/@hashgraph/sdk/src/array.js"],"names":["arrayEqual","array1","array2","byteLength","view1","DataView","buffer","byteOffset","view2","i","getUint8","arrayStartsWith","array","arrayPrefix"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,UAAT,CAAoBC,MAApB,EAA4BC,MAA5B,EAAoC;AACvC,MAAID,MAAM,KAAKC,MAAf,EAAuB;AACnB,WAAO,IAAP;AACH;;AAED,MAAID,MAAM,CAACE,UAAP,KAAsBD,MAAM,CAACC,UAAjC,EAA6C;AACzC,WAAO,KAAP;AACH;;AAED,QAAMC,KAAK,GAAG,IAAIC,QAAJ,CACVJ,MAAM,CAACK,MADG,EAEVL,MAAM,CAACM,UAFG,EAGVN,MAAM,CAACE,UAHG,CAAd;AAKA,QAAMK,KAAK,GAAG,IAAIH,QAAJ,CACVH,MAAM,CAACI,MADG,EAEVJ,MAAM,CAACK,UAFG,EAGVL,MAAM,CAACC,UAHG,CAAd;AAMA,MAAIM,CAAC,GAAGR,MAAM,CAACE,UAAf;;AAEA,SAAOM,CAAC,EAAR,EAAY;AACR,QAAIL,KAAK,CAACM,QAAN,CAAeD,CAAf,MAAsBD,KAAK,CAACE,QAAN,CAAeD,CAAf,CAA1B,EAA6C;AACzC,aAAO,KAAP;AACH;AACJ;;AAED,SAAO,IAAP;AACH;AAED;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASE,eAAT,CAAyBC,KAAzB,EAAgCC,WAAhC,EAA6C;AAChD,MAAID,KAAK,CAACT,UAAN,GAAmBU,WAAW,CAACV,UAAnC,EAA+C;AAC3C,WAAO,KAAP;AACH;;AAED,MAAIM,CAAC,GAAGI,WAAW,CAACV,UAApB;;AAEA,SAAOM,CAAC,EAAR,EAAY;AACR,QAAIG,KAAK,CAACH,CAAD,CAAL,KAAaI,WAAW,CAACJ,CAAD,CAA5B,EAAiC;AAC7B,aAAO,KAAP;AACH;AACJ;;AAED,SAAO,IAAP;AACH","sourcesContent":["/**\n * @param {Uint8Array} array1\n * @param {Uint8Array} array2\n * @returns {boolean}\n */\nexport function arrayEqual(array1, array2) {\n    if (array1 === array2) {\n        return true;\n    }\n\n    if (array1.byteLength !== array2.byteLength) {\n        return false;\n    }\n\n    const view1 = new DataView(\n        array1.buffer,\n        array1.byteOffset,\n        array1.byteLength\n    );\n    const view2 = new DataView(\n        array2.buffer,\n        array2.byteOffset,\n        array2.byteLength\n    );\n\n    let i = array1.byteLength;\n\n    while (i--) {\n        if (view1.getUint8(i) !== view2.getUint8(i)) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\n/**\n * @param {Uint8Array} array\n * @param {Uint8Array} arrayPrefix\n * @returns {boolean}\n */\nexport function arrayStartsWith(array, arrayPrefix) {\n    if (array.byteLength < arrayPrefix.byteLength) {\n        return false;\n    }\n\n    let i = arrayPrefix.byteLength;\n\n    while (i--) {\n        if (array[i] !== arrayPrefix[i]) {\n            return false;\n        }\n    }\n\n    return true;\n}\n"]},"metadata":{},"sourceType":"module"}