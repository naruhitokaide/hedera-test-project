{"ast":null,"code":"import Channel, { encodeRequest, decodeUnaryResponse } from \"./Channel.js\";\nexport default class WebChannel extends Channel {\n  /**\n   * @param {string} address\n   */\n  constructor(address) {\n    super();\n    /**\n     * @type {string}\n     * @private\n     */\n\n    this._address = address;\n  }\n  /**\n   * @override\n   * @returns {void}\n   */\n\n\n  close() {// do nothing\n  }\n  /**\n   * @override\n   * @protected\n   * @param {string} serviceName\n   * @returns {import(\"protobufjs\").RPCImpl}\n   */\n\n\n  _createUnaryClient(serviceName) {\n    return async (method, requestData, callback) => {\n      const response = await fetch(`${this._address}/proto.${serviceName}/${method.name}`, {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/grpc-web+proto\",\n          \"x-user-agent\": \"hedera-sdk-js/v2\",\n          \"x-grpc-web\": \"1\"\n        },\n        body: encodeRequest(requestData)\n      });\n      const responseBuffer = await response.arrayBuffer();\n      const unaryResponse = decodeUnaryResponse(responseBuffer);\n      callback(null, unaryResponse);\n    };\n  }\n\n}","map":{"version":3,"sources":["C:/Work/coding-sandbox/react-again/dapp-days/node_modules/@hashgraph/sdk/src/channel/WebChannel.js"],"names":["Channel","encodeRequest","decodeUnaryResponse","WebChannel","constructor","address","_address","close","_createUnaryClient","serviceName","method","requestData","callback","response","fetch","name","headers","body","responseBuffer","arrayBuffer","unaryResponse"],"mappings":"AAAA,OAAOA,OAAP,IAAkBC,aAAlB,EAAiCC,mBAAjC,QAA4D,cAA5D;AAEA,eAAe,MAAMC,UAAN,SAAyBH,OAAzB,CAAiC;AAC5C;AACJ;AACA;AACII,EAAAA,WAAW,CAACC,OAAD,EAAU;AACjB;AAEA;AACR;AACA;AACA;;AACQ,SAAKC,QAAL,GAAgBD,OAAhB;AACH;AAED;AACJ;AACA;AACA;;;AACIE,EAAAA,KAAK,GAAG,CACJ;AACH;AAED;AACJ;AACA;AACA;AACA;AACA;;;AACIC,EAAAA,kBAAkB,CAACC,WAAD,EAAc;AAC5B,WAAO,OAAOC,MAAP,EAAeC,WAAf,EAA4BC,QAA5B,KAAyC;AAC5C,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CACvB,GAAE,KAAKR,QAAS,UAASG,WAAY,IAAGC,MAAM,CAACK,IAAK,EAD7B,EAExB;AACIL,QAAAA,MAAM,EAAE,MADZ;AAEIM,QAAAA,OAAO,EAAE;AACL,0BAAgB,4BADX;AAEL,0BAAgB,kBAFX;AAGL,wBAAc;AAHT,SAFb;AAOIC,QAAAA,IAAI,EAAEhB,aAAa,CAACU,WAAD;AAPvB,OAFwB,CAA5B;AAaA,YAAMO,cAAc,GAAG,MAAML,QAAQ,CAACM,WAAT,EAA7B;AACA,YAAMC,aAAa,GAAGlB,mBAAmB,CAACgB,cAAD,CAAzC;AAEAN,MAAAA,QAAQ,CAAC,IAAD,EAAOQ,aAAP,CAAR;AACH,KAlBD;AAmBH;;AAhD2C","sourcesContent":["import Channel, { encodeRequest, decodeUnaryResponse } from \"./Channel.js\";\n\nexport default class WebChannel extends Channel {\n    /**\n     * @param {string} address\n     */\n    constructor(address) {\n        super();\n\n        /**\n         * @type {string}\n         * @private\n         */\n        this._address = address;\n    }\n\n    /**\n     * @override\n     * @returns {void}\n     */\n    close() {\n        // do nothing\n    }\n\n    /**\n     * @override\n     * @protected\n     * @param {string} serviceName\n     * @returns {import(\"protobufjs\").RPCImpl}\n     */\n    _createUnaryClient(serviceName) {\n        return async (method, requestData, callback) => {\n            const response = await fetch(\n                `${this._address}/proto.${serviceName}/${method.name}`,\n                {\n                    method: \"POST\",\n                    headers: {\n                        \"content-type\": \"application/grpc-web+proto\",\n                        \"x-user-agent\": \"hedera-sdk-js/v2\",\n                        \"x-grpc-web\": \"1\",\n                    },\n                    body: encodeRequest(requestData),\n                }\n            );\n\n            const responseBuffer = await response.arrayBuffer();\n            const unaryResponse = decodeUnaryResponse(responseBuffer);\n\n            callback(null, unaryResponse);\n        };\n    }\n}\n"]},"metadata":{},"sourceType":"module"}