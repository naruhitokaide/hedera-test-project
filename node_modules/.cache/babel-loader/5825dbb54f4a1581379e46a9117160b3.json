{"ast":null,"code":"import TokenId from \"./TokenId.js\";\nimport Transaction, { TRANSACTION_REGISTRY } from \"../transaction/Transaction.js\";\nimport AccountId from \"../account/AccountId.js\";\nimport Timestamp from \"../Timestamp.js\";\nimport Duration from \"../Duration.js\";\nimport Key from \"../Key.js\";\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").ITransaction} proto.ITransaction\n * @typedef {import(\"@hashgraph/proto\").ISignedTransaction} proto.ISignedTransaction\n * @typedef {import(\"@hashgraph/proto\").TransactionBody} proto.TransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionBody} proto.ITransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionResponse} proto.ITransactionResponse\n * @typedef {import(\"@hashgraph/proto\").ITokenUpdateTransactionBody} proto.ITokenUpdateTransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITokenID} proto.ITokenID\n */\n\n/**\n * @typedef {import(\"bignumber.js\").default} BigNumber\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n * @typedef {import(\"../transaction/TransactionId.js\").default} TransactionId\n */\n\n/**\n * Update a new Hederaâ„¢ crypto-currency token.\n */\n\nexport default class TokenUpdateTransaction extends Transaction {\n  /**\n   * @param {object} [props]\n   * @param {TokenId | string} [props.tokenId]\n   * @param {string} [props.tokenName]\n   * @param {string} [props.tokenSymbol]\n   * @param {AccountId | string} [props.treasuryAccountId]\n   * @param {Key} [props.adminKey]\n   * @param {Key} [props.kycKey]\n   * @param {Key} [props.freezeKey]\n   * @param {Key} [props.wipeKey]\n   * @param {Key} [props.supplyKey]\n   * @param {AccountId | string} [props.autoRenewAccountId]\n   * @param {Timestamp | Date} [props.expirationTime]\n   * @param {Duration | Long | number} [props.autoRenewPeriod]\n   * @param {string} [props.tokenMemo]\n   * @param {Key} [props.feeScheduleKey]\n   * @param {Key} [props.pauseKey]\n   */\n  constructor() {\n    let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super();\n    /**\n     * @private\n     * @type {?TokenId}\n     */\n\n    this._tokenId = null;\n    /**\n     * @private\n     * @type {?string}\n     */\n\n    this._tokenName = null;\n    /**\n     * @private\n     * @type {?string}\n     */\n\n    this._tokenSymbol = null;\n    /**\n     * @private\n     * @type {?AccountId}\n     */\n\n    this._treasuryAccountId = null;\n    /**\n     * @private\n     * @type {?Key}\n     */\n\n    this._adminKey = null;\n    /**\n     * @private\n     * @type {?Key}\n     */\n\n    this._kycKey = null;\n    /**\n     * @private\n     * @type {?Key}\n     */\n\n    this._freezeKey = null;\n    /**\n     * @private\n     * @type {?Key}\n     */\n\n    this._wipeKey = null;\n    /**\n     * @private\n     * @type {?Key}\n     */\n\n    this._supplyKey = null;\n    /**\n     * @private\n     * @type {?AccountId}\n     */\n\n    this._autoRenewAccountId = null;\n    /**\n     * @private\n     * @type {?Timestamp}\n     */\n\n    this._expirationTime = null;\n    /**\n     * @private\n     * @type {?Duration}\n     */\n\n    this._autoRenewPeriod = null;\n    /**\n     * @private\n     * @type {?string}\n     */\n\n    this._tokenMemo = null;\n    /**\n     * @private\n     * @type {?Key}\n     */\n\n    this._feeScheduleKey = null;\n    /**\n     * @private\n     * @type {?Key}\n     */\n\n    this._pauseKey = null;\n\n    if (props.tokenId != null) {\n      this.setTokenId(props.tokenId);\n    }\n\n    if (props.tokenName != null) {\n      this.setTokenName(props.tokenName);\n    }\n\n    if (props.tokenSymbol != null) {\n      this.setTokenSymbol(props.tokenSymbol);\n    }\n\n    if (props.treasuryAccountId != null) {\n      this.setTreasuryAccountId(props.treasuryAccountId);\n    }\n\n    if (props.adminKey != null) {\n      this.setAdminKey(props.adminKey);\n    }\n\n    if (props.kycKey != null) {\n      this.setKycKey(props.kycKey);\n    }\n\n    if (props.freezeKey != null) {\n      this.setFreezeKey(props.freezeKey);\n    }\n\n    if (props.wipeKey != null) {\n      this.setWipeKey(props.wipeKey);\n    }\n\n    if (props.supplyKey != null) {\n      this.setSupplyKey(props.supplyKey);\n    }\n\n    if (props.autoRenewAccountId != null) {\n      this.setAutoRenewAccountId(props.autoRenewAccountId);\n    }\n\n    if (props.expirationTime != null) {\n      this.setExpirationTime(props.expirationTime);\n    }\n\n    if (props.autoRenewPeriod != null) {\n      this.setAutoRenewPeriod(props.autoRenewPeriod);\n    }\n\n    if (props.tokenMemo != null) {\n      this.setTokenMemo(props.tokenMemo);\n    }\n\n    if (props.feeScheduleKey != null) {\n      this.setFeeScheduleKey(props.feeScheduleKey);\n    }\n\n    if (props.pauseKey != null) {\n      this.setPauseKey(props.pauseKey);\n    }\n  }\n  /**\n   * @internal\n   * @param {proto.ITransaction[]} transactions\n   * @param {proto.ISignedTransaction[]} signedTransactions\n   * @param {TransactionId[]} transactionIds\n   * @param {AccountId[]} nodeIds\n   * @param {proto.ITransactionBody[]} bodies\n   * @returns {TokenUpdateTransaction}\n   */\n\n\n  static _fromProtobuf(transactions, signedTransactions, transactionIds, nodeIds, bodies) {\n    const body = bodies[0];\n    const update =\n    /** @type {proto.ITokenUpdateTransactionBody} */\n    body.tokenUpdate;\n    return Transaction._fromProtobufTransactions(new TokenUpdateTransaction({\n      tokenId: update.token != null ? TokenId._fromProtobuf(update.token) : undefined,\n      tokenName: update.name != null ? update.name : undefined,\n      tokenSymbol: update.symbol != null ? update.symbol : undefined,\n      treasuryAccountId: update.treasury != null ? AccountId._fromProtobuf(update.treasury) : undefined,\n      adminKey: update.adminKey != null ? Key._fromProtobufKey(update.adminKey) : undefined,\n      kycKey: update.kycKey != null ? Key._fromProtobufKey(update.kycKey) : undefined,\n      freezeKey: update.freezeKey != null ? Key._fromProtobufKey(update.freezeKey) : undefined,\n      wipeKey: update.wipeKey != null ? Key._fromProtobufKey(update.wipeKey) : undefined,\n      supplyKey: update.supplyKey != null ? Key._fromProtobufKey(update.supplyKey) : undefined,\n      autoRenewAccountId: update.autoRenewAccount != null ? AccountId._fromProtobuf(update.autoRenewAccount) : undefined,\n      expirationTime: update.expiry != null ? Timestamp._fromProtobuf(update.expiry) : undefined,\n      autoRenewPeriod: update.autoRenewPeriod != null ? Duration._fromProtobuf(update.autoRenewPeriod) : undefined,\n      tokenMemo: update.memo != null ? update.memo.value != null ? update.memo.value : undefined : undefined,\n      feeScheduleKey: update.feeScheduleKey != null ? Key._fromProtobufKey(update.feeScheduleKey) : undefined\n    }), transactions, signedTransactions, transactionIds, nodeIds, bodies);\n  }\n  /**\n   * @returns {?TokenId}\n   */\n\n\n  get tokenId() {\n    return this._tokenId;\n  }\n  /**\n   * @param {TokenId | string} tokenId\n   * @returns {this}\n   */\n\n\n  setTokenId(tokenId) {\n    this._requireNotFrozen();\n\n    this._tokenId = typeof tokenId === \"string\" ? TokenId.fromString(tokenId) : tokenId.clone();\n    return this;\n  }\n  /**\n   * @returns {?string}\n   */\n\n\n  get tokenName() {\n    return this._tokenName;\n  }\n  /**\n   * @param {string} name\n   * @returns {this}\n   */\n\n\n  setTokenName(name) {\n    this._requireNotFrozen();\n\n    this._tokenName = name;\n    return this;\n  }\n  /**\n   * @returns {?string}\n   */\n\n\n  get tokenSymbol() {\n    return this._tokenSymbol;\n  }\n  /**\n   * @param {string} symbol\n   * @returns {this}\n   */\n\n\n  setTokenSymbol(symbol) {\n    this._requireNotFrozen();\n\n    this._tokenSymbol = symbol;\n    return this;\n  }\n  /**\n   * @returns {?AccountId}\n   */\n\n\n  get treasuryAccountId() {\n    return this._treasuryAccountId;\n  }\n  /**\n   * @param {AccountId | string} id\n   * @returns {this}\n   */\n\n\n  setTreasuryAccountId(id) {\n    this._requireNotFrozen();\n\n    this._treasuryAccountId = typeof id === \"string\" ? AccountId.fromString(id) : id.clone();\n    return this;\n  }\n  /**\n   * @returns {?Key}\n   */\n\n\n  get adminKey() {\n    return this._adminKey;\n  }\n  /**\n   * @param {Key} key\n   * @returns {this}\n   */\n\n\n  setAdminKey(key) {\n    this._requireNotFrozen();\n\n    this._adminKey = key;\n    return this;\n  }\n  /**\n   * @returns {?Key}\n   */\n\n\n  get kycKey() {\n    return this._kycKey;\n  }\n  /**\n   * @param {Key} key\n   * @returns {this}\n   */\n\n\n  setKycKey(key) {\n    this._requireNotFrozen();\n\n    this._kycKey = key;\n    return this;\n  }\n  /**\n   * @returns {?Key}\n   */\n\n\n  get freezeKey() {\n    return this._freezeKey;\n  }\n  /**\n   * @param {Key} key\n   * @returns {this}\n   */\n\n\n  setFreezeKey(key) {\n    this._requireNotFrozen();\n\n    this._freezeKey = key;\n    return this;\n  }\n  /**\n   * @returns {?Key}\n   */\n\n\n  get wipeKey() {\n    return this._wipeKey;\n  }\n  /**\n   * @param {Key} key\n   * @returns {this}\n   */\n\n\n  setWipeKey(key) {\n    this._requireNotFrozen();\n\n    this._wipeKey = key;\n    return this;\n  }\n  /**\n   * @returns {?Key}\n   */\n\n\n  get supplyKey() {\n    return this._supplyKey;\n  }\n  /**\n   * @param {Key} key\n   * @returns {this}\n   */\n\n\n  setSupplyKey(key) {\n    this._requireNotFrozen();\n\n    this._supplyKey = key;\n    return this;\n  }\n  /**\n   * @deprecated\n   * @param {Key} key\n   * @returns {this}\n   */\n\n\n  setsupplyKey(key) {\n    this._requireNotFrozen();\n\n    this._supplyKey = key;\n    return this;\n  }\n  /**\n   * @returns {?Timestamp}\n   */\n\n\n  get expirationTime() {\n    return this._expirationTime;\n  }\n  /**\n   * @param {Timestamp | Date} time\n   * @returns {this}\n   */\n\n\n  setExpirationTime(time) {\n    this._requireNotFrozen();\n\n    this._expirationTime = time instanceof Timestamp ? time : Timestamp.fromDate(time);\n    return this;\n  }\n  /**\n   * @returns {?AccountId}\n   */\n\n\n  get autoRenewAccountId() {\n    return this._autoRenewAccountId;\n  }\n  /**\n   * @param {AccountId | string} id\n   * @returns {this}\n   */\n\n\n  setAutoRenewAccountId(id) {\n    this._requireNotFrozen();\n\n    this._autoRenewAccountId = id instanceof AccountId ? id : AccountId.fromString(id);\n    return this;\n  }\n  /**\n   * @returns {?Duration}\n   */\n\n\n  get autoRenewPeriod() {\n    return this._autoRenewPeriod;\n  }\n  /**\n   * Set the auto renew period for this token.\n   *\n   * @param {Duration | Long | number} autoRenewPeriod\n   * @returns {this}\n   */\n\n\n  setAutoRenewPeriod(autoRenewPeriod) {\n    this._requireNotFrozen();\n\n    this._autoRenewPeriod = autoRenewPeriod instanceof Duration ? autoRenewPeriod : new Duration(autoRenewPeriod);\n    return this;\n  }\n  /**\n   * @returns {?string}\n   */\n\n\n  get tokenMemo() {\n    return this._tokenMemo;\n  }\n  /**\n   * @param {string} tokenMemo\n   * @returns {this}\n   */\n\n\n  setTokenMemo(tokenMemo) {\n    this._requireNotFrozen();\n\n    this._tokenMemo = tokenMemo;\n    return this;\n  }\n  /**\n   * @returns {?Key}\n   */\n\n\n  get feeScheduleKey() {\n    return this._feeScheduleKey;\n  }\n  /**\n   * @param {Key} feeScheduleKey\n   * @returns {this}\n   */\n\n\n  setFeeScheduleKey(feeScheduleKey) {\n    this._requireNotFrozen();\n\n    this._feeScheduleKey = feeScheduleKey;\n    return this;\n  }\n  /**\n   * @returns {?Key}\n   */\n\n\n  get pauseKey() {\n    return this._pauseKey;\n  }\n  /**\n   * @param {Key} pauseKey\n   * @returns {this}\n   */\n\n\n  setPauseKey(pauseKey) {\n    this._requireNotFrozen();\n\n    this._pauseKey = pauseKey;\n    return this;\n  }\n  /**\n   * @returns {this}\n   */\n\n\n  clearTokenMemo() {\n    this._requireNotFrozen();\n\n    this._tokenMemo = null;\n    return this;\n  }\n  /**\n   * @param {Client} client\n   */\n\n\n  _validateChecksums(client) {\n    if (this._tokenId != null) {\n      this._tokenId.validateChecksum(client);\n    }\n\n    if (this._treasuryAccountId != null) {\n      this._treasuryAccountId.validateChecksum(client);\n    }\n\n    if (this._autoRenewAccountId != null) {\n      this._autoRenewAccountId.validateChecksum(client);\n    }\n  }\n  /**\n   * @override\n   * @internal\n   * @param {Channel} channel\n   * @param {proto.ITransaction} request\n   * @returns {Promise<proto.ITransactionResponse>}\n   */\n\n\n  _execute(channel, request) {\n    return channel.token.updateToken(request);\n  }\n  /**\n   * @override\n   * @protected\n   * @returns {NonNullable<proto.TransactionBody[\"data\"]>}\n   */\n\n\n  _getTransactionDataCase() {\n    return \"tokenUpdate\";\n  }\n  /**\n   * @override\n   * @protected\n   * @returns {proto.ITokenUpdateTransactionBody}\n   */\n\n\n  _makeTransactionData() {\n    return {\n      token: this._tokenId != null ? this._tokenId._toProtobuf() : null,\n      name: this.tokenName,\n      symbol: this.tokenSymbol,\n      treasury: this._treasuryAccountId != null ? this._treasuryAccountId._toProtobuf() : null,\n      adminKey: this._adminKey != null ? this._adminKey._toProtobufKey() : null,\n      kycKey: this._kycKey != null ? this._kycKey._toProtobufKey() : null,\n      freezeKey: this._freezeKey != null ? this._freezeKey._toProtobufKey() : null,\n      wipeKey: this._wipeKey != null ? this._wipeKey._toProtobufKey() : null,\n      supplyKey: this._supplyKey != null ? this._supplyKey._toProtobufKey() : null,\n      autoRenewAccount: this._autoRenewAccountId != null ? this._autoRenewAccountId._toProtobuf() : null,\n      expiry: this._expirationTime != null ? this._expirationTime._toProtobuf() : null,\n      autoRenewPeriod: this._autoRenewPeriod != null ? this._autoRenewPeriod._toProtobuf() : null,\n      memo: this._tokenMemo != null ? {\n        value: this._tokenMemo\n      } : null,\n      feeScheduleKey: this._feeScheduleKey != null ? this._feeScheduleKey._toProtobufKey() : null\n    };\n  }\n\n}\nTRANSACTION_REGISTRY.set(\"tokenUpdate\", // eslint-disable-next-line @typescript-eslint/unbound-method\nTokenUpdateTransaction._fromProtobuf);","map":{"version":3,"sources":["C:/Work/coding-sandbox/react-again/dapp-days/node_modules/@hashgraph/sdk/src/token/TokenUpdateTransaction.js"],"names":["TokenId","Transaction","TRANSACTION_REGISTRY","AccountId","Timestamp","Duration","Key","TokenUpdateTransaction","constructor","props","_tokenId","_tokenName","_tokenSymbol","_treasuryAccountId","_adminKey","_kycKey","_freezeKey","_wipeKey","_supplyKey","_autoRenewAccountId","_expirationTime","_autoRenewPeriod","_tokenMemo","_feeScheduleKey","_pauseKey","tokenId","setTokenId","tokenName","setTokenName","tokenSymbol","setTokenSymbol","treasuryAccountId","setTreasuryAccountId","adminKey","setAdminKey","kycKey","setKycKey","freezeKey","setFreezeKey","wipeKey","setWipeKey","supplyKey","setSupplyKey","autoRenewAccountId","setAutoRenewAccountId","expirationTime","setExpirationTime","autoRenewPeriod","setAutoRenewPeriod","tokenMemo","setTokenMemo","feeScheduleKey","setFeeScheduleKey","pauseKey","setPauseKey","_fromProtobuf","transactions","signedTransactions","transactionIds","nodeIds","bodies","body","update","tokenUpdate","_fromProtobufTransactions","token","undefined","name","symbol","treasury","_fromProtobufKey","autoRenewAccount","expiry","memo","value","_requireNotFrozen","fromString","clone","id","key","setsupplyKey","time","fromDate","clearTokenMemo","_validateChecksums","client","validateChecksum","_execute","channel","request","updateToken","_getTransactionDataCase","_makeTransactionData","_toProtobuf","_toProtobufKey","set"],"mappings":"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","sourcesContent":["import TokenId from \"./TokenId.js\";\nimport Transaction, {\n    TRANSACTION_REGISTRY,\n} from \"../transaction/Transaction.js\";\nimport AccountId from \"../account/AccountId.js\";\nimport Timestamp from \"../Timestamp.js\";\nimport Duration from \"../Duration.js\";\nimport Key from \"../Key.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").ITransaction} proto.ITransaction\n * @typedef {import(\"@hashgraph/proto\").ISignedTransaction} proto.ISignedTransaction\n * @typedef {import(\"@hashgraph/proto\").TransactionBody} proto.TransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionBody} proto.ITransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionResponse} proto.ITransactionResponse\n * @typedef {import(\"@hashgraph/proto\").ITokenUpdateTransactionBody} proto.ITokenUpdateTransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITokenID} proto.ITokenID\n */\n\n/**\n * @typedef {import(\"bignumber.js\").default} BigNumber\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n * @typedef {import(\"../transaction/TransactionId.js\").default} TransactionId\n */\n\n/**\n * Update a new Hederaâ„¢ crypto-currency token.\n */\nexport default class TokenUpdateTransaction extends Transaction {\n    /**\n     * @param {object} [props]\n     * @param {TokenId | string} [props.tokenId]\n     * @param {string} [props.tokenName]\n     * @param {string} [props.tokenSymbol]\n     * @param {AccountId | string} [props.treasuryAccountId]\n     * @param {Key} [props.adminKey]\n     * @param {Key} [props.kycKey]\n     * @param {Key} [props.freezeKey]\n     * @param {Key} [props.wipeKey]\n     * @param {Key} [props.supplyKey]\n     * @param {AccountId | string} [props.autoRenewAccountId]\n     * @param {Timestamp | Date} [props.expirationTime]\n     * @param {Duration | Long | number} [props.autoRenewPeriod]\n     * @param {string} [props.tokenMemo]\n     * @param {Key} [props.feeScheduleKey]\n     * @param {Key} [props.pauseKey]\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @private\n         * @type {?TokenId}\n         */\n        this._tokenId = null;\n\n        /**\n         * @private\n         * @type {?string}\n         */\n        this._tokenName = null;\n\n        /**\n         * @private\n         * @type {?string}\n         */\n        this._tokenSymbol = null;\n\n        /**\n         * @private\n         * @type {?AccountId}\n         */\n        this._treasuryAccountId = null;\n\n        /**\n         * @private\n         * @type {?Key}\n         */\n        this._adminKey = null;\n\n        /**\n         * @private\n         * @type {?Key}\n         */\n        this._kycKey = null;\n\n        /**\n         * @private\n         * @type {?Key}\n         */\n        this._freezeKey = null;\n\n        /**\n         * @private\n         * @type {?Key}\n         */\n        this._wipeKey = null;\n\n        /**\n         * @private\n         * @type {?Key}\n         */\n        this._supplyKey = null;\n\n        /**\n         * @private\n         * @type {?AccountId}\n         */\n        this._autoRenewAccountId = null;\n\n        /**\n         * @private\n         * @type {?Timestamp}\n         */\n        this._expirationTime = null;\n\n        /**\n         * @private\n         * @type {?Duration}\n         */\n        this._autoRenewPeriod = null;\n\n        /**\n         * @private\n         * @type {?string}\n         */\n        this._tokenMemo = null;\n\n        /**\n         * @private\n         * @type {?Key}\n         */\n        this._feeScheduleKey = null;\n\n        /**\n         * @private\n         * @type {?Key}\n         */\n        this._pauseKey = null;\n\n        if (props.tokenId != null) {\n            this.setTokenId(props.tokenId);\n        }\n\n        if (props.tokenName != null) {\n            this.setTokenName(props.tokenName);\n        }\n\n        if (props.tokenSymbol != null) {\n            this.setTokenSymbol(props.tokenSymbol);\n        }\n\n        if (props.treasuryAccountId != null) {\n            this.setTreasuryAccountId(props.treasuryAccountId);\n        }\n\n        if (props.adminKey != null) {\n            this.setAdminKey(props.adminKey);\n        }\n\n        if (props.kycKey != null) {\n            this.setKycKey(props.kycKey);\n        }\n\n        if (props.freezeKey != null) {\n            this.setFreezeKey(props.freezeKey);\n        }\n\n        if (props.wipeKey != null) {\n            this.setWipeKey(props.wipeKey);\n        }\n\n        if (props.supplyKey != null) {\n            this.setSupplyKey(props.supplyKey);\n        }\n\n        if (props.autoRenewAccountId != null) {\n            this.setAutoRenewAccountId(props.autoRenewAccountId);\n        }\n\n        if (props.expirationTime != null) {\n            this.setExpirationTime(props.expirationTime);\n        }\n\n        if (props.autoRenewPeriod != null) {\n            this.setAutoRenewPeriod(props.autoRenewPeriod);\n        }\n\n        if (props.tokenMemo != null) {\n            this.setTokenMemo(props.tokenMemo);\n        }\n\n        if (props.feeScheduleKey != null) {\n            this.setFeeScheduleKey(props.feeScheduleKey);\n        }\n\n        if (props.pauseKey != null) {\n            this.setPauseKey(props.pauseKey);\n        }\n    }\n\n    /**\n     * @internal\n     * @param {proto.ITransaction[]} transactions\n     * @param {proto.ISignedTransaction[]} signedTransactions\n     * @param {TransactionId[]} transactionIds\n     * @param {AccountId[]} nodeIds\n     * @param {proto.ITransactionBody[]} bodies\n     * @returns {TokenUpdateTransaction}\n     */\n    static _fromProtobuf(\n        transactions,\n        signedTransactions,\n        transactionIds,\n        nodeIds,\n        bodies\n    ) {\n        const body = bodies[0];\n        const update = /** @type {proto.ITokenUpdateTransactionBody} */ (\n            body.tokenUpdate\n        );\n\n        return Transaction._fromProtobufTransactions(\n            new TokenUpdateTransaction({\n                tokenId:\n                    update.token != null\n                        ? TokenId._fromProtobuf(update.token)\n                        : undefined,\n                tokenName: update.name != null ? update.name : undefined,\n                tokenSymbol: update.symbol != null ? update.symbol : undefined,\n                treasuryAccountId:\n                    update.treasury != null\n                        ? AccountId._fromProtobuf(update.treasury)\n                        : undefined,\n                adminKey:\n                    update.adminKey != null\n                        ? Key._fromProtobufKey(update.adminKey)\n                        : undefined,\n                kycKey:\n                    update.kycKey != null\n                        ? Key._fromProtobufKey(update.kycKey)\n                        : undefined,\n                freezeKey:\n                    update.freezeKey != null\n                        ? Key._fromProtobufKey(update.freezeKey)\n                        : undefined,\n                wipeKey:\n                    update.wipeKey != null\n                        ? Key._fromProtobufKey(update.wipeKey)\n                        : undefined,\n                supplyKey:\n                    update.supplyKey != null\n                        ? Key._fromProtobufKey(update.supplyKey)\n                        : undefined,\n                autoRenewAccountId:\n                    update.autoRenewAccount != null\n                        ? AccountId._fromProtobuf(update.autoRenewAccount)\n                        : undefined,\n                expirationTime:\n                    update.expiry != null\n                        ? Timestamp._fromProtobuf(update.expiry)\n                        : undefined,\n                autoRenewPeriod:\n                    update.autoRenewPeriod != null\n                        ? Duration._fromProtobuf(update.autoRenewPeriod)\n                        : undefined,\n                tokenMemo:\n                    update.memo != null\n                        ? update.memo.value != null\n                            ? update.memo.value\n                            : undefined\n                        : undefined,\n                feeScheduleKey:\n                    update.feeScheduleKey != null\n                        ? Key._fromProtobufKey(update.feeScheduleKey)\n                        : undefined,\n            }),\n            transactions,\n            signedTransactions,\n            transactionIds,\n            nodeIds,\n            bodies\n        );\n    }\n\n    /**\n     * @returns {?TokenId}\n     */\n    get tokenId() {\n        return this._tokenId;\n    }\n\n    /**\n     * @param {TokenId | string} tokenId\n     * @returns {this}\n     */\n    setTokenId(tokenId) {\n        this._requireNotFrozen();\n        this._tokenId =\n            typeof tokenId === \"string\"\n                ? TokenId.fromString(tokenId)\n                : tokenId.clone();\n\n        return this;\n    }\n\n    /**\n     * @returns {?string}\n     */\n    get tokenName() {\n        return this._tokenName;\n    }\n\n    /**\n     * @param {string} name\n     * @returns {this}\n     */\n    setTokenName(name) {\n        this._requireNotFrozen();\n        this._tokenName = name;\n\n        return this;\n    }\n\n    /**\n     * @returns {?string}\n     */\n    get tokenSymbol() {\n        return this._tokenSymbol;\n    }\n\n    /**\n     * @param {string} symbol\n     * @returns {this}\n     */\n    setTokenSymbol(symbol) {\n        this._requireNotFrozen();\n        this._tokenSymbol = symbol;\n\n        return this;\n    }\n\n    /**\n     * @returns {?AccountId}\n     */\n    get treasuryAccountId() {\n        return this._treasuryAccountId;\n    }\n\n    /**\n     * @param {AccountId | string} id\n     * @returns {this}\n     */\n    setTreasuryAccountId(id) {\n        this._requireNotFrozen();\n        this._treasuryAccountId =\n            typeof id === \"string\" ? AccountId.fromString(id) : id.clone();\n\n        return this;\n    }\n\n    /**\n     * @returns {?Key}\n     */\n    get adminKey() {\n        return this._adminKey;\n    }\n\n    /**\n     * @param {Key} key\n     * @returns {this}\n     */\n    setAdminKey(key) {\n        this._requireNotFrozen();\n        this._adminKey = key;\n\n        return this;\n    }\n\n    /**\n     * @returns {?Key}\n     */\n    get kycKey() {\n        return this._kycKey;\n    }\n\n    /**\n     * @param {Key} key\n     * @returns {this}\n     */\n    setKycKey(key) {\n        this._requireNotFrozen();\n        this._kycKey = key;\n\n        return this;\n    }\n\n    /**\n     * @returns {?Key}\n     */\n    get freezeKey() {\n        return this._freezeKey;\n    }\n\n    /**\n     * @param {Key} key\n     * @returns {this}\n     */\n    setFreezeKey(key) {\n        this._requireNotFrozen();\n        this._freezeKey = key;\n\n        return this;\n    }\n\n    /**\n     * @returns {?Key}\n     */\n    get wipeKey() {\n        return this._wipeKey;\n    }\n\n    /**\n     * @param {Key} key\n     * @returns {this}\n     */\n    setWipeKey(key) {\n        this._requireNotFrozen();\n        this._wipeKey = key;\n\n        return this;\n    }\n\n    /**\n     * @returns {?Key}\n     */\n    get supplyKey() {\n        return this._supplyKey;\n    }\n\n    /**\n     * @param {Key} key\n     * @returns {this}\n     */\n    setSupplyKey(key) {\n        this._requireNotFrozen();\n        this._supplyKey = key;\n\n        return this;\n    }\n\n    /**\n     * @deprecated\n     * @param {Key} key\n     * @returns {this}\n     */\n    setsupplyKey(key) {\n        this._requireNotFrozen();\n        this._supplyKey = key;\n\n        return this;\n    }\n\n    /**\n     * @returns {?Timestamp}\n     */\n    get expirationTime() {\n        return this._expirationTime;\n    }\n\n    /**\n     * @param {Timestamp | Date} time\n     * @returns {this}\n     */\n    setExpirationTime(time) {\n        this._requireNotFrozen();\n        this._expirationTime =\n            time instanceof Timestamp ? time : Timestamp.fromDate(time);\n\n        return this;\n    }\n\n    /**\n     * @returns {?AccountId}\n     */\n    get autoRenewAccountId() {\n        return this._autoRenewAccountId;\n    }\n\n    /**\n     * @param {AccountId | string} id\n     * @returns {this}\n     */\n    setAutoRenewAccountId(id) {\n        this._requireNotFrozen();\n        this._autoRenewAccountId =\n            id instanceof AccountId ? id : AccountId.fromString(id);\n\n        return this;\n    }\n\n    /**\n     * @returns {?Duration}\n     */\n    get autoRenewPeriod() {\n        return this._autoRenewPeriod;\n    }\n\n    /**\n     * Set the auto renew period for this token.\n     *\n     * @param {Duration | Long | number} autoRenewPeriod\n     * @returns {this}\n     */\n    setAutoRenewPeriod(autoRenewPeriod) {\n        this._requireNotFrozen();\n        this._autoRenewPeriod =\n            autoRenewPeriod instanceof Duration\n                ? autoRenewPeriod\n                : new Duration(autoRenewPeriod);\n\n        return this;\n    }\n\n    /**\n     * @returns {?string}\n     */\n    get tokenMemo() {\n        return this._tokenMemo;\n    }\n\n    /**\n     * @param {string} tokenMemo\n     * @returns {this}\n     */\n    setTokenMemo(tokenMemo) {\n        this._requireNotFrozen();\n        this._tokenMemo = tokenMemo;\n\n        return this;\n    }\n\n    /**\n     * @returns {?Key}\n     */\n    get feeScheduleKey() {\n        return this._feeScheduleKey;\n    }\n\n    /**\n     * @param {Key} feeScheduleKey\n     * @returns {this}\n     */\n    setFeeScheduleKey(feeScheduleKey) {\n        this._requireNotFrozen();\n        this._feeScheduleKey = feeScheduleKey;\n\n        return this;\n    }\n\n    /**\n     * @returns {?Key}\n     */\n    get pauseKey() {\n        return this._pauseKey;\n    }\n\n    /**\n     * @param {Key} pauseKey\n     * @returns {this}\n     */\n    setPauseKey(pauseKey) {\n        this._requireNotFrozen();\n        this._pauseKey = pauseKey;\n        return this;\n    }\n\n    /**\n     * @returns {this}\n     */\n    clearTokenMemo() {\n        this._requireNotFrozen();\n        this._tokenMemo = null;\n\n        return this;\n    }\n\n    /**\n     * @param {Client} client\n     */\n    _validateChecksums(client) {\n        if (this._tokenId != null) {\n            this._tokenId.validateChecksum(client);\n        }\n\n        if (this._treasuryAccountId != null) {\n            this._treasuryAccountId.validateChecksum(client);\n        }\n\n        if (this._autoRenewAccountId != null) {\n            this._autoRenewAccountId.validateChecksum(client);\n        }\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {proto.ITransaction} request\n     * @returns {Promise<proto.ITransactionResponse>}\n     */\n    _execute(channel, request) {\n        return channel.token.updateToken(request);\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {NonNullable<proto.TransactionBody[\"data\"]>}\n     */\n    _getTransactionDataCase() {\n        return \"tokenUpdate\";\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {proto.ITokenUpdateTransactionBody}\n     */\n    _makeTransactionData() {\n        return {\n            token: this._tokenId != null ? this._tokenId._toProtobuf() : null,\n            name: this.tokenName,\n            symbol: this.tokenSymbol,\n            treasury:\n                this._treasuryAccountId != null\n                    ? this._treasuryAccountId._toProtobuf()\n                    : null,\n            adminKey:\n                this._adminKey != null ? this._adminKey._toProtobufKey() : null,\n            kycKey: this._kycKey != null ? this._kycKey._toProtobufKey() : null,\n            freezeKey:\n                this._freezeKey != null\n                    ? this._freezeKey._toProtobufKey()\n                    : null,\n            wipeKey:\n                this._wipeKey != null ? this._wipeKey._toProtobufKey() : null,\n            supplyKey:\n                this._supplyKey != null\n                    ? this._supplyKey._toProtobufKey()\n                    : null,\n            autoRenewAccount:\n                this._autoRenewAccountId != null\n                    ? this._autoRenewAccountId._toProtobuf()\n                    : null,\n            expiry:\n                this._expirationTime != null\n                    ? this._expirationTime._toProtobuf()\n                    : null,\n            autoRenewPeriod:\n                this._autoRenewPeriod != null\n                    ? this._autoRenewPeriod._toProtobuf()\n                    : null,\n            memo:\n                this._tokenMemo != null\n                    ? {\n                          value: this._tokenMemo,\n                      }\n                    : null,\n            feeScheduleKey:\n                this._feeScheduleKey != null\n                    ? this._feeScheduleKey._toProtobufKey()\n                    : null,\n        };\n    }\n}\n\nTRANSACTION_REGISTRY.set(\n    \"tokenUpdate\",\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    TokenUpdateTransaction._fromProtobuf\n);\n"]},"metadata":{},"sourceType":"module"}