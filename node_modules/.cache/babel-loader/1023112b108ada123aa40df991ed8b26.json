{"ast":null,"code":"import TokenId from \"./TokenId.js\";\nimport Transaction, { TRANSACTION_REGISTRY } from \"../transaction/Transaction.js\";\nimport CustomFixedFee from \"./CustomFixedFee.js\";\nimport CustomFractionalFee from \"./CustomFractionalFee.js\";\nimport CustomRoyaltyFee from \"./CustomRoyaltyFee.js\";\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").ITransaction} proto.ITransaction\n * @typedef {import(\"@hashgraph/proto\").ISignedTransaction} proto.ISignedTransaction\n * @typedef {import(\"@hashgraph/proto\").TransactionBody} proto.TransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionBody} proto.ITransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionResponse} proto.ITransactionResponse\n * @typedef {import(\"@hashgraph/proto\").ITokenFeeScheduleUpdateTransactionBody} proto.ITokenFeeScheduleUpdateTransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITokenID} proto.ITokenID\n */\n\n/**\n * @typedef {import(\"bignumber.js\").default} BigNumber\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../transaction/TransactionId.js\").default} TransactionId\n * @typedef {import(\"./CustomFee.js\").default} CustomFee\n * @typedef {import(\"../account/AccountId.js\").default} AccountId\n */\n\n/**\n * FeeScheduleUpdate a new Hedera™ crypto-currency token.\n */\n\nexport default class TokenFeeScheduleUpdateTransaction extends Transaction {\n  /**\n   * @param {object} [props]\n   * @param {TokenId | string} [props.tokenId]\n   * @param {CustomFee[]} [props.customFees]\n   */\n  constructor() {\n    let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super();\n    /**\n     * @private\n     * @type {?TokenId}\n     */\n\n    this._tokenId = null;\n    /**\n     * @private\n     * @type {CustomFee[]}\n     */\n\n    this._customFees = [];\n\n    if (props.tokenId != null) {\n      this.setTokenId(props.tokenId);\n    }\n\n    if (props.customFees != null) {\n      this.setCustomFees(props.customFees);\n    }\n  }\n  /**\n   * @internal\n   * @param {proto.ITransaction[]} transactions\n   * @param {proto.ISignedTransaction[]} signedTransactions\n   * @param {TransactionId[]} transactionIds\n   * @param {AccountId[]} nodeIds\n   * @param {proto.ITransactionBody[]} bodies\n   * @returns {TokenFeeScheduleUpdateTransaction}\n   */\n\n\n  static _fromProtobuf(transactions, signedTransactions, transactionIds, nodeIds, bodies) {\n    const body = bodies[0];\n    const feeScheduleUpdate =\n    /** @type {proto.ITokenFeeScheduleUpdateTransactionBody} */\n    body.tokenFeeScheduleUpdate;\n    return Transaction._fromProtobufTransactions(new TokenFeeScheduleUpdateTransaction({\n      tokenId: feeScheduleUpdate.tokenId != null ? TokenId._fromProtobuf(feeScheduleUpdate.tokenId) : undefined,\n      customFees: feeScheduleUpdate.customFees != null ? feeScheduleUpdate.customFees.map(fee => {\n        if (fee.fixedFee != null) {\n          return CustomFixedFee._fromProtobuf(fee);\n        } else if (fee.fractionalFee != null) {\n          return CustomFractionalFee._fromProtobuf(fee);\n        } else {\n          return CustomRoyaltyFee._fromProtobuf(fee);\n        }\n      }) : undefined\n    }), transactions, signedTransactions, transactionIds, nodeIds, bodies);\n  }\n  /**\n   * @returns {?TokenId}\n   */\n\n\n  get tokenId() {\n    return this._tokenId;\n  }\n  /**\n   * @param {TokenId | string} tokenId\n   * @returns {this}\n   */\n\n\n  setTokenId(tokenId) {\n    this._requireNotFrozen();\n\n    this._tokenId = typeof tokenId === \"string\" ? TokenId.fromString(tokenId) : TokenId._fromProtobuf(tokenId._toProtobuf());\n    return this;\n  }\n  /**\n   * @returns {CustomFee[]}\n   */\n\n\n  get customFees() {\n    return this._customFees;\n  }\n  /**\n   * @param {CustomFee[]} fees\n   * @returns {this}\n   */\n\n\n  setCustomFees(fees) {\n    this._requireNotFrozen();\n\n    this._customFees = fees;\n    return this;\n  }\n  /**\n   * @override\n   * @internal\n   * @param {Channel} channel\n   * @param {proto.ITransaction} request\n   * @returns {Promise<proto.ITransactionResponse>}\n   */\n\n\n  _execute(channel, request) {\n    return channel.token.updateTokenFeeSchedule(request);\n  }\n  /**\n   * @override\n   * @protected\n   * @returns {NonNullable<proto.TransactionBody[\"data\"]>}\n   */\n\n\n  _getTransactionDataCase() {\n    return \"tokenFeeScheduleUpdate\";\n  }\n  /**\n   * @override\n   * @protected\n   * @returns {proto.ITokenFeeScheduleUpdateTransactionBody}\n   */\n\n\n  _makeTransactionData() {\n    return {\n      tokenId: this._tokenId != null ? this._tokenId._toProtobuf() : null,\n      customFees: this._customFees.map(fee => fee._toProtobuf())\n    };\n  }\n\n}\nTRANSACTION_REGISTRY.set(\"tokenFeeScheduleUpdate\", // eslint-disable-next-line @typescript-eslint/unbound-method\nTokenFeeScheduleUpdateTransaction._fromProtobuf);","map":{"version":3,"sources":["C:/Work/coding-sandbox/react-again/dapp-days/node_modules/@hashgraph/sdk/src/token/TokenFeeScheduleUpdateTransaction.js"],"names":["TokenId","Transaction","TRANSACTION_REGISTRY","CustomFixedFee","CustomFractionalFee","CustomRoyaltyFee","TokenFeeScheduleUpdateTransaction","constructor","props","_tokenId","_customFees","tokenId","setTokenId","customFees","setCustomFees","_fromProtobuf","transactions","signedTransactions","transactionIds","nodeIds","bodies","body","feeScheduleUpdate","tokenFeeScheduleUpdate","_fromProtobufTransactions","undefined","map","fee","fixedFee","fractionalFee","_requireNotFrozen","fromString","_toProtobuf","fees","_execute","channel","request","token","updateTokenFeeSchedule","_getTransactionDataCase","_makeTransactionData","set"],"mappings":"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","sourcesContent":["import TokenId from \"./TokenId.js\";\nimport Transaction, {\n    TRANSACTION_REGISTRY,\n} from \"../transaction/Transaction.js\";\nimport CustomFixedFee from \"./CustomFixedFee.js\";\nimport CustomFractionalFee from \"./CustomFractionalFee.js\";\nimport CustomRoyaltyFee from \"./CustomRoyaltyFee.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").ITransaction} proto.ITransaction\n * @typedef {import(\"@hashgraph/proto\").ISignedTransaction} proto.ISignedTransaction\n * @typedef {import(\"@hashgraph/proto\").TransactionBody} proto.TransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionBody} proto.ITransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionResponse} proto.ITransactionResponse\n * @typedef {import(\"@hashgraph/proto\").ITokenFeeScheduleUpdateTransactionBody} proto.ITokenFeeScheduleUpdateTransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITokenID} proto.ITokenID\n */\n\n/**\n * @typedef {import(\"bignumber.js\").default} BigNumber\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../transaction/TransactionId.js\").default} TransactionId\n * @typedef {import(\"./CustomFee.js\").default} CustomFee\n * @typedef {import(\"../account/AccountId.js\").default} AccountId\n */\n\n/**\n * FeeScheduleUpdate a new Hedera™ crypto-currency token.\n */\nexport default class TokenFeeScheduleUpdateTransaction extends Transaction {\n    /**\n     * @param {object} [props]\n     * @param {TokenId | string} [props.tokenId]\n     * @param {CustomFee[]} [props.customFees]\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @private\n         * @type {?TokenId}\n         */\n        this._tokenId = null;\n\n        /**\n         * @private\n         * @type {CustomFee[]}\n         */\n        this._customFees = [];\n\n        if (props.tokenId != null) {\n            this.setTokenId(props.tokenId);\n        }\n\n        if (props.customFees != null) {\n            this.setCustomFees(props.customFees);\n        }\n    }\n\n    /**\n     * @internal\n     * @param {proto.ITransaction[]} transactions\n     * @param {proto.ISignedTransaction[]} signedTransactions\n     * @param {TransactionId[]} transactionIds\n     * @param {AccountId[]} nodeIds\n     * @param {proto.ITransactionBody[]} bodies\n     * @returns {TokenFeeScheduleUpdateTransaction}\n     */\n    static _fromProtobuf(\n        transactions,\n        signedTransactions,\n        transactionIds,\n        nodeIds,\n        bodies\n    ) {\n        const body = bodies[0];\n        const feeScheduleUpdate =\n            /** @type {proto.ITokenFeeScheduleUpdateTransactionBody} */ (\n                body.tokenFeeScheduleUpdate\n            );\n\n        return Transaction._fromProtobufTransactions(\n            new TokenFeeScheduleUpdateTransaction({\n                tokenId:\n                    feeScheduleUpdate.tokenId != null\n                        ? TokenId._fromProtobuf(feeScheduleUpdate.tokenId)\n                        : undefined,\n                customFees:\n                    feeScheduleUpdate.customFees != null\n                        ? feeScheduleUpdate.customFees.map((fee) => {\n                              if (fee.fixedFee != null) {\n                                  return CustomFixedFee._fromProtobuf(fee);\n                              } else if (fee.fractionalFee != null) {\n                                  return CustomFractionalFee._fromProtobuf(fee);\n                              } else {\n                                  return CustomRoyaltyFee._fromProtobuf(fee);\n                              }\n                          })\n                        : undefined,\n            }),\n            transactions,\n            signedTransactions,\n            transactionIds,\n            nodeIds,\n            bodies\n        );\n    }\n\n    /**\n     * @returns {?TokenId}\n     */\n    get tokenId() {\n        return this._tokenId;\n    }\n\n    /**\n     * @param {TokenId | string} tokenId\n     * @returns {this}\n     */\n    setTokenId(tokenId) {\n        this._requireNotFrozen();\n        this._tokenId =\n            typeof tokenId === \"string\"\n                ? TokenId.fromString(tokenId)\n                : TokenId._fromProtobuf(tokenId._toProtobuf());\n\n        return this;\n    }\n\n    /**\n     * @returns {CustomFee[]}\n     */\n    get customFees() {\n        return this._customFees;\n    }\n\n    /**\n     * @param {CustomFee[]} fees\n     * @returns {this}\n     */\n    setCustomFees(fees) {\n        this._requireNotFrozen();\n        this._customFees = fees;\n\n        return this;\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {proto.ITransaction} request\n     * @returns {Promise<proto.ITransactionResponse>}\n     */\n    _execute(channel, request) {\n        return channel.token.updateTokenFeeSchedule(request);\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {NonNullable<proto.TransactionBody[\"data\"]>}\n     */\n    _getTransactionDataCase() {\n        return \"tokenFeeScheduleUpdate\";\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {proto.ITokenFeeScheduleUpdateTransactionBody}\n     */\n    _makeTransactionData() {\n        return {\n            tokenId: this._tokenId != null ? this._tokenId._toProtobuf() : null,\n            customFees: this._customFees.map((fee) => fee._toProtobuf()),\n        };\n    }\n}\n\nTRANSACTION_REGISTRY.set(\n    \"tokenFeeScheduleUpdate\",\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    TokenFeeScheduleUpdateTransaction._fromProtobuf\n);\n"]},"metadata":{},"sourceType":"module"}