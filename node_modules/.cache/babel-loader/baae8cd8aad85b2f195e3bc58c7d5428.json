{"ast":null,"code":"/**\n * @param {string} text\n * @returns {Uint8Array}\n */\nexport function decode(text) {\n  // note: assumes <atob> is available in the global scope if <Buffer> is not\n  return Uint8Array.from(atob(text), c => c.charCodeAt(0));\n}\n/**\n * @param {Uint8Array} data\n * @returns {string};\n */\n\nexport function encode(data) {\n  // note: assumes <btoa> is available in the global scope if <Buffer> is not\n  return btoa(String.fromCharCode.apply(null, Array.from(data)));\n}","map":{"version":3,"sources":["C:/Work/coding-sandbox/react-again/dapp-days/node_modules/@hashgraph/cryptography/src/encoding/base64.browser.js"],"names":["decode","text","Uint8Array","from","atob","c","charCodeAt","encode","data","btoa","String","fromCharCode","apply","Array"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAO,SAASA,MAAT,CAAgBC,IAAhB,EAAsB;AACzB;AACA,SAAOC,UAAU,CAACC,IAAX,CAAgBC,IAAI,CAACH,IAAD,CAApB,EAA6BI,CAAD,IAAOA,CAAC,CAACC,UAAF,CAAa,CAAb,CAAnC,CAAP;AACH;AAED;AACA;AACA;AACA;;AACA,OAAO,SAASC,MAAT,CAAgBC,IAAhB,EAAsB;AACzB;AACA,SAAOC,IAAI,CAACC,MAAM,CAACC,YAAP,CAAoBC,KAApB,CAA0B,IAA1B,EAAgCC,KAAK,CAACV,IAAN,CAAWK,IAAX,CAAhC,CAAD,CAAX;AACH","sourcesContent":["/**\n * @param {string} text\n * @returns {Uint8Array}\n */\nexport function decode(text) {\n    // note: assumes <atob> is available in the global scope if <Buffer> is not\n    return Uint8Array.from(atob(text), (c) => c.charCodeAt(0));\n}\n\n/**\n * @param {Uint8Array} data\n * @returns {string};\n */\nexport function encode(data) {\n    // note: assumes <btoa> is available in the global scope if <Buffer> is not\n    return btoa(String.fromCharCode.apply(null, Array.from(data)));\n}\n"]},"metadata":{},"sourceType":"module"}