{"ast":null,"code":"/**\n * @typedef {import(\"./contract/ContractId.js\").default} ContractId\n * @typedef {import(\"./account/AccountId.js\").default} AccountId\n * @typedef {import(\"./KeyList.js\").default} KeyList\n * @typedef {import(\"./PublicKey.js\").default} PublicKey\n * @typedef {import(\"./PrivateKey.js\").default} PrivateKey\n */\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").IKey} proto.IKey\n * @typedef {import(\"@hashgraph/proto\").IKeyList} proto.IKeyList\n * @typedef {import(\"@hashgraph/proto\").IThresholdKey} proto.IThresholdKey\n * @typedef {import(\"@hashgraph/proto\").IContractID} proto.IContractID\n */\n\n/**\n * @namespace cryptography\n * @typedef {import(\"@hashgraph/cryptography\").PrivateKey} cryptography.PrivateKey\n */\n\n/**\n * @template {object} ProtobufT\n * @template {object} SdkT\n * @typedef {{ (proto: ProtobufT): SdkT }} FromProtobufKeyFuncT\n */\nconst CACHE = {\n  /** @type {FromProtobufKeyFuncT<proto.IContractID, ContractId> | null} */\n  contractId: null,\n\n  /** @type {FromProtobufKeyFuncT<proto.IKeyList, KeyList> | null} */\n  keyList: null,\n\n  /** @type {FromProtobufKeyFuncT<proto.IThresholdKey, KeyList> | null} */\n  thresholdKey: null,\n\n  /** @type {FromProtobufKeyFuncT<Uint8Array, PublicKey> | null} */\n  publicKeyED25519: null,\n\n  /** @type {FromProtobufKeyFuncT<Uint8Array, PublicKey> | null} */\n  publicKeyECDSA: null,\n\n  /** @type {((key: cryptography.PrivateKey) => PrivateKey) | null} */\n  privateKeyConstructor: null,\n\n  /** @type {((shard: Long | number, realm: Long | number, key: PublicKey) => AccountId) | null} */\n  accountIdConstructor: null,\n\n  /** @type {FromProtobufKeyFuncT<proto.IContractID, ContractId> | null} */\n  delegateContractId: null\n};\nexport default CACHE;","map":{"version":3,"sources":["C:/Work/coding-sandbox/react-again/dapp-days/node_modules/@hashgraph/sdk/src/Cache.js"],"names":["CACHE","contractId","keyList","thresholdKey","publicKeyED25519","publicKeyECDSA","privateKeyConstructor","accountIdConstructor","delegateContractId"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA,MAAMA,KAAK,GAAG;AACV;AACAC,EAAAA,UAAU,EAAE,IAFF;;AAIV;AACAC,EAAAA,OAAO,EAAE,IALC;;AAOV;AACAC,EAAAA,YAAY,EAAE,IARJ;;AAUV;AACAC,EAAAA,gBAAgB,EAAE,IAXR;;AAaV;AACAC,EAAAA,cAAc,EAAE,IAdN;;AAgBV;AACAC,EAAAA,qBAAqB,EAAE,IAjBb;;AAmBV;AACAC,EAAAA,oBAAoB,EAAE,IApBZ;;AAsBV;AACAC,EAAAA,kBAAkB,EAAE;AAvBV,CAAd;AA0BA,eAAeR,KAAf","sourcesContent":["/**\n * @typedef {import(\"./contract/ContractId.js\").default} ContractId\n * @typedef {import(\"./account/AccountId.js\").default} AccountId\n * @typedef {import(\"./KeyList.js\").default} KeyList\n * @typedef {import(\"./PublicKey.js\").default} PublicKey\n * @typedef {import(\"./PrivateKey.js\").default} PrivateKey\n */\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").IKey} proto.IKey\n * @typedef {import(\"@hashgraph/proto\").IKeyList} proto.IKeyList\n * @typedef {import(\"@hashgraph/proto\").IThresholdKey} proto.IThresholdKey\n * @typedef {import(\"@hashgraph/proto\").IContractID} proto.IContractID\n */\n\n/**\n * @namespace cryptography\n * @typedef {import(\"@hashgraph/cryptography\").PrivateKey} cryptography.PrivateKey\n */\n\n/**\n * @template {object} ProtobufT\n * @template {object} SdkT\n * @typedef {{ (proto: ProtobufT): SdkT }} FromProtobufKeyFuncT\n */\n\nconst CACHE = {\n    /** @type {FromProtobufKeyFuncT<proto.IContractID, ContractId> | null} */\n    contractId: null,\n\n    /** @type {FromProtobufKeyFuncT<proto.IKeyList, KeyList> | null} */\n    keyList: null,\n\n    /** @type {FromProtobufKeyFuncT<proto.IThresholdKey, KeyList> | null} */\n    thresholdKey: null,\n\n    /** @type {FromProtobufKeyFuncT<Uint8Array, PublicKey> | null} */\n    publicKeyED25519: null,\n\n    /** @type {FromProtobufKeyFuncT<Uint8Array, PublicKey> | null} */\n    publicKeyECDSA: null,\n\n    /** @type {((key: cryptography.PrivateKey) => PrivateKey) | null} */\n    privateKeyConstructor: null,\n\n    /** @type {((shard: Long | number, realm: Long | number, key: PublicKey) => AccountId) | null} */\n    accountIdConstructor: null,\n\n    /** @type {FromProtobufKeyFuncT<proto.IContractID, ContractId> | null} */\n    delegateContractId: null,\n};\n\nexport default CACHE;\n"]},"metadata":{},"sourceType":"module"}