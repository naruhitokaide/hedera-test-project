{"ast":null,"code":"var _jsxFileName = \"C:\\\\Work\\\\coding-sandbox\\\\react-again\\\\dapp-days\\\\src\\\\components\\\\CreateButton.jsx\";\nimport React from \"react\";\nimport { Client, AccountId, PrivateKey, TokenCreateTransaction } from \"@hashgraph/sdk\";\nimport operator from \"../config.js\"; //\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst operatorId = AccountId.fromString(operator.id);\nconst operatorKey = PrivateKey.fromString(operator.pvkey);\nconst client = Client.forTestnet().setOperator(operatorId, operatorKey);\n\nfunction CreateButton() {\n  async function tokenCreate() {\n    console.log(\"- Creating token\");\n    const tokenCreateTx = new TokenCreateTransaction().setTokenName(\"dAppDayToken\").setTokenSymbol(\"DDT\").setTreasuryAccountId(operatorId).setInitialSupply(100).setDecimals(0).freezeWith(client);\n    const tokenCreateSign = await tokenCreateTx.sign(operatorKey);\n    const tokenCreateSubmit = await tokenCreateSign.execute(client);\n    const tokenCreateRec = await tokenCreateSubmit.getRecord(client);\n    const tokenId = tokenCreateRec.receipt.tokenId;\n    console.log(`- Token ID: ${tokenId}`);\n    return tokenId;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createButton,\n      className: \"cta-button connect-wallet-button\",\n      children: \"Create Tokens\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 3\n  }, this);\n}\n\n_c = CreateButton;\nexport default createButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateButton\");","map":{"version":3,"sources":["C:/Work/coding-sandbox/react-again/dapp-days/src/components/CreateButton.jsx"],"names":["React","Client","AccountId","PrivateKey","TokenCreateTransaction","operator","operatorId","fromString","id","operatorKey","pvkey","client","forTestnet","setOperator","CreateButton","tokenCreate","console","log","tokenCreateTx","setTokenName","setTokenSymbol","setTreasuryAccountId","setInitialSupply","setDecimals","freezeWith","tokenCreateSign","sign","tokenCreateSubmit","execute","tokenCreateRec","getRecord","tokenId","receipt","createButton"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,UAA5B,EAAwCC,sBAAxC,QAAsE,gBAAtE;AACA,OAAOC,QAAP,MAAqB,cAArB,C,CACA;;;AACA,MAAMC,UAAU,GAAGJ,SAAS,CAACK,UAAV,CAAqBF,QAAQ,CAACG,EAA9B,CAAnB;AACA,MAAMC,WAAW,GAAGN,UAAU,CAACI,UAAX,CAAsBF,QAAQ,CAACK,KAA/B,CAApB;AACA,MAAMC,MAAM,GAAGV,MAAM,CAACW,UAAP,GAAoBC,WAApB,CAAgCP,UAAhC,EAA4CG,WAA5C,CAAf;;AAEA,SAASK,YAAT,GAAwB;AACvB,iBAAeC,WAAf,GAA6B;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AAEA,UAAMC,aAAa,GAAG,IAAId,sBAAJ,GACpBe,YADoB,CACP,cADO,EAEpBC,cAFoB,CAEL,KAFK,EAGpBC,oBAHoB,CAGCf,UAHD,EAIpBgB,gBAJoB,CAIH,GAJG,EAKpBC,WALoB,CAKR,CALQ,EAMpBC,UANoB,CAMTb,MANS,CAAtB;AAOA,UAAMc,eAAe,GAAG,MAAMP,aAAa,CAACQ,IAAd,CAAmBjB,WAAnB,CAA9B;AACA,UAAMkB,iBAAiB,GAAG,MAAMF,eAAe,CAACG,OAAhB,CAAwBjB,MAAxB,CAAhC;AACA,UAAMkB,cAAc,GAAG,MAAMF,iBAAiB,CAACG,SAAlB,CAA4BnB,MAA5B,CAA7B;AACA,UAAMoB,OAAO,GAAGF,cAAc,CAACG,OAAf,CAAuBD,OAAvC;AAEAf,IAAAA,OAAO,CAACC,GAAR,CAAa,eAAcc,OAAQ,EAAnC;AACA,WAAOA,OAAP;AACA;;AAED,sBACC;AAAA,2BACC;AAAQ,MAAA,OAAO,EAAEE,YAAjB;AAA+B,MAAA,SAAS,EAAC,kCAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAOA;;KA3BQnB,Y;AA4BT,eAAemB,YAAf","sourcesContent":["import React from \"react\";\r\nimport { Client, AccountId, PrivateKey, TokenCreateTransaction } from \"@hashgraph/sdk\";\r\nimport operator from \"../config.js\";\r\n//\r\nconst operatorId = AccountId.fromString(operator.id);\r\nconst operatorKey = PrivateKey.fromString(operator.pvkey);\r\nconst client = Client.forTestnet().setOperator(operatorId, operatorKey);\r\n\r\nfunction CreateButton() {\r\n\tasync function tokenCreate() {\r\n\t\tconsole.log(\"- Creating token\");\r\n\r\n\t\tconst tokenCreateTx = new TokenCreateTransaction()\r\n\t\t\t.setTokenName(\"dAppDayToken\")\r\n\t\t\t.setTokenSymbol(\"DDT\")\r\n\t\t\t.setTreasuryAccountId(operatorId)\r\n\t\t\t.setInitialSupply(100)\r\n\t\t\t.setDecimals(0)\r\n\t\t\t.freezeWith(client);\r\n\t\tconst tokenCreateSign = await tokenCreateTx.sign(operatorKey);\r\n\t\tconst tokenCreateSubmit = await tokenCreateSign.execute(client);\r\n\t\tconst tokenCreateRec = await tokenCreateSubmit.getRecord(client);\r\n\t\tconst tokenId = tokenCreateRec.receipt.tokenId;\r\n\r\n\t\tconsole.log(`- Token ID: ${tokenId}`);\r\n\t\treturn tokenId;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<button onClick={createButton} className=\"cta-button connect-wallet-button\">\r\n\t\t\t\tCreate Tokens\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default createButton;\r\n"]},"metadata":{},"sourceType":"module"}